{"version":3,"file":"bundle.js","sources":["../../src/script/Start.ts","../../src/algorithms/back-tracking/rat-in-maze.ts","../../src/algorithms/back-tracking/sudoku-solver.ts","../../src/script/BackTracingTest.ts","../../src/script/Go2StartScene.ts","../../src/script/UnitConsole.ts","../../src/data_structures/data_models/Value-pair.ts","../../src/util.ts","../../src/data_structures/Dictionary.ts","../../src/script/DictionaryTest.ts","../../src/algorithms/dynamic-programing/knapsackDP.ts","../../src/algorithms/dynamic-programing/longest-common-subsequenceDP.ts","../../src/algorithms/dynamic-programing/matrix-chain-multiplicationDP.ts","../../src/algorithms/dynamic-programing/min-coin-changeDP.ts","../../src/script/DynamicProgramingTest.ts","../../src/script/FunctionalTest.ts","../../src/data_structures/Queue.ts","../../src/algorithms/graph/breadth-first-search.ts","../../src/algorithms/graph/depth-first-search.ts","../../src/algorithms/graph/dijkstra.ts","../../src/algorithms/graph/Floyd-warshall.ts","../../src/algorithms/graph/kruskal.ts","../../src/algorithms/graph/prim.ts","../../src/data_structures/Graph.ts","../../src/data_structures/Stack.ts","../../src/script/GraphTest.ts","../../src/algorithms/greedy/knapsackGreedy.ts","../../src/algorithms/greedy/min-coin-changeGreedy.ts","../../src/script/GreedyTest.ts","../../src/data_structures/data_models/Node.ts","../../src/data_structures/LinkedList.ts","../../src/data_structures/HashTable.ts","../../src/script/HashTableTest.ts","../../src/data_structures/Heap.ts","../../src/algorithms/sorting/heap-sort.ts","../../src/script/HeapTest.ts","../../src/script/LinkedListTest.ts","../../src/script/QueueTest.ts","../../src/script/RecursiveTest.ts","../../src/algorithms/sorting/quick-sort.ts","../../src/algorithms/search/binary-search.ts","../../src/algorithms/search/binary-search-iteration.ts","../../src/algorithms/search/interpolation-search.ts","../../src/algorithms/search/sequential-search.ts","../../src/script/SearchTest.ts","../../src/data_structures/Set.ts","../../src/script/SetTest.ts","../../src/algorithms/shuffle/fisher-yates.ts","../../src/algorithms/sorting/bubble-sort.ts","../../src/algorithms/sorting/insertion-sort.ts","../../src/algorithms/sorting/bucket-sort.ts","../../src/algorithms/search/min-max-search.ts","../../src/algorithms/sorting/counting-sort.ts","../../src/algorithms/sorting/merge-sort.ts","../../src/algorithms/sorting/radix-sort.ts","../../src/algorithms/sorting/selection-sort.ts","../../src/algorithms/sorting/shell-sort.ts","../../src/script/SortingTest.ts","../../src/script/StackTest.ts","../../src/data_structures/Tree.ts","../../src/script/TreeTest.ts","../../src/ui/layaMaxUI.ts","../../src/GameConfig.ts","../../src/Main.ts"],"sourcesContent":["import { Laya } from \"Laya\";\r\nimport { Script } from \"laya/components/Script\";\r\nimport { Scene } from \"laya/display/Scene\";\r\n\r\nexport default class Start extends Script {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onEnable() {\r\n\r\n    }\r\n\r\n    onClick() {\r\n        // Scene.open('test/BackTracingScene.scene');\r\n        // console.log(this.owner);\r\n        switch (this.owner.name) {\r\n            case 'btn0':\r\n                Scene.open('test/ConsoleUnit.scene');\r\n                break\r\n            case 'btn1':\r\n                Scene.open('test/StackScene.scene');\r\n                break;\r\n            case 'btn2':\r\n                Scene.open('test/QueueScene.scene');\r\n                break\r\n            case 'btn3':\r\n                Scene.open('test/LinkedListScene.scene');\r\n                break;\r\n            case 'btn4':\r\n                Scene.open('test/SetScene.scene');\r\n                break\r\n            case 'btn5':\r\n                Scene.open('test/DictionaryScene.scene');\r\n                break;\r\n            case 'btn6':\r\n                Scene.open('test/HashTableScene.scene');\r\n                break\r\n            case 'btn7':\r\n                Scene.open('test/RecursiveScene.scene');\r\n                break;\r\n            case 'btn8':\r\n                Scene.open('test/TreeScene.scene');\r\n                break\r\n            case 'btn9':\r\n                Scene.open('test/HeapScene.scene');\r\n                break;\r\n            case 'btn10':\r\n                Scene.open('test/GraphScene.scene');\r\n                break\r\n            case 'btn11':\r\n                Scene.open('test/SortingScene.scene');\r\n                break;\r\n            case 'btn12':\r\n                Scene.open('test/SearchScene.scene');\r\n                break\r\n            case 'btn13':\r\n                Scene.open('test/DynamicProgramingScene.scene');\r\n                break;\r\n            case 'btn14':\r\n                Scene.open('test/GreedyScene.scene');\r\n                break\r\n            case 'btn15':\r\n                Scene.open('test/BackTracingScene.scene');\r\n                break;\r\n            case 'btn16':\r\n                Scene.open('test/FunctionalTest.scene');\r\n                break;\r\n        }\r\n    }\r\n}","export function ratInAMaze(maze: number[][]): number[][] | string {\r\n    const solution: number[][] = [];\r\n\r\n    for (let i = 0; i < maze.length; i++) {\r\n        solution[i] = [];\r\n        for (let j = 0; j < maze[i].length; j++)solution[i][j] = 0;\r\n    }\r\n\r\n    if (findPath(maze, 0, 0, solution) === true) {\r\n        return solution;\r\n    } else {\r\n        return 'NO PATH FOUND';\r\n    }\r\n}\r\n\r\nfunction findPath(maze: number[][], x: number, y: number, solution: number[][]): boolean {\r\n    const n = maze.length;\r\n    if (x === n - 1 && y === n - 1) {\r\n        solution[x][y] = 1;\r\n        return true;\r\n    }\r\n\r\n    if (isSafe(maze, x, y) === true) {\r\n        solution[x][y] = 1;\r\n\r\n        if (findPath(maze, x + 1, y, solution)) return true;\r\n        if (findPath(maze, x, y + 1, solution)) return true;\r\n\r\n        solution[x][y] = 0;\r\n        return false;\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction isSafe(maze: number[][], x: number, y: number): boolean {\r\n    const n = maze.length;\r\n    if (x >= 0 && y >= 0 && x < n && y < n && maze[x][y] !== 0) return true;\r\n    return false;\r\n}","const UNASSIGNED = 0;\r\n\r\nexport function sudokuSolver(grid: number[][]): number[][] | string {\r\n    if (solveSudoku(grid) === true) {\r\n        return grid;\r\n    } else {\r\n        return 'NO SOLUTION EXISTS!';\r\n    }\r\n}\r\n\r\nfunction solveSudoku(grid: number[][]): boolean {\r\n    let row = 0;\r\n    let col = 0;\r\n    let checkBlankSpaces = false;\r\n\r\n    for (row = 0; row < grid.length; row++) {\r\n        for (col = 0; col < grid[row].length; col++) {\r\n            if (grid[row][col] === UNASSIGNED) {\r\n                checkBlankSpaces = true;\r\n                break;\r\n            }\r\n        }\r\n        if (checkBlankSpaces === true) break;\r\n    }\r\n\r\n    if (checkBlankSpaces === false) return true;\r\n\r\n    for (let num = 1; num <= 9; num++) {\r\n        if (isSafe(grid, row, col, num)) {\r\n            grid[row][col] = num;\r\n            if (solveSudoku(grid)) return true;\r\n        }\r\n        grid[row][col] = UNASSIGNED;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction usedInRow(grid: number[][], row: number, num: number): boolean {\r\n    for (let col = 0; col < grid.length; col++)if (grid[row][col] === num) return true;\r\n    return false;\r\n}\r\n\r\nfunction usedInCol(grid: number[][], col: number, num: number): boolean {\r\n    for (let row = 0; row < grid.length; row++)if (grid[row][col] === num) return true;\r\n    return false;\r\n}\r\n\r\nfunction usedInBox(grid: number[][], boxStartRow: number, boxStartCol: number, num: number): boolean {\r\n    for (let row = 0; row < 3; row++)for (let col = 0; col < 3; col++)if (grid[row + boxStartRow][col + boxStartCol] === num) return true;\r\n    return false;\r\n}\r\n\r\nfunction isSafe(grid: number[][], row: number, col: number, num: number): boolean {\r\n    return (!usedInRow(grid, row, num) && !usedInCol(grid, col, num) && !usedInBox(grid, row - row % 3, col - col % 3, num));\r\n}","import { Script } from \"laya/components/Script\";\r\nimport { ratInAMaze } from \"../algorithms/back-tracking/rat-in-maze\";\r\nimport { sudokuSolver } from \"../algorithms/back-tracking/sudoku-solver\";\r\n\r\n\r\nexport default class BackTracingTest extends Script {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onEnable() {\r\n        console.log('BackTracingTest~~~');\r\n\r\n        const maze = [\r\n            [1, 0, 0, 0],\r\n            [1, 1, 1, 1],\r\n            [0, 0, 1, 0],\r\n            [0, 1, 1, 1]\r\n        ];\r\n\r\n        console.log('ratInAMaze: ', ratInAMaze(maze));\r\n\r\n        // const sudokuGrid = [\r\n        //     [5, 3, 0, 0, 7, 0, 0, 0, 0],\r\n        //     [6, 0, 0, 1, 9, 5, 0, 0, 0],\r\n        //     [0, 9, 8, 0, 0, 0, 0, 6, 0],\r\n        //     [8, 0, 0, 0, 6, 0, 0, 0, 3],\r\n        //     [4, 0, 0, 8, 0, 3, 0, 0, 1],\r\n        //     [7, 0, 0, 0, 2, 0, 0, 0, 6],\r\n        //     [0, 6, 0, 0, 0, 0, 2, 8, 0],\r\n        //     [0, 0, 0, 4, 1, 9, 0, 0, 5],\r\n        //     [0, 0, 0, 0, 8, 0, 0, 7, 9]\r\n        // ];\r\n\r\n        const sudokuGrid = [\r\n            [7, 0, 0, 0, 0, 6, 0, 0, 0],\r\n            [4, 8, 0, 0, 0, 9, 0, 7, 0],\r\n            [0, 0, 0, 4, 0, 0, 2, 5, 0],\r\n            [6, 0, 0, 0, 2, 0, 0, 1, 0],\r\n            [0, 9, 0, 0, 0, 0, 0, 6, 0],\r\n            [0, 0, 1, 0, 0, 7, 4, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 3],\r\n            [0, 0, 0, 1, 4, 0, 0, 0, 6],\r\n            [0, 0, 2, 7, 0, 0, 0, 0, 9]\r\n        ];\r\n\r\n        console.log(`sudokuSolver\r\n\r\n        [7, 0, 0, 0, 0, 6, 0, 0, 0],\r\n        [4, 8, 0, 0, 0, 9, 0, 7, 0],\r\n        [0, 0, 0, 4, 0, 0, 2, 5, 0],\r\n        [6, 0, 0, 0, 2, 0, 0, 1, 0],\r\n        [0, 9, 0, 0, 0, 0, 0, 6, 0],\r\n        [0, 0, 1, 0, 0, 7, 4, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 3],\r\n        [0, 0, 0, 1, 4, 0, 0, 0, 6],\r\n        [0, 0, 2, 7, 0, 0, 0, 0, 9]\r\n        :`, sudokuSolver(sudokuGrid)\r\n        );\r\n    }\r\n}","import { Laya } from \"Laya\";\r\nimport { Script } from \"laya/components/Script\";\r\nimport { Scene } from \"laya/display/Scene\";\r\n\r\nexport default class Go2StartScene extends Script{\r\n    constructor(){\r\n        super();\r\n    }\r\n\r\n    onEnable(){\r\n\r\n    }\r\n\r\n    onClick(){\r\n        Scene.open('Start.scene');\r\n    }\r\n}","import { Script } from \"laya/components/Script\";\r\nimport { timer } from \"Laya\";\r\nimport { Stack } from \"../data_structures/Stack\";\r\n\r\nconst lele: number = 3.14;\r\n\r\nexport default class UnitConsole extends Script {\r\n    constructor() {\r\n        super();\r\n        const lalala: number = 9;\r\n    }\r\n\r\n    onEnable() {\r\n        console.time('a1')\r\n        let aa = 1;\r\n        for (let i: number = 0; i < 1000; i++) {\r\n            aa *= 2;\r\n        }\r\n        console.timeEnd('a1');//a1: 0.02001953125ms\r\n\r\n        console.time('a2')\r\n        let bb = 1;\r\n        for (let j: number = 0; j < 1000; j++) {\r\n            bb << 1;\r\n        }\r\n        console.timeEnd('a2');//a2: 0.013916015625ms\r\n\r\n        //a1 - a2 = 0.006103515625\r\n        console.log(lele)\r\n\r\n        let [a, b] = [1, 2]\r\n        console.log(a, ' / ', b);\r\n        [a, b] = [b, a];\r\n        console.log(a, ' / ', b);\r\n\r\n        let c = a ** 3;\r\n        console.log(`c:${c}`)\r\n\r\n        const fibonacci = [];\r\n        fibonacci[0] = 1;\r\n        fibonacci[1] = 1;\r\n        for (let i: number = 2; i < 20; i++) {\r\n            fibonacci[i] = fibonacci[i - 1] + fibonacci[i - 2];\r\n        }\r\n        console.log(fibonacci);\r\n\r\n        fibonacci.splice(5, 0, -1, -2, -3);\r\n        console.log(fibonacci);\r\n\r\n        let tm = [\r\n            [1, 2],\r\n            [3, 4],\r\n            [5, 6]\r\n        ];\r\n        for (let i: number = 0; i < tm.length; i++) {\r\n            for (let j: number = 0; j < tm[0].length; j++) {\r\n                console.log(tm[i][j]);\r\n            }\r\n        }\r\n        console.table(tm);\r\n\r\n        const m333 = [];\r\n        for (let i = 0; i < 3; i++) {\r\n            m333[i] = [];\r\n            for (let j = 0; j < 3; j++) {\r\n                m333[i][j] = []\r\n                for (let k = 0; k < 3; k++) {\r\n                    m333[i][j][k] = i + j + k;\r\n                }\r\n            }\r\n        }\r\n        console.log(m333);\r\n        console.table(m333);\r\n\r\n        let cc = [1, 3, 5, 7, 8];\r\n        let mtc = (x: number) => {\r\n            console.log(x);\r\n            return x % 2 === 0;\r\n        }\r\n\r\n        console.log('every:', cc.every(mtc));\r\n        console.log('some', cc.some(mtc));\r\n        console.log('---------');\r\n\r\n        cc.forEach((a, b, c) => { a *= 2; console.log(a, b, c); });\r\n        console.log(cc)\r\n\r\n        console.log('map:', cc.map(mtc));\r\n        console.log('filter:', cc.filter(mtc));\r\n\r\n        console.log('reduce:', cc.reduce((m, n) => { return m + n }));//console.log('reduce:', cc.reduce((m, n) => m + n ));//Omitted \"return\"\r\n\r\n        let dd = [1, 2, 3, 4, 5];\r\n\r\n        let iterator = cc[Symbol.iterator]();\r\n        console.log(iterator);\r\n        for (let i = 0; i < 5; i++)console.log(iterator.next().value);\r\n        console.log('---------');\r\n        iterator = cc[Symbol.iterator]();//iterator's state update\r\n        for (let nn of iterator) console.log(nn);\r\n\r\n        // let entries=cc.entries();\r\n        let [entries, keys, values] = [cc.entries(), cc.keys(), cc.values()];\r\n        for (let i of entries) console.log('entries:', i);\r\n        for (let i of keys) console.log('keys:', i);\r\n        for (let i of values) console.log('values:', i);\r\n\r\n        let ee = Array.from(cc);\r\n        console.log('from:', ee);\r\n        let ff = Array.from(ee, a => a % 2 == 1);\r\n        console.log('from cb:', ff);\r\n\r\n        let gg = Array.of(1);\r\n        gg = Array.of(...ee);\r\n        console.log('of:', gg);\r\n\r\n        let hh = Array.of(...gg);\r\n        hh.fill(0);\r\n        console.log('fill:', hh);\r\n\r\n        let ii = Array.from(gg);\r\n        ii.copyWithin(0, 3);\r\n        console.log('copyWithin:', ii);\r\n\r\n        let jj = new Array(15);\r\n        jj.fill(1);\r\n        for (let i = 0; i < 15; i++)jj[i] = jj[i] + i;\r\n        let multiple3 = (a: number, b: number, c?: Array<number>) => { return a % 3 == 0 }\r\n        console.log(jj);\r\n        console.log('find:', jj.find(multiple3));\r\n        console.log('findIndex:', jj.findIndex(multiple3));\r\n\r\n        const friends = [\r\n            { name: 'john', age: 30 },\r\n            { name: 'ana', age: 20 },\r\n            { name: 'chris', age: 25 },\r\n        ];\r\n        let comparePenson = (z1: any, z2: any) => {\r\n            let rt = 0;\r\n            z1.age < z2.age ? rt = -1 : rt = 1;\r\n            return rt;\r\n        }\r\n        console.log('Array sort:', friends.sort(comparePenson));\r\n\r\n        console.log('join:', jj.join('~'));\r\n\r\n        let lt = 50;\r\n        let int16 = new Int16Array(lt);\r\n        let array16 = [];\r\n        array16.length = lt;\r\n        for (let i = 0; i < lt; i++)int16[i] = i++;\r\n        console.log('TypedArray:', int16);\r\n\r\n    }\r\n\r\n}","export class ValuePair<K, V>{\r\n    constructor(public key: K, public value: V) {\r\n\r\n    }\r\n\r\n    public toString(): string {\r\n        return `[#${this.key}:${this.value}]`;\r\n    }\r\n}\r\n\r\nexport class ValuePairLazy<K, V> extends ValuePair<K, V>{\r\n    constructor(public key: K, public value: V, public isDeleted = false) {\r\n        super(key, value);\r\n    }\r\n}","export type ICompareFunction<T> = (a: T, b: T) => number;\r\n\r\nexport type IEqualsFunction<T> = (a: T, b: T) => boolean;\r\n\r\nexport type IDiffFunction<T> = (a: T, b: T) => number;\r\n\r\nexport const DOES_NOT_EXIST = -1;\r\n\r\nexport enum Compare { LESS_THAN = -1, BIGGER_THAN = 1, EQUALS = 0 }\r\n\r\nexport enum Colors { WHITE = 0, GRAY = 1, BLACK = 2 }\r\n\r\nexport function defaultEquals<T>(a: T, b: T): boolean {\r\n    return a === b;\r\n}\r\n\r\nexport function defaultCompare<T>(a: T, b: T): number {\r\n    if (a === b) return Compare.EQUALS;\r\n    return a < b ? Compare.LESS_THAN : Compare.BIGGER_THAN;\r\n}\r\n\r\nexport function default2String(item: any): string {\r\n    if (item === null) {\r\n        return 'NULL';\r\n    } else if (item === undefined) {\r\n        return 'UNDEFINED';\r\n    } else if (typeof item === 'string' || item instanceof String) {\r\n        return `${item}`;\r\n    }\r\n    (item as Object).toString();\r\n}\r\n\r\nexport function swap(array: any[], a: number, b: number) {\r\n    [array[a], array[b]] = [array[b], array[a]];\r\n}\r\n\r\nexport function reverseCompare<T>(compareFn: ICompareFunction<T>): ICompareFunction<T> {\r\n    return (a, b) => compareFn(b, a);\r\n}\r\n\r\nexport function defaultDiff<T>(a: T, b: T): number {\r\n    return Number(a) - Number(b);\r\n}\r\n\r\nexport function lesserEquals<T>(a: T, b: T, compareFn: ICompareFunction<T>): boolean {\r\n    const comp = compareFn(a, b);\r\n    return comp === Compare.LESS_THAN || comp === Compare.EQUALS;\r\n}\r\n\r\nexport function biggerEquals<T>(a: T, b: T, compareFn: ICompareFunction<T>): boolean {\r\n    const comp = compareFn(a, b);\r\n    return comp === Compare.BIGGER_THAN || comp === Compare.EQUALS;\r\n}\r\n","import { ValuePair } from \"./data_models/Value-pair\";\r\nimport { default2String } from \"../util\";\r\n\r\nexport default class Dictionary<K, V>{\r\n    private table: { [key: string]: ValuePair<K, V> }\r\n\r\n    constructor(private toStrFn: (key: K | string) => string = default2String) {\r\n        this.table = {};\r\n    }\r\n\r\n    public set(key: K, value: V): boolean {\r\n        if (key != null && value != null) {\r\n            const tableKey = this.toStrFn(key);\r\n            this.table[tableKey] = new ValuePair(key, value);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public get(key: K): V {\r\n        const valuePair = this.table[this.toStrFn(key)];\r\n        return valuePair == null ? undefined : valuePair.value;\r\n    }\r\n\r\n    public hasKey(key: K | string): boolean {\r\n        return this.table[this.toStrFn(key)] != null;\r\n    }\r\n\r\n    public remove(key: K): boolean {\r\n        if (this.hasKey(key)) {\r\n            delete this.table[this.toStrFn(key)];\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public values(): V[] {\r\n        return this.keyValues().map((valuePair: ValuePair<K, V>) => valuePair.value);\r\n    }\r\n\r\n    public keys(): K[] {\r\n        return this.keyValues().map((valuePair: ValuePair<K, V>) => valuePair.key);\r\n    }\r\n\r\n    public keyValues(): ValuePair<K, V>[] {\r\n        const valuePairs = [];\r\n        for (const k in this.table) if (this.hasKey(k)) valuePairs.push(this.table[k]);\r\n        return valuePairs;\r\n    }\r\n\r\n    public forEach(callbackFn: (key: K, value: V) => any) {\r\n        const valuePairs = this.keyValues();\r\n        for (let i = 0; i < valuePairs.length; i++) {\r\n            const result = callbackFn(valuePairs[i].key, valuePairs[i].value);\r\n            if (result === false) break;\r\n        }\r\n    }\r\n\r\n    public isEmpty(): boolean {\r\n        return this.size() === 0;\r\n    }\r\n\r\n    public size(): number {\r\n        return Object.keys(this.table).length;\r\n    }\r\n\r\n    public clear(): void {\r\n        this.table = {};\r\n    }\r\n\r\n    public toString(): string {\r\n        if (this.isEmpty()) return '';\r\n\r\n        const valuePairs = this.keyValues();\r\n        let objString = `${valuePairs[0].toString()}`;\r\n        for (let i = 1; i < valuePairs.length; i++)objString = `${objString},${valuePairs[i].toString()}`;\r\n        return objString;\r\n    }\r\n}","import { Script } from \"laya/components/Script\";\r\nimport Dictionary from \"../data_structures/Dictionary\";\r\n\r\nexport default class DictionaryTest extends Script {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onEnable() {\r\n        console.log('DictionaryTest');\r\n\r\n        const dictionary = new Dictionary();\r\n\r\n        dictionary.set('Gandalf', 'gandalf@email.com');\r\n        dictionary.set('John', 'johnsnow@email.com');\r\n        dictionary.set('Tyrion', 'tyrion@email.com');\r\n\r\n        console.log(dictionary.hasKey('Gandalf'));\r\n\r\n        console.log(dictionary.size());\r\n        console.log(dictionary.keys());\r\n        console.log(dictionary.values());\r\n        console.log(dictionary.get('Tyrion'));\r\n\r\n        dictionary.remove('John');\r\n        console.log(dictionary.keys());\r\n        console.log(dictionary.values());\r\n        console.log(dictionary.keyValues());\r\n\r\n        dictionary.forEach((k, v) => { console.log('forEach: ', `key:${k},value:${v}`) });\r\n\r\n    }\r\n}","export function knapSackDP(capacity: number, weights: number[], values: number[], n: number): number {\r\n    const ks: number[][] = [];\r\n\r\n    for (let i = 0; i <= n; i++) {\r\n        ks[i] = [];\r\n        for (let w = 0; w <= capacity; w++) {\r\n            if (i === 0 || w === 0) {\r\n                ks[i][w] = 0;\r\n            } else if (weights[i - 1] <= w) {\r\n                const a = values[i - 1] + ks[i - 1][w - weights[i - 1]];\r\n                const b = ks[i - 1][w];\r\n                ks[i][w] = a > b ? a : b;\r\n            } else {\r\n                ks[i][w] = ks[i - 1][w];\r\n            }\r\n        }\r\n    }\r\n    findValues(n, capacity, ks, weights, values);\r\n\r\n    return ks[n][capacity];\r\n}\r\n\r\nfunction findValues(n: number, capacity: number, ks: number[][], weights: number[], values: number[]) {\r\n    let [i, k] = [n, capacity];\r\n    // console.log('Items that are part of the solution:');\r\n    while (i > 0 && k > 0) {\r\n        if (ks[i][k] !== ks[i - 1][k]) {\r\n            console.log('item ' + i + 'can be part of solution w,v: ' + weights[i - 1] + ',' + values[i - 1]);\r\n            i--;\r\n            k -= ks[i][k];\r\n        } else {\r\n            i--;\r\n        };\r\n    }\r\n}","export function lcsDP(wordX: string, wordY: string): string {\r\n    const m = wordX.length;\r\n    const n = wordY.length;\r\n    const l: number[][] = [];\r\n    const solution: string[][] = [];\r\n\r\n    for (let i = 0; i <= m; i++) {\r\n        l[i] = [];\r\n        solution[i] = [];\r\n        for (let j = 0; j <= n; j++) {\r\n            l[i][j] = 0;\r\n            solution[i][j] = '0';\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i <= m; i++) {\r\n        for (let j = 0; j <= n; j++) {\r\n            if (i === 0 || j === 0) {\r\n                l[i][j] = 0;\r\n            } else if (wordX[i - 1] === wordY[j - 1]) {\r\n                l[i][j] = l[i - 1][j - 1] + 1;\r\n                solution[i][j] = 'diagonal';\r\n            } else {\r\n                const a = l[i - 1][j];\r\n                const b = l[i][j - 1];\r\n                l[i][j] = a > b ? a : b;\r\n                solution[i][j] = l[i][j] === l[i - 1][j] ? 'top' : 'left';\r\n            }\r\n        }\r\n    }\r\n    console.log('l,solution: ', l, solution)\r\n    return printSolution(solution, wordX, m, n);\r\n}\r\n\r\nfunction printSolution(solution: string[][], wordX: string, m: number, n: number): string {\r\n    let [a, b, answer] = [m, n, ''];\r\n    let x = solution[a][b];\r\n\r\n    while (x !== '0') {\r\n        if (solution[a][b] === 'diagonal') {\r\n            answer = wordX[a - 1] + answer;\r\n            a--;\r\n            b--;\r\n        } else if (solution[a][b] === 'left') {\r\n            b--;\r\n        } else if (solution[a][b] === 'top') {\r\n            a--;\r\n        }\r\n        x = solution[a][b];\r\n    }\r\n    return answer;\r\n}","export function matrixChainOrder(p: number[]): number {\r\n    const n = p.length;\r\n\r\n    const m: number[][] = [];\r\n    const s: number[][] = [];\r\n\r\n    for (let i = 1; i <= n; i++) {\r\n        m[i] = [];\r\n        m[i][i] = 0;\r\n    }\r\n\r\n    for (let i = 0; i <= n; i++) {\r\n        s[i] = [];\r\n        for (let j = 0; j <= n; j++)s[i][j] = 0;\r\n    }\r\n\r\n    for (let l = 2; l < n; l++) {\r\n        for (let i = 1; i < n - l + 1; i++) {\r\n            const j = i + l - 1;\r\n            m[i][j] = Number.MAX_SAFE_INTEGER;\r\n            for (let k = i; k <= j - 1; k++) {\r\n                const q = m[i][k] + m[k + 1][j] + p[i - 1] * p[k] * p[j];\r\n                if (q < m[i][j]) {\r\n                    m[i][j] = q;\r\n                    s[i][j] = k;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    let out = { s: '' };\r\n    printOptimalParenthesis(s, 1, n - 1, out);\r\n\r\n    console.log('m', m);\r\n    console.log('s', s);\r\n\r\n    console.log('MatrixChainOrder: ', out.s);\r\n\r\n    return m[1][n - 1];\r\n}\r\n\r\nfunction printOptimalParenthesis(s: number[][], i: number, j: number, out: { s: string }) {\r\n    if (i === j) {\r\n        // console.log('A[' + i + ']');\r\n        out.s += '[' + i + ']';\r\n    } else {\r\n        // console.log('(');\r\n        out.s += '(';\r\n        printOptimalParenthesis(s, i, s[i][j], out);\r\n        printOptimalParenthesis(s, s[i][j] + 1, j, out);\r\n        // console.log(')');\r\n        out.s += ')';\r\n    }\r\n}","export function minCoinChangeDP(coins: number[], amount: number): number[] {\r\n    const cache: number[][] = [];\r\n\r\n    const makeChange = (amount: number): number[] => {\r\n        if (!amount) return [];\r\n        if (cache[amount]) return cache[amount];\r\n        let min: number[] = [];\r\n        let newMin: number[];\r\n        let newAmount = 0;\r\n        for (let i = 0; i < coins.length; i++) {\r\n            const coin = coins[i];\r\n            newAmount = amount - coin;\r\n            if (newAmount >= 0) newMin = makeChange(newAmount);\r\n            if (newAmount >= 0 &&\r\n                (newMin.length < min.length - 1 || !min.length) &&\r\n                (newMin.length || !newAmount)) {\r\n                min = [coin].concat(newMin);\r\n                // console.log('newMin: ', newMin.toString(), ' newAmount: ', newAmount);\r\n                console.log('new Min ' + min + ' for ' + amount);\r\n                // console.log('cache: ',cache);\r\n            }\r\n        }\r\n        return cache[amount] = min;\r\n    };\r\n\r\n    return makeChange(amount);\r\n}\r\n","import { Script } from \"laya/components/Script\";\r\nimport { knapSackDP } from \"../algorithms/dynamic-programing/knapsackDP\";\r\nimport { lcsDP } from \"../algorithms/dynamic-programing/longest-common-subsequenceDP\";\r\nimport { matrixChainOrder } from \"../algorithms/dynamic-programing/matrix-chain-multiplicationDP\";\r\nimport { minCoinChangeDP } from \"../algorithms/dynamic-programing/min-coin-changeDP\";\r\n\r\nexport default class DynamicProgramingTest extends Script {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onEnable() {\r\n        console.log('DynamicProgramingTest~~~');\r\n\r\n\r\n        console.log('minCoinChangeDP([1, 5, 10], 15): ', minCoinChangeDP([1, 5, 10], 15));\r\n        console.log('minCoinChangeDP([1, 3, 4], 6): ', minCoinChangeDP([1, 3, 4], 6));\r\n        console.log('minCoinChangeDP([1, 5, 10, 25], 36): ', minCoinChangeDP([1, 5, 10, 25], 36));\r\n\r\n        const values = [3, 4, 5];\r\n        const weights = [2, 3, 4];\r\n        const capacity = 5;\r\n        const n = values.length;\r\n        console.log('knapSack： ', knapSackDP(capacity, weights, values, n));\r\n\r\n        const wordX = 'acbaed';\r\n        const wordY = 'abcadf';\r\n        console.log('lcsDP: ', lcsDP(wordX, wordY));\r\n\r\n        const p = [10, 100, 5, 50, 1];\r\n        console.log('matrixChainMultiplicationDPCount [10, 100, 5, 50, 1]: ', matrixChainOrder(p));\r\n        const q = [30, 35, 15, 5, 10, 20, 25];\r\n        console.log('matrixChainMultiplicationDPCount [30, 35, 15, 5, 10, 20, 25]: ', matrixChainOrder(q));\r\n    }\r\n}","import { Script } from \"laya/components/Script\";\r\n\r\nexport default class FunctionalTest extends Script {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onEnable() {\r\n        console.log('Functional Test~~~');\r\n\r\n        const printArray = function (array: any[]) {\r\n            for (let i = 0; i < array.length; i++)console.log(array[i]);\r\n        }\r\n\r\n        printArray([1, 2, 3, 4, 5]);\r\n\r\n        const forEach = function (array: any[], action: Function) {\r\n            for (let i = 0; i < array.length; i++)action(array[i]);\r\n        }\r\n\r\n        const logItem = function (item: any) {\r\n            console.log(item);\r\n        }\r\n\r\n        forEach([1, 2, 3, 4, 5], logItem);\r\n\r\n        var findMinArray = function (array: any[]) {\r\n            let minValue = array[0];\r\n            for (let i = 1; i < array.length; i++)if (minValue > array[i]) minValue = array[i];\r\n            return minValue;\r\n        }\r\n\r\n        console.log(findMinArray([8, 6, 4, 5, 9]));\r\n\r\n        const min_ = function (array: any[]) {\r\n            return Math.min(...array);\r\n        }\r\n\r\n        console.log(min_([8, 6, 4, 5, 9]));\r\n\r\n        const daysOfWeek = [{ name: 'Monday', value: 1 }, { name: 'Tuesday', value: 2 }, { name: 'Wednesday', value: 7 }];\r\n\r\n        let daysOfWeekValues_ = [];\r\n        for (let i = 0; i < daysOfWeek.length; i++)daysOfWeekValues_.push(daysOfWeek[i].value);\r\n        console.log(daysOfWeekValues_);\r\n\r\n        const daysOfWeekValues = daysOfWeek.map(day => day.value);\r\n        console.log(daysOfWeekValues);\r\n\r\n        const positiveNumbers_ = function (array: any[]) {\r\n            let positive = [];\r\n            for (let i = 0; i < array.length; i++)if (array[i] >= 0) positive.push(array[i]);\r\n            return positive;\r\n        }\r\n        console.log(positiveNumbers_([-1, 1, 2, -3]));\r\n\r\n        const positiveNumbers = (array: any[]) => array.filter(num => (num >= 0));\r\n        console.log(positiveNumbers([-1, 1, 2, -3]));\r\n\r\n        const sumValues = function (array: any[]) {\r\n            let total = array[0];\r\n            for (let i = 1; i < array.length; i++)total += array[i];\r\n            return total;\r\n        }\r\n        console.log(sumValues([1, 2, 3, 4, 5]));\r\n\r\n        const sum = (arr: any[]) => arr.reduce((a, b) => a + b);\r\n        console.log(sum([1, 2, 3, 4, 5]));\r\n\r\n        const mergeArrays_ = function (arrays: number[][]) {\r\n            const count = arrays.length;\r\n            let newArray = [];\r\n            let k = 0;\r\n            for (let i = 0; i < count; i++)for (let j = 0; j < arrays[i].length; j++)newArray[k++] = arrays[i][j];\r\n            return newArray;\r\n        }\r\n        console.log(mergeArrays_([[1, 2, 3], [4, 5], [6]]));\r\n\r\n        const mergeArraysConcat = (arrays: number[][]) => {\r\n            return arrays.reduce((p, n) => { return p.concat(n) });\r\n        };\r\n        console.log(mergeArraysConcat([[1, 2, 3], [4, 5], [6]]));\r\n    }\r\n}","import { ICompareFunction, defaultCompare, Compare } from \"../util\";\r\n\r\nexport class Queue<T> {\r\n    protected count: number;\r\n    protected lowestCount: number;\r\n    protected items: object;\r\n\r\n    constructor() {\r\n        this.count = 0;\r\n        this.lowestCount = 0;\r\n        this.items = {};\r\n    }\r\n\r\n    public enqueue(element: T) {\r\n        this.items[this.count] = element;\r\n        this.count++;\r\n    }\r\n\r\n    public dequeue(): T | undefined {\r\n        if (this.isEmpty()) return undefined;\r\n        const result = this.items[this.lowestCount];\r\n        delete this.items[this.lowestCount];\r\n        this.lowestCount++;\r\n        return result;\r\n    }\r\n\r\n    public peek(): T | undefined {\r\n        if (this.isEmpty()) return undefined;\r\n        return this.items[this.lowestCount];\r\n    }\r\n\r\n    public isEmpty(): boolean {\r\n        return this.size() === 0;\r\n    }\r\n\r\n    public size(): number {\r\n        return this.count - this.lowestCount;\r\n    }\r\n\r\n    public clear() {\r\n        this.items = {};\r\n        this.count = 0;\r\n        this.lowestCount = 0;\r\n    }\r\n\r\n    public toString(): string {\r\n        if (this.isEmpty()) return '';\r\n        let objString = `${this.items[this.lowestCount]}`;\r\n        for (let i = this.lowestCount + 1; i < this.count; i++)objString = `${objString},${this.items[i]}`;\r\n        return objString;\r\n    }\r\n}\r\n\r\nexport class Deque<T> extends Queue<T> {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    public addFront(element: T) {\r\n        if (super.isEmpty()) {\r\n            this.addBack(element);\r\n        } else if (this.lowestCount > 0) {\r\n            this.lowestCount--;\r\n            this.items[this.lowestCount] = element;\r\n        } else {\r\n            for (let i = this.count; i > 0; i--) this.items[i] = this.items[i - 1];//items[i] is doesn't exist before this step, in this step, items[i] is last one.\r\n            this.count++;\r\n            this.lowestCount = 0;\r\n            this.items[0] = element;\r\n        }\r\n    }\r\n\r\n    public addBack(element: T) {\r\n        super.enqueue(element);\r\n    }\r\n\r\n    public removeFront(): T | undefined {\r\n        return super.dequeue();\r\n    }\r\n\r\n    public removeBack(): T | undefined {\r\n        if (super.isEmpty()) return undefined;\r\n        this.count--;\r\n        const result = this.items[this.count];\r\n        delete this.items[this.count];\r\n        return result;\r\n    }\r\n\r\n    public peekFront(): T | undefined {\r\n        return super.peek();\r\n    }\r\n\r\n    public peekBack(): T | undefined {\r\n        if (super.isEmpty()) return undefined;\r\n        return this.items[this.count - 1];\r\n    }\r\n\r\n}\r\n\r\nexport class PriorityQueue<T>{\r\n    private items: T[];\r\n\r\n    constructor(private compareFn: ICompareFunction<T> = defaultCompare, private compare: Compare = Compare.LESS_THAN) {\r\n        this.items = [];\r\n    }\r\n\r\n    public enqueue(element: T) {\r\n        let added = false;\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            if (this.compareFn(element, this.items[i]) === this.compare) {\r\n                this.items.splice(i, 0, element);\r\n                added = true;\r\n                break;\r\n            }\r\n        }\r\n        if (!added) this.items.push(element);\r\n    }\r\n\r\n    public dequeue(): T {\r\n        return this.items.shift();\r\n    }\r\n\r\n    public peek(): T | undefined {\r\n        if (this.isEmpty()) return undefined;\r\n        return this.items[0];\r\n    }\r\n\r\n    public isEmpty(): boolean {\r\n        return this.items.length === 0;\r\n    }\r\n\r\n    public clear() {\r\n        this.items = [];\r\n    }\r\n\r\n    public size(): number {\r\n        return this.items.length;\r\n    }\r\n\r\n    public toString(): string {\r\n        if (this.isEmpty()) return '';\r\n        return this.items.toString();\r\n    }\r\n}","import Graph from \"../../data_structures/Graph\";\r\nimport { Queue } from \"../../data_structures/Queue\";\r\nimport { Colors } from \"../../util\";\r\n\r\nconst initializeColor = (vertices: (string | number)[]): object => {\r\n    const color = {};\r\n    for (let i = 0; i < vertices.length; i++)color[vertices[i]] = Colors.WHITE;\r\n    return color;\r\n}\r\n\r\nexport function breadthFirstSearch(graph: Graph, startVertex: string | number, callback: Function) {\r\n    const vertices = graph.getVertices();\r\n    const adjList = graph.getAdjList();\r\n    const color = initializeColor(vertices);\r\n    const queue = new Queue<string | number>();\r\n\r\n    queue.enqueue(startVertex);\r\n\r\n    while (!queue.isEmpty()) {\r\n        const u = queue.dequeue();\r\n        const neighbors = adjList.get(u);\r\n        color[u] = Colors.GRAY;\r\n        for (let i = 0; i < neighbors.length; i++) {\r\n            const w = neighbors[i];\r\n            if (color[w] === Colors.WHITE) {\r\n                color[w] = Colors.GRAY;\r\n                queue.enqueue(w);\r\n            }\r\n        }\r\n        color[u] = Colors.BLACK;\r\n        if (callback) callback(u);\r\n    }\r\n}\r\n\r\ninterface shortestPathData {\r\n    distances: object,\r\n    predecessors: object\r\n};\r\n\r\nexport function BFS(graph: Graph, startVertex: string | number): shortestPathData {\r\n    const vertices = graph.getVertices();\r\n    const adjList = graph.getAdjList();\r\n    const color = initializeColor(vertices);\r\n    const queue = new Queue<string | number>();\r\n    const distances = {};\r\n    const predecessors = {};\r\n    queue.enqueue(startVertex);\r\n\r\n    for (let i = 0; i < vertices.length; i++) {\r\n        distances[vertices[i]] = 0;\r\n        predecessors[vertices[i]] = null;\r\n    }\r\n\r\n    while (!queue.isEmpty()) {\r\n        const u = queue.dequeue();\r\n        const neighbors = adjList.get(u);\r\n        color[u] = Colors.GRAY;\r\n        for (let i = 0; i < neighbors.length; i++) {\r\n            const w = neighbors[i];\r\n            if (color[w] === Colors.WHITE) {\r\n                color[w] = Colors.GRAY;\r\n                distances[w] = distances[u] + 1;\r\n                predecessors[w] = u;\r\n                queue.enqueue(w);\r\n            }\r\n        }\r\n        color[u] = Colors.BLACK;\r\n    }\r\n\r\n    return {\r\n        distances: distances,\r\n        predecessors: predecessors\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","import { timer } from \"Laya\";\r\nimport Dictionary from \"../../data_structures/Dictionary\";\r\nimport Graph from \"../../data_structures/Graph\";\r\nimport { Colors } from \"../../util\";\r\n\r\nconst initializeColor = (vertices: (string | number)[]): object => {\r\n    const color = {};\r\n    for (let i = 0; i < vertices.length; i++)color[vertices[i]] = Colors.WHITE;\r\n    return color;\r\n}\r\n\r\nconst depthFirstSearchVisit = (u: string | number, color: object, adjList: Dictionary<string | number, (string | number)[]>, callback: Function) => {\r\n    color[u] = Colors.GRAY;\r\n    if (callback) callback(u);\r\n    const neighbors = adjList.get(u);\r\n    for (let i = 0; i < neighbors.length; i++) {\r\n        const w = neighbors[i];\r\n        if (color[w] === Colors.WHITE) depthFirstSearchVisit(w, color, adjList, callback);\r\n    }\r\n    color[u] = Colors.BLACK;\r\n};\r\n\r\nexport function depthFirstSearch(graph: Graph, callback: Function) {\r\n    const vertices = graph.getVertices();\r\n    const adjList = graph.getAdjList();\r\n    const color = initializeColor(vertices);\r\n\r\n    for (let i = 0; i < vertices.length; i++) {\r\n        if (color[vertices[i]] === Colors.WHITE) depthFirstSearchVisit(vertices[i], color, adjList, callback);\r\n    }\r\n}\r\n\r\ninterface shortestPathData {\r\n    discovery: object,\r\n    finished: object,\r\n    predecessors: object\r\n};\r\n\r\nconst DFSVisit = (\r\n    u: string | number,\r\n    color: object,\r\n    d: object,\r\n    f: object,\r\n    p: object,\r\n    time: object,\r\n    adjList: Dictionary<string | number, (string | number)[]>\r\n) => {\r\n    color[u] = Colors.GRAY;\r\n    d[u] = ++time['count'];\r\n    const neighbors = adjList.get(u);\r\n    for (let i = 0; i < neighbors.length; i++) {\r\n        const w = neighbors[i];\r\n        if (color[w] === Colors.WHITE) {\r\n            p[w] = u;\r\n            DFSVisit(w, color, d, f, p, time, adjList);\r\n        }\r\n    }\r\n    color[u] = Colors.BLACK;\r\n    f[u] = ++time['count'];\r\n};\r\n\r\nexport function DFS(graph: Graph): shortestPathData {\r\n    const vertices = graph.getVertices();\r\n    const adjList = graph.getAdjList();\r\n    const color = initializeColor(vertices);\r\n    const d = {};\r\n    const f = {};\r\n    const p = {};\r\n    const time = { count: 0 };\r\n\r\n    for (let i = 0; i < vertices.length; i++) {\r\n        f[vertices[i]] = 0;\r\n        d[vertices[i]] = 0;\r\n        p[vertices[i]] = null;\r\n    }\r\n\r\n    for (let i = 0; i < vertices.length; i++) {\r\n        if (color[vertices[i]] === Colors.WHITE) DFSVisit(vertices[i], color, d, f, p, time, adjList);\r\n    }\r\n\r\n    return {\r\n        discovery: d,\r\n        finished: f,\r\n        predecessors: p\r\n    }\r\n}","const INF = Number.MAX_SAFE_INTEGER;\r\n\r\nconst minDistance = (dist: number[], visited: boolean[]): number => {\r\n    let min = INF;\r\n    let minIndex = -1;\r\n\r\n    for (let v = 0; v < dist.length; v++) {\r\n        if (visited[v] === false && dist[v] <= min) {\r\n            min = dist[v];\r\n            minIndex = v;\r\n        }\r\n    }\r\n    return minIndex;\r\n}\r\n\r\nexport function dijkstra(graph: number[][], src: number): number[] {\r\n    const dist: number[] = [];\r\n    const visited: boolean[] = [];\r\n    const length = graph.length;\r\n\r\n    for (let i = 0; i < length; i++) {\r\n        dist[i] = INF;\r\n        visited[i] = false;\r\n    }\r\n\r\n    dist[src] = 0;\r\n\r\n    for (let i = 0; i < length - 1; i++) {\r\n        const u = minDistance(dist, visited);\r\n\r\n        visited[u] = true;\r\n\r\n        for (let v = 0; v < length; v++) {\r\n            if (!visited[v] && graph[u][v] != 0 && dist[u] !== INF && dist[u] + graph[u][v] < dist[v]) {\r\n                dist[v] = dist[u] + graph[u][v];\r\n            }\r\n        }\r\n    }\r\n\r\n    return dist;\r\n}\r\n\r\nexport function dijkstraWithPath(graph: number[][], src: number): number[][] {\r\n    let paths: number[][] = graph.slice(0);\r\n    const dist: number[] = [];\r\n    const visited: boolean[] = [];\r\n    const length = graph.length;\r\n\r\n    for (let i = 0; i < length; i++) {\r\n        dist[i] = INF;\r\n        visited[i] = false;\r\n        paths[i] = graph[i].slice(0);\r\n        paths[i].fill(0);\r\n    }\r\n\r\n    dist[src] = 0;\r\n\r\n    for (let i = 0; i < length - 1; i++) {\r\n        const u = minDistance(dist, visited);\r\n        visited[u] = true;\r\n\r\n        for (let v = 0; v < length; v++) {\r\n            if (!visited[v] && graph[u][v] != 0 && dist[u] !== INF && dist[u] + graph[u][v] < dist[v]) {\r\n                dist[v] = dist[u] + graph[u][v];\r\n                paths[v] = paths[u].slice(0);\r\n                paths[v][v] = paths[u][u] + 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    return paths;\r\n}\r\n","export function floydWarshall(graph: number[][]): number[][] {\r\n    const dist: number[][] = [];\r\n    const length = graph.length;\r\n\r\n    for (let i = 0; i < length; i++) {\r\n        dist[i] = [];\r\n        for (let j = 0; j < length; j++) {\r\n            if (i === j) {\r\n                dist[i][j] = 0;\r\n            } else if (!isFinite(graph[i][j])) {\r\n                dist[i][j] = Infinity;\r\n            } else {\r\n                dist[i][j] = graph[i][j];\r\n            }\r\n        }\r\n    }\r\n\r\n    for (let k = 0; k < length; k++) {\r\n        for (let i = 0; i < length; i++) {\r\n            for (let j = 0; j < length; j++) {\r\n                if (dist[i][k] + dist[k][j] < dist[i][j]) {\r\n                    dist[i][j] = dist[i][k] + dist[k][j];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return dist;\r\n}\r\n\r\nexport function floydWarshallWithPath(graph: number[][]): number[][] {\r\n    const dist: number[][] = [];\r\n    const length = graph.length;\r\n    const paths: number[][] = graph.slice(0);\r\n\r\n    for (let i = 0; i < length; i++) {\r\n        dist[i] = [];\r\n        paths[i] = graph[i].slice(0);\r\n        paths[i].fill(0);\r\n        for (let j = 0; j < length; j++) {\r\n            // paths[i][j] = graph[i][j];\r\n            paths[i][j] = j;\r\n            if (i === j) {\r\n                dist[i][j] = 0;\r\n                paths[i][j] = Infinity;\r\n            } else if (!isFinite(graph[i][j])) {\r\n                dist[i][j] = Infinity;\r\n            } else {\r\n                dist[i][j] = graph[i][j];\r\n            }\r\n        }\r\n    }\r\n\r\n    for (let k = 0; k < length; k++) {\r\n        for (let i = 0; i < length; i++) {\r\n            for (let j = 0; j < length; j++) {\r\n                if (dist[i][k] + dist[k][j] < dist[i][j]) {\r\n                    dist[i][j] = dist[i][k] + dist[k][j];\r\n                    paths[i][j] = paths[i][k];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return paths;\r\n}\r\n\r\n\r\n","const INF = 9;//Number.MAX_SAFE_INTEGER;\r\n\r\nconst initializeCost = (graph: number[][]): number[][] => {\r\n    const cost: number[][] = [];\r\n    const length = graph.length;\r\n    for (let i = 0; i < length; i++) {\r\n        cost[i] = [];\r\n        for (let j = 0; j < length; j++) {\r\n            if (graph[i][j] === 0) {\r\n                cost[i][j] = INF;\r\n            } else {\r\n                cost[i][j] = graph[i][j];\r\n            }\r\n        }\r\n    }\r\n    return cost;\r\n};\r\n\r\n\r\nconst find = (i: number, parent: number[]): number => {\r\n    while (parent[i] > 0) i = parent[i];\r\n    return i;\r\n};\r\n\r\nconst union = (i: number, j: number, parent: number[]): boolean => {\r\n    if (i != j) {\r\n        parent[i] = j;\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nexport function kruskal(graph: number[][]): number[] {\r\n    const length = graph.length;\r\n    const parent: number[] = new Array<number>(length).fill(-1);\r\n\r\n    const cost = initializeCost(graph);\r\n\r\n    const edges: number[][] = [];\r\n    for (let i = 0; i < length; i++) {\r\n        for (let j = 0; j < length; j++) {\r\n            if (cost[i][j] != INF) {\r\n                let edge = [i, j, cost[i][j]];\r\n                edges.push(edge);\r\n                cost[i][j] = cost[j][i] = INF;\r\n            }\r\n        }\r\n    }\r\n\r\n    edges.sort((a, b) => { return a[2] - b[2] });\r\n\r\n    let mst = [];\r\n\r\n    build: for (let m = 0; m < edges.length; m++) {\r\n        let a = find(edges[m][0], parent);\r\n        let b = find(edges[m][1], parent);\r\n\r\n        union(a, b, parent);\r\n\r\n        if (union(a, b, parent)) mst.push(edges[m]);\r\n\r\n        if (mst.length == length - 1) break build;\r\n    }\r\n    return mst;\r\n}","const INF = Number.MAX_SAFE_INTEGER;\r\n\r\nconst minKey = (length: number, key: number[], visited: boolean[]): number => {\r\n    let min = INF;\r\n    let minIndex = 0;\r\n\r\n    for (let v = 0; v < length; v++) {\r\n        if (visited[v] === false && key[v] < min) {\r\n            min = key[v];\r\n            minIndex = v;\r\n        }\r\n    }\r\n    return minIndex;\r\n}\r\n\r\nexport function prim(graph: number[][]): number[] {\r\n    const parent: number[] = [];\r\n    const key: number[] = [];\r\n    const visited: boolean[] = [];\r\n    const length = graph.length;\r\n\r\n    for (let i = 0; i < length; i++) {\r\n        key[i] = INF;\r\n        visited[i] = false;\r\n    }\r\n\r\n    key[0] = 0;\r\n    parent[0] = -1;\r\n\r\n    for (let i = 0; i < length - 1; i++) {\r\n        const u = minKey(length, key, visited);\r\n        visited[u] = true;\r\n\r\n        for (let v = 0; v < length; v++) {\r\n            if (graph[u][v] && visited[v] === false && graph[u][v] < key[v]) {\r\n                parent[v] = u;\r\n                key[v] = graph[u][v];\r\n            }\r\n        }\r\n    }\r\n\r\n    return parent;\r\n}","import Dictionary from \"./Dictionary\";\r\n\r\nexport default class Graph {\r\n    private vertices: (string | number)[] = [];\r\n    private adjList: Dictionary<string | number, (string | number)[]> = new Dictionary();\r\n\r\n    constructor(private isDirected = false) { }\r\n\r\n    public addVertex(v: string | number) {\r\n        if (this.vertices.indexOf(v) == -1) {\r\n            this.vertices.push(v);\r\n            this.adjList.set(v, []);\r\n        }\r\n    }\r\n\r\n    public addEdge(a: string | number, b: string | number) {\r\n        if (!this.adjList.get(a)) this.addVertex(a);\r\n        if (!this.adjList.get(b)) this.addVertex(b);\r\n\r\n        this.adjList.get(a).push(b);\r\n        if (!this.isDirected) this.adjList.get(b).push(a);\r\n    }\r\n\r\n    public getVertices(): (string | number)[] {\r\n        return this.vertices;\r\n    }\r\n\r\n    public getAdjList(): Dictionary<string | number, (string | number)[]> {\r\n        return this.adjList;\r\n    }\r\n\r\n    public toString(): string {\r\n        let s = '';\r\n        for (let i = 0; i < this.vertices.length; i++) {\r\n            s += this.vertices[i] + '->';\r\n            const neighbors = this.adjList.get(this.vertices[i]);\r\n            for (let j = 0; j < neighbors.length; j++)s += neighbors[j] + ' ';\r\n            s += '\\n';\r\n        }\r\n        return s;\r\n    }\r\n}","export class StackArray<T> {\r\n    private items: T[];\r\n\r\n    constructor() {\r\n        this.items = [];\r\n    }\r\n\r\n    public push(element: T) {\r\n        this.items.push(element);\r\n    }\r\n\r\n    public pop(): T {\r\n        return this.items.pop();\r\n    }\r\n\r\n    public peek(): T {\r\n        return this.items[this.items.length - 1];\r\n    }\r\n\r\n    public isEmpty(): boolean {\r\n        return this.items.length == 0;\r\n    }\r\n\r\n    public clear() {\r\n        this.items = [];\r\n    }\r\n\r\n    public size(): number {\r\n        return this.items.length;\r\n    }\r\n\r\n    public toArray(): T[] {\r\n        return this.items;\r\n    }\r\n\r\n    public toString(): string {\r\n        return this.items.toString();\r\n    }\r\n}\r\n\r\nexport class Stack<T> {\r\n    private items: object;\r\n    private count: number;\r\n\r\n    constructor() {\r\n        this.count = 0;\r\n        this.items = {};\r\n    }\r\n\r\n    public push(element: T) {\r\n        this.items[this.count] = element;\r\n        this.count++;\r\n    }\r\n\r\n    public size(): number {\r\n        return this.count;\r\n    }\r\n\r\n    public isEmpty(): boolean {\r\n        return this.count === 0;\r\n    }\r\n\r\n    public pop(): T|undefined {\r\n        if (this.isEmpty()) return undefined;\r\n        this.count--;\r\n        const result = this.items[this.count];\r\n        delete this.items[this.count];\r\n        return result;\r\n    }\r\n\r\n    public peek(): T|undefined {\r\n        if (this.isEmpty()) return undefined;\r\n        return this.items[this.count - 1];\r\n    }\r\n\r\n    public clear() {\r\n        this.items = {};\r\n        this.count = 0;\r\n    }\r\n\r\n    public toString(): string {\r\n        if (this.isEmpty()) return '';\r\n        let objString = `${this.items[0]}`;\r\n        for (let i = 1; i < this.count; i++)objString = `${objString},${this.items[i]}`;\r\n        return objString;\r\n    }\r\n}","import { Laya } from \"Laya\";\r\nimport { Script } from \"laya/components/Script\";\r\nimport { Scene } from \"laya/display/Scene\";\r\nimport { BFS, breadthFirstSearch } from \"../algorithms/graph/breadth-first-search\";\r\nimport { depthFirstSearch, DFS } from \"../algorithms/graph/depth-first-search\";\r\nimport { dijkstra, dijkstraWithPath } from \"../algorithms/graph/dijkstra\";\r\nimport { floydWarshall, floydWarshallWithPath } from \"../algorithms/graph/Floyd-warshall\";\r\nimport { kruskal } from \"../algorithms/graph/kruskal\";\r\nimport { prim } from \"../algorithms/graph/prim\";\r\nimport Graph from \"../data_structures/Graph\";\r\nimport { Stack } from \"../data_structures/Stack\";\r\nimport GameConfig from \"../GameConfig\";\r\n\r\nexport default class GraphTest extends Script {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onEnable() {\r\n        console.log('GraphTest---');\r\n\r\n        let graph = new Graph();\r\n\r\n        let myVertices = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I'];\r\n\r\n        for (let i = 0; i < myVertices.length; i++) graph.addVertex(myVertices[i]);\r\n\r\n        graph.addEdge('A', 'B');\r\n        graph.addEdge('A', 'C');\r\n        graph.addEdge('A', 'D');\r\n        graph.addEdge('C', 'D');\r\n        graph.addEdge('C', 'G');\r\n        graph.addEdge('D', 'G');\r\n        graph.addEdge('D', 'H');\r\n        graph.addEdge('B', 'E');\r\n        graph.addEdge('B', 'F');\r\n        graph.addEdge('E', 'I');\r\n\r\n        // graph.addEdge('C', 'D');\r\n        // graph.addEdge('B', 'E');\r\n        // graph.addEdge('A', 'D');\r\n\r\n        console.log('********* printing graph ***********');\r\n\r\n        console.log(graph.toString());\r\n\r\n        console.log(graph.getAdjList().get('B'));\r\n\r\n        const printVertex = (value: string | number) => console.log('Visited vertex: ' + value);\r\n\r\n        console.log('start from A :');\r\n        breadthFirstSearch(graph, myVertices[0], printVertex);\r\n\r\n        console.log('start from D :');\r\n        breadthFirstSearch(graph, 'D', printVertex);\r\n\r\n        console.log('********* sorthest path from A- BFS ***********');\r\n        const shortestPathA = BFS(graph, myVertices[0]);\r\n        console.log(shortestPathA.distances);\r\n        console.log(shortestPathA.predecessors);\r\n\r\n        console.log('********* sorthest path from D- BFS ***********');\r\n        const shortestPathD = BFS(graph, 'D');\r\n        console.log(shortestPathD.distances);\r\n        console.log(shortestPathD.predecessors);\r\n\r\n        console.log('********* from A to all other vertices ***********');\r\n\r\n        const fromVertex = myVertices[0];\r\n        for (let i = 1; i < myVertices.length; i++) {\r\n            const toVertex = myVertices[i];\r\n            const path = new Stack();\r\n            for (let v = toVertex; v !== fromVertex; v = shortestPathA.predecessors[v]) path.push(v);\r\n            path.push(fromVertex);\r\n            let s = path.pop();\r\n            while (!path.isEmpty()) s += ' _ ' + path.pop();\r\n            console.log(s);\r\n        }\r\n\r\n        console.log('********* dfs with callback ***********');\r\n        depthFirstSearch(graph, printVertex);\r\n\r\n        console.log('********* topological sort - DFS ***********');\r\n        graph = new Graph();\r\n        for (let i = 0; i < myVertices.length; i++) graph.addVertex(myVertices[i]);\r\n\r\n        graph.addEdge('A', 'B');\r\n        graph.addEdge('A', 'C');\r\n        graph.addEdge('A', 'D');\r\n        graph.addEdge('C', 'D');\r\n        graph.addEdge('C', 'G');\r\n        graph.addEdge('D', 'G');\r\n        graph.addEdge('D', 'H');\r\n        graph.addEdge('B', 'E');\r\n        graph.addEdge('B', 'F');\r\n        graph.addEdge('E', 'I');\r\n\r\n        let result = DFS(graph);\r\n        console.log('discovery', result.discovery);\r\n        console.log('finished', result.finished);\r\n        console.log('predecessors', result.predecessors);\r\n\r\n        graph = new Graph(true);\r\n        myVertices = ['A', 'B', 'C', 'D', 'E', 'F'];\r\n        for (let i = 0; i < myVertices.length; i++) {\r\n            graph.addVertex(myVertices[i]);\r\n        }\r\n        graph.addEdge('A', 'C');\r\n        graph.addEdge('A', 'D');\r\n        graph.addEdge('B', 'D');\r\n        graph.addEdge('B', 'E');\r\n        graph.addEdge('C', 'F');\r\n        graph.addEdge('F', 'E');\r\n\r\n        result = DFS(graph);\r\n        console.log('discovery', result.discovery);\r\n        console.log('finished', result.finished);\r\n        console.log('predecessors', result.predecessors);\r\n\r\n        const fTimes = result.finished;\r\n        let s = '';\r\n        for (let count = 0; count < myVertices.length; count++) {\r\n            let max = 0;\r\n            let maxName = null;\r\n            for (let i = 0; i < myVertices.length; i++) {\r\n                if (fTimes[myVertices[i]] > max) {\r\n                    max = fTimes[myVertices[i]];\r\n                    maxName = myVertices[i];\r\n                }\r\n            }\r\n            s += ' _ ' + maxName;\r\n            delete fTimes[maxName];\r\n        }\r\n        console.log(s);\r\n\r\n        const graphM = [\r\n            [0, 2, 4, 0, 0, 0],\r\n            [0, 0, 1, 4, 2, 0],\r\n            [0, 0, 0, 0, 3, 0],\r\n            [0, 0, 0, 0, 0, 2],\r\n            [0, 0, 0, 3, 0, 2],\r\n            [0, 0, 0, 0, 0, 0]\r\n        ];\r\n\r\n        console.log(\"********* Dijkstra's Algorithm - Shortest Path ***********\");\r\n\r\n        console.log(` \r\n        [0, 2, 4, 0, 0, 0],\r\n        [0, 0, 1, 4, 2, 0],\r\n        [0, 0, 0, 0, 3, 0],\r\n        [0, 0, 0, 0, 0, 2],\r\n        [0, 0, 0, 3, 0, 2],\r\n        [0, 0, 0, 0, 0, 0]`\r\n        )\r\n\r\n        let dist = dijkstra(graphM, 0);\r\n        dist.forEach((v, i) => { console.log(i + '\\t\\t' + v); });\r\n\r\n        let distPath = dijkstraWithPath(graphM, 0);\r\n        distPath.forEach((v, i) => console.log(v + '\\t\\t'));\r\n\r\n        console.log('********* Floyd-Warshall Algorithm - All-Pairs Shortest Path ***********');\r\n\r\n        const INF = Infinity;\r\n        const graphN = [\r\n            [INF, 2, 4, INF, INF, INF],\r\n            [INF, INF, 1, 4, 2, INF],\r\n            [INF, INF, INF, INF, 3, INF],\r\n            [INF, INF, INF, INF, INF, 2],\r\n            [INF, INF, INF, 3, INF, 2],\r\n            [INF, INF, INF, INF, INF, INF]\r\n        ];\r\n        let distN = floydWarshall(graphN);\r\n        let pathN = floydWarshallWithPath(graphN);\r\n\r\n        const graphO = [\r\n            [INF, 3, 8, INF, -4],\r\n            [INF, INF, INF, 1, 7],\r\n            [INF, 4, INF, INF, INF],\r\n            [2, INF, -5, INF, INF],\r\n            [INF, INF, INF, 6, INF]\r\n        ];\r\n\r\n        let distO = floydWarshall(graphO);\r\n        let pathO = floydWarshallWithPath(graphO);\r\n\r\n        let printMatrix = (m: number[][]) => {\r\n            let s = '';\r\n            for (let i = 0; i < m.length; ++i) {\r\n                s = '';\r\n                for (var j = 0; j < m.length; ++j) {\r\n                    if (m[i][j] === INF) {\r\n                        s += ' ';\r\n                        s += 'INF ';\r\n                    } else {\r\n                        if (m[i][j] >= 0) s += ' ';\r\n                        s += m[i][j] + '   ';\r\n                    }\r\n                }\r\n                console.log(s);\r\n            }\r\n        }\r\n\r\n        console.log('\\n');\r\n        console.log('floyd dist')\r\n        printMatrix(distN);\r\n        console.log('\\n');\r\n        printMatrix(distO);\r\n\r\n        console.log('\\n');\r\n        console.log('floyd path');\r\n        printMatrix(pathN);\r\n        console.log('\\n');\r\n        printMatrix(pathO);\r\n\r\n        // console.log(distN);\r\n\r\n        const graphP = [\r\n            [0, 2, 4, 0, 0, 0],\r\n            [2, 0, 1, 4, 2, 0],\r\n            [4, 1, 0, 0, 3, 0],\r\n            [0, 4, 0, 0, 3, 2],\r\n            [0, 2, 3, 3, 0, 2],\r\n            [0, 0, 0, 2, 2, 0]\r\n        ];\r\n\r\n        console.log(\"********* Prim's Algorithm - Minimum Spanning Tree ***********\");\r\n\r\n        const pathP = prim(graphP);\r\n\r\n        console.log('Edge   Weight');\r\n        for (let i = 1; i < graphP.length; i++)console.log(pathP[i] + ' - ' + i + '   ' + graphP[i][pathP[i]]);\r\n        console.log('prims parent:', pathP)\r\n\r\n        console.log('\\n');\r\n        console.log('********* Kruskal Algorithm - Minimum Spanning Tree ***********');\r\n        const pathQ = kruskal(graphP);\r\n        console.log('Edge   Weight');\r\n        for (let i = 0; i < graphP.length - 1; i++)console.log(pathQ[i][0] + ' - ' + pathQ[i][1] + '   ' + pathQ[i][2]);\r\n        console.log('\\n');\r\n        console.log('kruskals parent:', pathQ)\r\n\r\n        let uf = new UnionFind([\"A\", \"B\", \"C\", \"D\", \"E\"]);\r\n        uf.union(\"A\", \"B\"); uf.union(\"A\", \"C\");\r\n        uf.union(\"C\", \"D\");\r\n\r\n        console.log(uf.connected(\"B\", \"E\"));\r\n        console.log(uf.connected(\"B\", \"D\"));\r\n\r\n        uf = new UnionFind([0, 1, 2, 3, 4]);\r\n        uf.union(0, 1); uf.union(0, 2);\r\n        uf.union(2, 3);\r\n\r\n        console.log(uf.connected(1, 4));\r\n        console.log(uf.connected(1, 3));\r\n\r\n        // console.time\r\n\r\n        let tb = [];\r\n        tb[77.8] = 0.134739;\r\n        let ssin = (n: number) => {\r\n            return tb[n];\r\n        }\r\n        console.time('a1')\r\n        let aa = 1;\r\n        for (let i: number = 0; i < 10000; i++) {\r\n            aa = Math.sin(77.8);\r\n        }\r\n        console.timeEnd('a1');\r\n\r\n        console.time('a2')\r\n        let bb = 1;\r\n        for (let j: number = 0; j < 10000; j++) {\r\n            bb = ssin(77.8);\r\n        }\r\n        console.timeEnd('a2');\r\n\r\n        console.time('a3')\r\n        let cc = 1;\r\n        for (let j: number = 0; j < 10000; j++) {\r\n            cc = tb[77.8];\r\n        }\r\n        console.timeEnd('a3');\r\n\r\n        let tb1 = []; tb1[77.8] = 0.134739;\r\n        console.time('a4')\r\n        let dd = 1;\r\n        for (let j: number = 0; j < 10000; j++) {\r\n            dd = tb1[77.8];\r\n        }\r\n        console.timeEnd('a4');\r\n\r\n        let ff = (a: number, b: Function): number => {\r\n            return b(a);\r\n        }\r\n        console.time('a5')\r\n        let ee = 1;\r\n        for (let j: number = 0; j < 10000; j++) {\r\n            ee = ff(77.8, ssin);\r\n        }\r\n        console.timeEnd('a5');\r\n    }\r\n}\r\n\r\nclass UnionFind {\r\n    private count;\r\n    private parent: string[];\r\n    constructor(elements) {\r\n        // Number of disconnected components\r\n        this.count = elements.length;\r\n\r\n        // Keep Track of connected components\r\n        this.parent = [];\r\n\r\n        // Initialize the data structure such that all\r\n        // elements have themselves as parents\r\n        elements.forEach(e => (this.parent[e] = e));\r\n    }\r\n\r\n    union(a, b) {\r\n        let rootA = this.find(a);\r\n        let rootB = this.find(b);\r\n\r\n        // Roots are same so these are already connected.\r\n        if (rootA === rootB) return;\r\n\r\n        // Always make the element with smaller root the parent.\r\n        if (rootA < rootB) {\r\n            if (this.parent[b] != b) this.union(this.parent[b], a);\r\n            this.parent[b] = this.parent[a];\r\n        } else {\r\n            if (this.parent[a] != a) this.union(this.parent[a], b);\r\n            this.parent[a] = this.parent[b];\r\n        }\r\n    }\r\n\r\n    // Returns final parent of a node\r\n    find(a) {\r\n        while (this.parent[a] !== a) {\r\n            a = this.parent[a];\r\n        }\r\n        return a;\r\n    }\r\n\r\n    // Checks connectivity of the 2 nodes\r\n    connected(a, b) {\r\n        return this.find(a) === this.find(b);\r\n    }\r\n}","export function knapSackGreedy(capacity: number, weights: number[], values: number[]): number {\r\n    const n = values.length;\r\n    let [load, val] = [0, 0];\r\n\r\n    for (let i = 0; i < n && load < capacity; i++) {\r\n        if (weights[i] <= capacity - load) {\r\n            val += values[i];\r\n            load += weights[i];\r\n            console.log('using item ' + (i + 1) + ' for the solution');\r\n        } else {\r\n            const r = (capacity - load) / weights[i];\r\n            val += r * values[i];\r\n            load += weights[i];\r\n            console.log('using ratio of ' + r + ' for item ' + (i + 1) + ' for the solution');\r\n        }\r\n    }\r\n    return val;\r\n}","export function minCoinChangeGreedy(coins: number[], amount: number): number[] {\r\n    const change: number[] = [];\r\n    let total = 0;\r\n    for (let i = coins.length; i >= 0; i--) {\r\n        const coin = coins[i];\r\n        while (total + coin <= amount) {\r\n            change.push(coin);\r\n            total += coin;\r\n        }\r\n    }\r\n    return change;\r\n}","import { Script } from \"laya/components/Script\";\r\nimport { knapSackGreedy } from \"../algorithms/greedy/knapsackGreedy\";\r\nimport { minCoinChangeGreedy } from \"../algorithms/greedy/min-coin-changeGreedy\";\r\n\r\nexport default class GreedyTest extends Script {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onEnable() {\r\n        console.log('Greedy Test~~~');\r\n\r\n        console.log('minCoinChangeGreedy [1, 5, 10],15: ', minCoinChangeGreedy([1, 5, 10], 15));\r\n        console.log('minCoinChangeGreedy [1, 3, 4],6: ', minCoinChangeGreedy([1, 3, 4], 6));\r\n\r\n        const values = [3, 4, 5];\r\n        const weights = [2, 3, 4];\r\n        const capacity = 6;\r\n\r\n        console.log('KnapSackGreedy: ', knapSackGreedy(capacity, weights, values));\r\n    }\r\n}","export class Node<T>{\r\n    constructor(public element: T, public next?: Node<T>) { }\r\n}\r\n\r\nexport class DoublyNode<T> extends Node<T> {\r\n    constructor(public element: T, public next?: DoublyNode<T>, public prev?: DoublyNode<T>) {\r\n        super(element, next);\r\n    }\r\n}\r\n\r\nexport class TreeNode<K>{\r\n    public left: TreeNode<K>;\r\n    public right: TreeNode<K>;\r\n    constructor(public key: K) { }\r\n\r\n    public toString(): string {\r\n        return `${this.key}`;\r\n    }\r\n}\r\n\r\nexport enum Colors {\r\n    RED = 0,\r\n    BLACK = 1\r\n}\r\nexport class RedBlackNode<K> extends TreeNode<K>{\r\n    public left: RedBlackNode<K>;\r\n    public right: RedBlackNode<K>;\r\n    public parent: RedBlackNode<K>;\r\n    public color: Colors;\r\n\r\n    constructor(public key: K) {\r\n        super(key);\r\n        this.color = Colors.RED;\r\n    }\r\n\r\n    public isRed(): boolean {\r\n        return this.color === Colors.RED;\r\n    }\r\n\r\n    public flipColor() {\r\n        this.color === Colors.RED ? this.color = Colors.BLACK : this.color = Colors.RED;\r\n    }\r\n}","import { defaultEquals, IEqualsFunction, ICompareFunction, defaultCompare, Compare } from \"../util\";\r\nimport { Node, DoublyNode } from \"./data_models/Node\";\r\n\r\nexport class LinkedList<T> {\r\n    protected count = 0;\r\n    protected head: Node<T> | undefined;\r\n\r\n    constructor(protected equalsFn: IEqualsFunction<T> = defaultEquals) { }\r\n\r\n    public push(element: T) {\r\n        const node = new Node(element);\r\n        let current: Node<T>;\r\n\r\n        if (this.head == null) {\r\n            this.head = node;\r\n        } else {\r\n            current = this.head;\r\n            while (current.next != null) current = current.next;\r\n            current.next = node;\r\n        }\r\n        this.count++;\r\n    }\r\n\r\n    public insert(element: T, index: number): boolean {\r\n        if (index >= 0 && index <= this.count) {\r\n            const node = new Node(element);\r\n            if (index === 0) {\r\n                const current = this.head;\r\n                node.next = current;\r\n                this.head = node;\r\n            } else {\r\n                const previous = this.getElementAt(index - 1);\r\n                node.next = previous.next;\r\n                previous.next = node;\r\n            }\r\n            this.count++;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public getElementAt(index: number): Node<T> | undefined {\r\n        if (index >= 0 && index <= this.count) {\r\n            let current = this.head;\r\n            for (let i = 0; i < index && current != null; i++)current = current.next;\r\n            return current;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    public remove(element: T): T | undefined {\r\n        const index = this.indexOf(element);\r\n        return this.removeAt(index);\r\n    }\r\n\r\n    public indexOf(element: T): number {\r\n        let current = this.head;\r\n        for (let i = 0; i < this.count && current != null; i++) {\r\n            if (this.equalsFn(element, current.element)) return i;\r\n            current = current.next;\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    public removeAt(index: number): T | undefined {\r\n        if (index >= 0 && index < this.count) {\r\n            let current = this.head;\r\n            if (index === 0) {\r\n                this.head = current.next;\r\n            } else {\r\n                const previous = this.getElementAt(index - 1);\r\n                current = previous.next;\r\n                previous.next = current.next;\r\n            }\r\n            this.count--;\r\n            return current.element;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    public isEmpty(): boolean {\r\n        return this.size() === 0;\r\n    }\r\n\r\n    public size(): number {\r\n        return this.count;\r\n    }\r\n\r\n    public getHead(): Node<T> {\r\n        return this.head;\r\n    }\r\n\r\n    public clear() {\r\n        this.head = undefined;\r\n        this.count = 0;\r\n    }\r\n\r\n    public toString(): string {\r\n        if (this.head == null) return '';\r\n        let objString = `${this.head.element}`;\r\n        let current = this.head.next;\r\n        for (let i = 1; i < this.size() && current != null; i++) {\r\n            objString = `${objString},${current.element}`;\r\n            current = current.next;\r\n        }\r\n        return objString;\r\n    }\r\n\r\n}\r\n\r\nexport class DoublyLinkedList<T> extends LinkedList<T> {\r\n    protected head: DoublyNode<T> | undefined;\r\n    protected tail: DoublyNode<T> | undefined;\r\n\r\n    constructor(protected equalsFn: IEqualsFunction<T> = defaultEquals) {\r\n        super(equalsFn);\r\n    }\r\n\r\n    public push(element: T) {\r\n        const node = new DoublyNode(element);\r\n        if (this.head == null) {\r\n            this.head = node;\r\n            this.tail = node;\r\n        } else {\r\n            this.tail.next = node;\r\n            node.prev = this.tail;\r\n            this.tail = node;\r\n        }\r\n        this.count++;\r\n    }\r\n\r\n    public insert(element: T, index: number): boolean {\r\n        if (index >= 0 && index <= this.count) {\r\n            const node = new DoublyNode(element);\r\n            let current = this.head;\r\n\r\n            if (index == 0) {\r\n                if (this.head == null) {\r\n                    this.head = node;\r\n                    this.tail = node;\r\n                } else {\r\n                    node.next = this.head;\r\n                    this.head.prev = node;\r\n                    this.head = node;\r\n                }\r\n            } else if (index === this.count) {\r\n                current = this.tail;\r\n                current.next = node;\r\n                node.prev = current;\r\n                this.tail = node;\r\n            } else {\r\n                const previous = this.getElementAt(index - 1);\r\n                current = previous.next;\r\n                node.next = current;\r\n                previous.next = node;\r\n\r\n                current.prev = node;\r\n                node.prev = previous;\r\n            }\r\n            this.count++;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public removeAt(index: number): T | undefined {\r\n        if (index >= 0 && index < this.count) {\r\n            let current = this.head;\r\n            if (index === 0) {\r\n                this.head = this.head.next;\r\n                if (this.count === 1) {\r\n                    this.tail = undefined;\r\n                } else {\r\n                    this.head.prev = undefined;\r\n                }\r\n            } else if (index === this.count - 1) {\r\n                current = this.tail;\r\n                this.tail = current.prev;\r\n                this.tail.next = undefined;\r\n            } else {\r\n                current = this.getElementAt(index);\r\n                const previous = current.prev;\r\n                previous.next = current.next;\r\n                current.next.prev = previous;\r\n            }\r\n            this.count--;\r\n            return current.element;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    public getHead(): DoublyNode<T> {\r\n        return this.head;\r\n    }\r\n    public getTail(): DoublyNode<T> {\r\n        return this.tail;\r\n    }\r\n\r\n    public clear() {\r\n        super.clear();\r\n        this.tail = undefined;\r\n    }\r\n\r\n    public inverseToString(): string {\r\n        if (this.tail == null) return '';\r\n        let objString = `${this.tail.element}`;\r\n        let previous = this.tail.prev;\r\n\r\n        while (previous != null) {\r\n            objString = `${objString},${previous.element}`;\r\n            previous = previous.prev;\r\n        }\r\n        return objString;\r\n    }\r\n}\r\n\r\nexport class CircularLinkedList<T> extends LinkedList<T>{\r\n    constructor(protected equalsFn: IEqualsFunction<T> = defaultEquals) {\r\n        super(equalsFn);\r\n    }\r\n\r\n    public push(element: T) {\r\n        const node = new Node(element);\r\n        let current: Node<T>;\r\n\r\n        if (this.head == null) {\r\n            this.head = node;\r\n        } else {\r\n            current = this.getElementAt(this.size() - 1);\r\n            current.next = node;\r\n        }\r\n        node.next = this.head;\r\n\r\n        this.count++;\r\n    }\r\n\r\n    public insert(element: T, index: number): boolean {\r\n        if (index >= 0 && index <= this.count) {\r\n            const node = new Node(element);\r\n            let current = this.head;\r\n\r\n            if (index === 0) {\r\n                if (this.head == null) {\r\n                    this.head = node;\r\n                    node.next = this.head;\r\n                } else {\r\n                    node.next = current;\r\n                    current = this.getElementAt(this.size());\r\n                    this.head = node;\r\n                    current.next = this.head;\r\n                }\r\n            } else {\r\n                const previous = this.getElementAt(index - 1);\r\n                node.next = previous.next;\r\n                previous.next = node;\r\n            }\r\n            this.count++;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public removeAt(index: number): T | undefined {\r\n        if (index >= 0 && index < this.count) {\r\n            let current = this.head;\r\n\r\n            if (index === 0) {\r\n                if (this.size() === 1) {\r\n                    this.head = undefined;\r\n                } else {\r\n                    const removed = this.head;\r\n                    current = this.getElementAt(this.size() - 1);\r\n                    this.head = this.head.next;\r\n                    current.next = this.head;\r\n                    current = removed;//current is old head,can used to return\r\n                }\r\n            } else {\r\n                const previous = this.getElementAt(index - 1);\r\n                current = previous.next;\r\n                previous.next = current.next\r\n            }\r\n            this.count--;\r\n            return current.element;\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\n\r\nexport class SortedLinkedList<T> extends LinkedList<T>{\r\n    constructor(protected equalsFn: IEqualsFunction<T> = defaultEquals, protected compareFn: ICompareFunction<T> = defaultCompare) {\r\n        super(equalsFn);\r\n    }\r\n\r\n    public push(element: T) {\r\n        if (this.isEmpty()) {\r\n            super.push(element);\r\n        } else {\r\n            const index = this.getIndexNextSortedElement(element);\r\n            super.insert(element, index);\r\n        }\r\n    }\r\n\r\n    public insert(element: T, index: number = 0) {//1\r\n        if (this.isEmpty()) return super.insert(element, 0);//2\r\n        index = this.getIndexNextSortedElement(element);//3\r\n        return super.insert(element, index);//4\r\n    }\r\n\r\n    private getIndexNextSortedElement(element: T): number {\r\n        let current = this.head;\r\n        let i = 0;\r\n\r\n        for (; i < this.size() && current; i++) {\r\n            const comp = this.compareFn(element, current.element);//5\r\n            if (comp === Compare.LESS_THAN) return i;//6\r\n            current = current.next;\r\n        }\r\n        return i;//7\r\n    }\r\n}\r\n\r\nexport class StackLinkedList<T>{\r\n    private items: DoublyLinkedList<T>;\r\n\r\n    constructor() {\r\n        this.items = new DoublyLinkedList<T>();\r\n    }\r\n\r\n    public push(element: T) {\r\n        this.items.push(element);\r\n    }\r\n\r\n    public pop(): T | undefined {\r\n        if (this.isEmpty()) return undefined;\r\n        const result = this.items.removeAt(this.size() - 1);\r\n        return result;\r\n    }\r\n\r\n    public peek(): T | undefined {\r\n        if (this.isEmpty()) return undefined;\r\n        return this.items.getElementAt(this.size() - 1).element;\r\n    }\r\n\r\n    public isEmpty(): boolean {\r\n        return this.items.isEmpty();\r\n    }\r\n\r\n    public size(): number {\r\n        return this.items.size();\r\n    }\r\n\r\n    public clear() {\r\n        this.items.clear();\r\n    }\r\n\r\n    public toString(): string {\r\n        return this.items.toString();\r\n    }\r\n}","import { ValuePair, ValuePairLazy } from \"./data_models/Value-pair\";\r\nimport { default2String } from \"../util\";\r\nimport { LinkedList } from \"./LinkedList\";\r\n\r\nexport class HashTable<K, V>{\r\n    protected table: { [key: string]: ValuePair<K, V> };\r\n\r\n    constructor(protected toStrFn: (key: K) => string = default2String) {\r\n        // this.table = this.tableType;\r\n        this.table = {};\r\n    }\r\n\r\n    private loseloseHashCode(key: K): number {\r\n        if (typeof key === 'number') return key;\r\n        const tableKey = this.toStrFn(key);\r\n        let hash = 0;\r\n        for (let i: number = 0; i < tableKey.length; i++)hash += tableKey.charCodeAt(i);\r\n        return hash % 37;\r\n    }\r\n\r\n    private djb2HashCode(key: K): number {\r\n        const tableKey = this.toStrFn(key);\r\n        let hash = 5381;\r\n        for (let i = 0; i < tableKey.length; i++)hash = (hash * 33) + tableKey.charCodeAt(i);\r\n        return hash % 1013;\r\n    }\r\n\r\n    public hashCode(key: K): number {\r\n        return this.loseloseHashCode(key);\r\n    }\r\n\r\n    public put(key: K, value: V): boolean {\r\n        if (key != null && value != null) {\r\n            const position = this.hashCode(key);\r\n            this.table[position] = new ValuePair(key, value);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public get(key: K): V | undefined {\r\n        const valuePai = this.table[this.hashCode(key)];\r\n        return valuePai == null ? undefined : valuePai.value;\r\n    }\r\n\r\n    public remove(key: K): boolean {\r\n        const hash = this.hashCode(key);\r\n        const valuePair = this.table[hash];\r\n        if (valuePair != null) {\r\n            delete this.table[hash];\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public getTable(): object {\r\n        return this.table;\r\n    }\r\n\r\n    public isEmpty(): boolean {\r\n        return this.size() === 0;\r\n    }\r\n\r\n    public size(): number {\r\n        return Object.keys(this.table).length;\r\n    }\r\n\r\n    public clear() {\r\n        this.table = {};\r\n    }\r\n\r\n    public toString(): string {\r\n        if (this.isEmpty()) return '';\r\n        const keys = Object.keys(this.table);\r\n        let objString = `{${keys[0]}=>${this.table[keys[0]].toString()}}`;\r\n        for (let i = 1; i < keys.length; i++)objString = `${objString},{${keys[i]}=>${this.table[keys[i]].toString()}}`;\r\n        return objString;\r\n    }\r\n}\r\n\r\nexport class HashTableSeparateChaining<K, V> {\r\n    protected table: { [key: string]: LinkedList<ValuePair<K, V>> };\r\n\r\n    constructor(protected toStrFn: (key: K) => string = default2String) {\r\n        this.table = {};\r\n    }\r\n\r\n    private loseloseHashCode(key: K): number {\r\n        if (typeof key === 'number') return key;\r\n        const tableKey = this.toStrFn(key);\r\n        let hash = 0;\r\n        for (let i: number = 0; i < tableKey.length; i++)hash += tableKey.charCodeAt(i);\r\n        return hash % 37;\r\n    }\r\n\r\n    private djb2HashCode(key: K): number {\r\n        const tableKey = this.toStrFn(key);\r\n        let hash = 5381;\r\n        for (let i = 0; i < tableKey.length; i++)hash = (hash * 33) + tableKey.charCodeAt(i);\r\n        return hash % 1013;\r\n    }\r\n\r\n    public hashCode(key: K): number {\r\n        return this.loseloseHashCode(key);\r\n    }\r\n\r\n    public put(key: K, value: V): boolean {\r\n        if (key != null && value != null) {\r\n            const position = this.hashCode(key);\r\n            if (this.table[position] == null) this.table[position] = new LinkedList<ValuePair<K, V>>();\r\n            this.table[position].push(new ValuePair(key, value));\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public get(key: K): V | undefined {\r\n        const position = this.hashCode(key);\r\n        const linkedList = this.table[position];\r\n        if (linkedList != null && !linkedList.isEmpty()) {\r\n            let current = linkedList.getHead();\r\n            while (current != null) {\r\n                if (current.element.key === key) return current.element.value;\r\n                current = current.next;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    public remove(key: K): boolean {\r\n        const position = this.hashCode(key);\r\n        const linkedList = this.table[position];\r\n        if (linkedList != null && !linkedList.isEmpty()) {\r\n            let current = linkedList.getHead();\r\n            while (current != null) {\r\n                if (current.element.key === key) {\r\n                    linkedList.remove(current.element);\r\n                    if (linkedList.isEmpty()) delete this.table[position];\r\n                    return true;\r\n                }\r\n                current = current.next;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public getTable(): object {\r\n        return this.table;\r\n    }\r\n\r\n    public isEmpty(): boolean {\r\n        return this.size() === 0;\r\n    }\r\n\r\n    public size(): number {\r\n        return Object.keys(this.table).length;\r\n    }\r\n\r\n    public clear() {\r\n        this.table = {};\r\n    }\r\n\r\n    public toString(): string {\r\n        if (this.isEmpty()) return '';\r\n        const keys = Object.keys(this.table);\r\n        let objString = `{${keys[0]}=>${this.table[keys[0]].toString()}}`;\r\n        for (let i = 1; i < keys.length; i++)objString = `${objString},{${keys[i]}=>${this.table[keys[i]].toString()}}`;\r\n        return objString;\r\n    }\r\n}\r\n\r\nexport class HashTableLinearProbing<K, V>{\r\n    protected table: { [key: string]: ValuePair<K, V> };\r\n\r\n    constructor(protected toStrFn: (key: K) => string = default2String) {\r\n        this.table = {};\r\n    }\r\n\r\n    private loseloseHashCode(key: K): number {\r\n        if (typeof key === 'number') return key;\r\n        const tableKey = this.toStrFn(key);\r\n        let hash = 0;\r\n        for (let i: number = 0; i < tableKey.length; i++)hash += tableKey.charCodeAt(i);\r\n        return hash % 37;\r\n    }\r\n\r\n    private djb2HashCode(key: K): number {\r\n        const tableKey = this.toStrFn(key);\r\n        let hash = 5381;\r\n        for (let i = 0; i < tableKey.length; i++)hash = (hash * 33) + tableKey.charCodeAt(i);\r\n        return hash % 1013;\r\n    }\r\n\r\n    public hashCode(key: K): number {\r\n        return this.loseloseHashCode(key);\r\n    }\r\n\r\n    public put(key: K, value: V): boolean {\r\n        if (key != null && value != null) {\r\n            const position = this.hashCode(key);\r\n\r\n            if (this.table[position] == null) {\r\n                this.table[position] = new ValuePair(key, value);\r\n            } else {\r\n                let index = position + 1;\r\n                while (this.table[index] != null) index++;\r\n                this.table[index] = new ValuePair(key, value);\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public get(key: K): V | undefined {\r\n        const position = this.hashCode(key);\r\n\r\n        if (this.table[position] != null) {\r\n            if (this.table[position].key === key) return this.table[position].value;\r\n            let index = position + 1;\r\n            while (this.table[index] != null && this.table[index].key !== key) index++;\r\n            if (this.table[index] != null && this.table[index].key === key) return this.table[position].value;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    public remove(key: K): boolean {\r\n        const position = this.hashCode(key);\r\n\r\n        if (this.table[position] != null) {\r\n            if (this.table[position].key === key) {\r\n                delete this.table[position];\r\n                this.verifyRemoveSideEffect(key, position);\r\n                return true;\r\n            }\r\n            let index = position + 1;\r\n            while (this.table[index] != null && this.table[index].key !== key) index++;\r\n            if (this.table[index] != null && this.table[index].key === key) {\r\n                delete this.table[index];\r\n                this.verifyRemoveSideEffect(key, index);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private verifyRemoveSideEffect(key: K, removedPosition: number) {\r\n        const hash = this.hashCode(key);\r\n        let index = removedPosition + 1;\r\n        while (this.table[index] != null) {\r\n            const posHash = this.hashCode(this.table[index].key);\r\n            if (posHash <= hash || posHash <= removedPosition) {\r\n                this.table[removedPosition] = this.table[index];\r\n                delete this.table[index];\r\n                removedPosition = index;\r\n            }\r\n            index++;\r\n        }\r\n    }\r\n\r\n    public getTable(): object {\r\n        return this.table;\r\n    }\r\n\r\n    public isEmpty(): boolean {\r\n        return this.size() === 0;\r\n    }\r\n\r\n    public size(): number {\r\n        return Object.keys(this.table).length;\r\n    }\r\n\r\n    public clear() {\r\n        this.table = {};\r\n    }\r\n\r\n    public toString(): string {\r\n        if (this.isEmpty()) return '';\r\n        const keys = Object.keys(this.table);\r\n        let objString = `{${keys[0]}=>${this.table[keys[0]].toString()}}`;\r\n        for (let i = 1; i < keys.length; i++)objString = `${objString},{${keys[i]}=>${this.table[keys[i]].toString()}}`;\r\n        return objString;\r\n    }\r\n}\r\n\r\nexport class HashTableLinearProbingLazy<K, V>{\r\n    protected table: { [key: string]: ValuePairLazy<K, V> };\r\n\r\n    constructor(protected toStrFn: (key: K) => string = default2String) {\r\n        this.table = {};\r\n    }\r\n\r\n    private loseloseHashCode(key: K): number {\r\n        if (typeof key === 'number') return key;\r\n        const tableKey = this.toStrFn(key);\r\n        let hash = 0;\r\n        for (let i: number = 0; i < tableKey.length; i++)hash += tableKey.charCodeAt(i);\r\n        return hash % 37;\r\n    }\r\n\r\n    private djb2HashCode(key: K): number {\r\n        const tableKey = this.toStrFn(key);\r\n        let hash = 5381;\r\n        for (let i = 0; i < tableKey.length; i++)hash = (hash * 33) + tableKey.charCodeAt(i);\r\n        return hash % 1013;\r\n    }\r\n\r\n    public hashCode(key: K): number {\r\n        return this.loseloseHashCode(key);\r\n    }\r\n\r\n    public put(key: K, value: V): boolean {\r\n        if (key != null && value != null) {\r\n            const position = this.hashCode(key);\r\n            if (this.table[position] == null || (this.table[position] != null && this.table[position].isDeleted)) {\r\n                this.table[position] = new ValuePairLazy(key, value);\r\n            } else {\r\n                let index = position + 1;\r\n                while (this.table[index] != null && !this.table[position].isDeleted) index++;\r\n                this.table[index] = new ValuePairLazy(key, value);\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public get(key: K): V | undefined {\r\n        const position = this.hashCode(key);\r\n\r\n        if (this.table[position] != null) {\r\n            if (this.table[position].key === key && !this.table[position].isDeleted) return this.table[position].value;\r\n            let index = position + 1;\r\n            while (this.table[index] != null && (this.table[index].key !== key || this.table[index].isDeleted)) {\r\n                if (this.table[index].key === key && this.table[index].isDeleted) return undefined;\r\n                index++;\r\n            }\r\n            if (this.table[index] != null && this.table[index].key === key && !this.table[index].isDeleted) return this.table[position].value;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    public remove(key: K): boolean {\r\n        const position = this.hashCode(key);\r\n\r\n        if (this.table[position] != null) {\r\n            if (this.table[position].key === key && !this.table[position].isDeleted) {\r\n                this.table[position].isDeleted = true;\r\n                return true;\r\n            }\r\n            let index = position + 1;\r\n            while (this.table[index] != null && (this.table[index].key !== key || this.table[index].isDeleted)) index++;\r\n            if (this.table[index] != null && this.table[index].key === key && !this.table[index].isDeleted) {\r\n                this.table[index].isDeleted = true;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public getTable(): object {\r\n        return this.table;\r\n    }\r\n\r\n    public isEmpty(): boolean {\r\n        return this.size() === 0;\r\n    }\r\n\r\n    public size(): number {\r\n        return Object.keys(this.table).length;\r\n    }\r\n\r\n    public clear() {\r\n        this.table = {};\r\n    }\r\n\r\n    public toString(): string {\r\n        if (this.isEmpty()) return '';\r\n        const keys = Object.keys(this.table);\r\n        let objString = `{${keys[0]}=>${this.table[keys[0]].toString()}}`;\r\n        for (let i = 1; i < keys.length; i++)objString = `${objString},{${keys[i]}=>${this.table[keys[i]].toString()}}`;\r\n        return objString;\r\n    }\r\n}\r\n","import { Script } from \"laya/components/Script\";\r\nimport { HashTable, HashTableSeparateChaining, HashTableLinearProbing, HashTableLinearProbingLazy } from \"../data_structures/HashTable\";\r\n\r\nexport default class HashTableTest extends Script {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onEnable() {\r\n        console.log('HashTableTest');\r\n\r\n        // const hash = new HashTable();\r\n        // const hash = new HashTableSeparateChaining();\r\n        const hash = new HashTableLinearProbing();\r\n        // const hash = new HashTableLinearProbingLazy();\r\n\r\n        hash.put('Gandalf', 'gandalf@email.com');\r\n        hash.put('John', 'johnsnow@email.com');\r\n        hash.put('Tyrion', 'tyrion@email.com');\r\n\r\n        console.log(hash.hashCode('Gandalf') + ' -Gandalf');\r\n        console.log(hash.hashCode('John') + ' -John');\r\n        console.log(hash.hashCode('Tyrion') + ' -Tyrion');\r\n\r\n        hash.remove('Gandalf');\r\n        console.log(hash.get('Gandalf'));\r\n\r\n\r\n        hash.put('Jack', 'jack@email.com');\r\n        hash.put('Athelstan', 'athelstan@email.com');\r\n\r\n        console.log(hash.hashCode('Jack') + ' -Jack');\r\n        console.log(hash.hashCode('Athelstan') + ' -Athelstan');\r\n\r\n        console.log(hash.toString());\r\n\r\n        console.log('map');\r\n\r\n        const map = new Map();\r\n        map.set('Gandalf', 'gandalf@email.com');\r\n        map.set('John', 'johnsnow@email.com');\r\n        map.set('Tyrion', 'tyrion@email.com');\r\n\r\n        console.log(map.has('Gandalf'));\r\n        console.log(map.size);\r\n        console.log(map.keys());\r\n        console.log(map.values());\r\n        console.log(map.get('Tyrion'));\r\n\r\n        map.delete('John');\r\n        console.log(map);\r\n\r\n        console.log('weakMap');\r\n\r\n        const weakMap = new WeakMap();\r\n        const ob1 = { name: 'Gandalf' };\r\n        const ob2 = { name: 'John' };\r\n        const ob3 = { name: 'Tyrion' };\r\n\r\n        weakMap.set(ob1, 'gandalf@email.com');\r\n        weakMap.set(ob2, 'johnsnow@email.com');\r\n        weakMap.set(ob3, 'tyrion@email.com');\r\n\r\n        console.log(weakMap.has(ob1));\r\n        console.log(weakMap.get(ob3));\r\n        weakMap.delete(ob2);\r\n        console.log(weakMap);\r\n    }\r\n}","import { ICompareFunction, defaultCompare, Compare, swap, reverseCompare } from \"../util\";\r\n\r\nexport class MinHeap<T>{\r\n    protected heap: T[] = [];\r\n\r\n    constructor(protected compareFn: ICompareFunction<T> = defaultCompare) { }\r\n\r\n    private getLeftIndex(index: number): number {\r\n        return 2 * index + 1;\r\n    }\r\n\r\n    private getRightIndex(index: number): number {\r\n        return 2 * index + 2;\r\n    }\r\n\r\n    private getParentIndex(index: number): number {\r\n        if (index === 0) return undefined;\r\n        return Math.floor((index - 1) / 2);\r\n    }\r\n\r\n    public size(): number {\r\n        return this.heap.length;\r\n    }\r\n\r\n    public isEmpty(): boolean {\r\n        return this.size() <= 0;\r\n    }\r\n\r\n    public clear() {\r\n        this.heap = [];\r\n    }\r\n\r\n    public findMinimum(): T {\r\n        return this.isEmpty() ? undefined : this.heap[0];\r\n    }\r\n\r\n    public insert(value: T): boolean {\r\n        if (value != null) {\r\n            const index = this.heap.length;\r\n            this.heap.push(value);\r\n            this.siftUp(index);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private siftDown(index: number) {\r\n        let element = index;\r\n        const left = this.getLeftIndex(index);\r\n        const right = this.getRightIndex(index);\r\n        const size = this.size();\r\n\r\n        if (left < size && this.compareFn(this.heap[element], this.heap[left]) === Compare.BIGGER_THAN) element = left;\r\n        if (right < size && this.compareFn(this.heap[element], this.heap[right]) === Compare.BIGGER_THAN) element = right;\r\n\r\n        if (index !== element) {\r\n            swap(this.heap, index, element);\r\n            this.siftDown(element);\r\n        }\r\n    }\r\n\r\n    private siftUp(index: number) {\r\n        let parent = this.getParentIndex(index);\r\n        while (index > 0 && this.compareFn(this.heap[parent], this.heap[index]) === Compare.BIGGER_THAN) {\r\n            swap(this.heap, parent, index);\r\n            index = parent;\r\n            parent = this.getParentIndex(index);\r\n        }\r\n    }\r\n\r\n    public extract(): T {\r\n        if (this.isEmpty()) return undefined;\r\n        if (this.size() === 1) return this.heap.shift();\r\n\r\n        const removedValue = this.heap[0];\r\n        this.heap[0] = this.heap.pop();\r\n        this.siftDown(0);\r\n        return removedValue;\r\n    }\r\n\r\n    public heapify(array: T[]): T[] {\r\n        if (array) this.heap = array;\r\n        for (let i = Math.floor(this.size() / 2); i >= 0; --i)this.siftDown(i);\r\n        return this.heap;\r\n    }\r\n\r\n    public heapSort1(array: T[], compareFn: ICompareFunction<T> = defaultCompare): T[] {\r\n        this.heapify(array);\r\n        let sortedArray: T[] = [];\r\n        let l = this.size();\r\n        for (let i = 0; i < l; i++)sortedArray.push(this.extract());\r\n        return this.heap = sortedArray;\r\n    }\r\n\r\n    public getAsArray(): T[] {\r\n        return this.heap;\r\n    }\r\n}\r\n\r\nexport class MaxHeap<T> extends MinHeap<T>{\r\n    constructor(protected compareFn: ICompareFunction<T> = defaultCompare) {\r\n        super(compareFn);\r\n        this.compareFn = reverseCompare(compareFn);\r\n    }\r\n}","import { ICompareFunction, swap, defaultCompare } from \"../../util\";\r\n\r\nfunction heapify(array: any[], index: number, heapSize: number, compareFn: ICompareFunction<any>) {\r\n    let largest = index;\r\n    const left = 2 * index + 1\r\n    const right = 2 * index + 2;\r\n\r\n    if (left < heapSize && compareFn(array[left], array[index]) > 0) largest = left;\r\n    if (right < heapSize && compareFn(array[right], array[largest]) > 0) largest = right;\r\n\r\n    if (largest !== index) {\r\n        swap(array, index, largest);\r\n        heapify(array, largest, heapSize, compareFn);\r\n    }\r\n}\r\n\r\nfunction buildMaxHeap(array: any[], compareFn: ICompareFunction<any>): any[] {\r\n    //leaf node have not left&right node. leaf do not need adjust. array.length/2 is last it need adjust node\r\n    for (let i = Math.floor(array.length / 2); i >= 0; --i)heapify(array, i, array.length, compareFn);\r\n    return array;\r\n}\r\n\r\nexport default function heapSort(array: any[], compareFn = defaultCompare) {\r\n    let heapSize = array.length;\r\n    buildMaxHeap(array, compareFn);\r\n    while (heapSize > 1) {\r\n        swap(array, 0, --heapSize);\r\n        heapify(array, 0, heapSize, compareFn);\r\n    }\r\n    return array;\r\n}","import { Script } from \"laya/components/Script\";\r\nimport { MinHeap, MaxHeap } from \"../data_structures/Heap\";\r\nimport { defaultCompare, ICompareFunction } from \"../util\";\r\nimport heapSort from \"../algorithms/sorting/heap-sort\";\r\n\r\nexport default class HeapTest extends Script {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onEnable() {\r\n        console.log('HeapTest');\r\n\r\n        const heap = new MinHeap();\r\n        // const heap = new MaxHeap();\r\n\r\n        heap.insert(2);\r\n        heap.insert(3);\r\n        heap.insert(4);\r\n        heap.insert(5);\r\n\r\n        heap.insert(1);\r\n\r\n        heap.insert(6);\r\n        heap.insert(9);\r\n        heap.insert(8);\r\n        heap.insert(7);\r\n\r\n        console.log(heap.size());\r\n        console.log(heap.isEmpty());\r\n        console.log(heap.findMinimum());\r\n\r\n        console.log(heap.getAsArray().toString());\r\n\r\n        console.log('heap sort--');\r\n        console.log(heap.extract()); //console.log(heap.getAsArray().toString());\r\n        console.log(heap.extract()); //console.log(heap.getAsArray().toString());\r\n        console.log(heap.extract()); //console.log(heap.getAsArray().toString());\r\n        console.log(heap.extract()); //console.log(heap.getAsArray().toString());\r\n\r\n        // console.log(heap.heapSort(heap.getAsArray()).toString());\r\n\r\n        // console.log(heap.heapify([8, 7, 10, 6, 9]).toString());\r\n        // console.log(heap.heapify([2, 3, 4, 5, 1]).toString());\r\n        // console.log(heap.heapify(heap.heapify([2, 3, 4, 5, 1])).toString());\r\n        // console.log(heap.heapify(heap.getAsArray()).toString());\r\n\r\n        console.log('array [2, 3, 4, 5, 1]');\r\n        console.log('heapify-');\r\n        heap.heapify([2, 3, 4, 5, 1]);\r\n        console.log(heap.getAsArray().toString());\r\n\r\n        console.log('array [2, 1, 4, 5, 3]');\r\n        console.log('heapify-');\r\n        heap.heapify([2, 1, 4, 5, 3]);\r\n        console.log(heap.getAsArray().toString());\r\n\r\n        console.log('array [2, 1, 4, 5, 3, 7, 8, 6, 10, 19, 9]');\r\n        console.log('heapify-');\r\n        heap.heapify([2, 1, 4, 5, 3, 7, 8, 6, 10, 19, 9]);\r\n        console.log(heap.getAsArray().toString());\r\n\r\n        console.log('array [8, 7, 10, 6, 9, 1, 3, 5]');\r\n        console.log('heapify-');\r\n        heap.heapify([8, 7, 10, 6, 9, 1, 3, 5]);\r\n        console.log(heap.getAsArray().toString());\r\n\r\n        console.log('array [7, 6, 3, 5, 4, 1, 2]');\r\n        console.log('heapify-');\r\n        heap.heapify([7, 6, 3, 5, 4, 1, 2]);\r\n        console.log(heap.getAsArray().toString());\r\n\r\n        // heap.heapify([2, 1, 4, 5, 3])\r\n        console.log(heap.getAsArray().toString());\r\n        console.log(heapSort([8, 7, 10, 6, 9]).toString());\r\n\r\n        console.log(heapSort([7, 1, 4, 5, 3, 2, 8, 6, 10, 19, 9]).toString());\r\n        console.log(heapSort([17, 11, 14, 15, 13, 12, 18, 16, 20, 29, 19]).toString());\r\n\r\n        console.log(heapSort([7, 6, 3, 5, 4, 1, 2]).toString());\r\n        // heapSort\r\n\r\n        // console.log(heap.heapSort(heap.getAsArray()).toString());\r\n    }\r\n}","import { Script } from \"laya/components/Script\";\r\nimport { LinkedList, DoublyLinkedList, SortedLinkedList } from \"../data_structures/LinkedList\";\r\n\r\nexport default class LinkedListTest extends Script {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onEnable() {\r\n        // const list = new LinkedList();\r\n        const list = new DoublyLinkedList();\r\n\r\n        list.push(15);\r\n        list.push(10);\r\n        list.push(8);\r\n        console.log(list.toString());\r\n        list.insert(9, 2)\r\n        console.log(list.toString());\r\n        console.log(list.getElementAt(3));\r\n        console.log(list.toString());\r\n        console.log(list.remove(15));\r\n        console.log(list.toString());\r\n\r\n        console.log(list.indexOf(9));\r\n        console.log(list.removeAt(2));\r\n        console.log(list.toString());\r\n        console.log(list.size());\r\n        console.log(list.isEmpty());\r\n        console.log(list.getHead());\r\n\r\n        console.log(list.getTail());\r\n        console.log(list.inverseToString());\r\n\r\n        console.log('==========');\r\n        const sortedLinkedList = new SortedLinkedList();\r\n        sortedLinkedList.push(1);\r\n        sortedLinkedList.insert(4, 1);\r\n        console.log(sortedLinkedList.toString());\r\n        sortedLinkedList.push(2);\r\n        sortedLinkedList.insert(3, 0);\r\n        console.log(sortedLinkedList.toString());\r\n    }\r\n}","import { Script } from \"laya/components/Script\";\r\nimport { Queue, Deque, PriorityQueue } from \"../data_structures/Queue\";\r\n\r\nexport default class QueueTest extends Script {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onEnable() {\r\n        const queue = new Queue();\r\n        console.log(queue.isEmpty());\r\n\r\n        queue.enqueue('John');\r\n        queue.enqueue('Jack');\r\n        console.log(queue.toString());\r\n\r\n        queue.enqueue('Camila');\r\n        console.log(queue.toString());\r\n        console.log(queue.size());\r\n        console.log(queue.isEmpty());\r\n        queue.dequeue();\r\n        queue.dequeue();\r\n        console.log(queue.toString());\r\n\r\n        console.log('--------')\r\n        const deque = new Deque();\r\n        console.log(deque.isEmpty());\r\n        deque.addBack('John');\r\n        deque.addBack('Jack');\r\n        console.log(deque.toString());\r\n        deque.addBack('Camila');\r\n        console.log(deque.toString());\r\n        console.log(deque.size());\r\n        console.log(deque.isEmpty());\r\n        deque.removeFront();\r\n        console.log(deque.toString());\r\n        deque.removeBack();\r\n        console.log(deque.toString());\r\n        deque.addFront('John');\r\n        console.log(deque.toString());\r\n\r\n        let dd = new Deque();\r\n        dd.addFront('a0');\r\n        dd.addFront('a1');\r\n        dd.addFront('a2');\r\n        console.log(dd.toString());\r\n\r\n        const hotPotato = (elementsList: Array<any>, num: number) => {\r\n            const queue = new Queue();\r\n            const elimintatedList = [];\r\n            for (let i = 0; i < elementsList.length; i++)queue.enqueue(elementsList[i]);\r\n            while (queue.size() > 1) {\r\n                for (let i = 0; i < num; i++)queue.enqueue(queue.dequeue());\r\n                elimintatedList.push(queue.dequeue());\r\n            }\r\n            return {\r\n                eliminated: elimintatedList,\r\n                winner: queue.dequeue()\r\n            };\r\n        }\r\n\r\n        const names = ['John', 'Jack', 'Camila', 'Ingrid', 'Carl'];\r\n        const result = hotPotato(names, 7);\r\n        result.eliminated.forEach(name => console.log(`${name} was eliminated `));\r\n        console.log(`Winner is ${result.winner}`);\r\n\r\n        const palindromeChecker = (aString: string): boolean => {\r\n            if (aString === undefined || aString === null || (aString !== null && aString.length == 0)) return false;\r\n            const deque = new Deque<string>();\r\n            const lowerString = aString.toLocaleLowerCase().split(' ').join('');\r\n            let isEqual = true;\r\n            let [firstChar, lastChar] = ['', ''];\r\n            for (let i = 0; i < lowerString.length; i++)deque.addBack(lowerString.charAt(i));\r\n            while (deque.size() > 1 && isEqual) {\r\n                firstChar = deque.removeFront();\r\n                lastChar = deque.removeBack();\r\n                if (firstChar !== lastChar) isEqual = false;\r\n            }\r\n            return isEqual;\r\n        }\r\n\r\n        console.log('a', palindromeChecker('a'));\r\n        console.log('aa', palindromeChecker('aa'));\r\n        console.log('kayak', palindromeChecker('kayak'));\r\n        console.log('level', palindromeChecker('level'));\r\n        console.log('was it a car or a cat i saw', palindromeChecker('was it a car or a cat i saw'));\r\n        console.log('step on no pets', palindromeChecker('step on no pets'));\r\n\r\n        console.log('=================');\r\n\r\n        const priorityQueue = new PriorityQueue<number>();\r\n        priorityQueue.enqueue(4);\r\n        priorityQueue.enqueue(5);\r\n        priorityQueue.enqueue(3);\r\n        console.log(priorityQueue.toString());\r\n        priorityQueue.dequeue();\r\n        console.log(priorityQueue.toString());\r\n    }\r\n}","import { Script } from \"laya/components/Script\";\r\n\r\nexport default class RecursiveTest extends Script {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onEnable() {\r\n        console.log('RecursiveTest---');\r\n\r\n        const factorial = (n: number): number => {\r\n            if (n === 1 || n === 0) return 1;\r\n            return n * factorial(n - 1);\r\n        }\r\n        console.log('factorial ', factorial(5));\r\n\r\n        const fibonacciIterative = (n: number): number => {\r\n            if (n < 1) return 0;\r\n            let [fibNMinus2, fibNMinus1, fibN] = [0, 1, n];\r\n            for (let i: number = 2; i <= n; i++) {\r\n                fibN = fibNMinus1 + fibNMinus2;\r\n                fibNMinus2 = fibNMinus1;\r\n                fibNMinus1 = fibN;\r\n            }\r\n            return fibN;\r\n        }\r\n        console.log('fibonacciIterative ', fibonacciIterative(5));\r\n\r\n        const fibonacci = (n: number): number => {\r\n            if (n < 1) return 0;\r\n            if (n <= 2) return 1;\r\n            return fibonacci(n - 1) + fibonacci(n - 2);\r\n        }\r\n        console.log('fibonacci ', fibonacci(5));\r\n\r\n        const fibonacciMemorization = (n: number): number => {\r\n            if (n < 1) return 0;\r\n            const memo = [0, 1];\r\n            console.log(memo);\r\n            const fibonacciMem = (num: number): number => {\r\n                if (memo[num] != null) return memo[num];\r\n                return (memo[num] = fibonacciMem(num - 1) + fibonacciMem(num - 2));\r\n            }\r\n            return fibonacciMem(n);\r\n        }\r\n        console.log('fibonacciMemorization ', fibonacciMemorization(5));\r\n    }\r\n}","import { Compare, defaultCompare, ICompareFunction, swap } from \"../../util\";\r\n\r\nfunction partition<T>(array: T[], left: number, right: number, compareFn: ICompareFunction<T>): number {\r\n    const pivot = array[(right + left) / 2 | 0];\r\n    let [i, j] = [left, right];\r\n    while (i <= j) {\r\n        while (compareFn(array[i], pivot) === Compare.LESS_THAN) i++;\r\n        while (compareFn(array[j], pivot) === Compare.BIGGER_THAN) j--;\r\n        if (i <= j) {\r\n            swap(array, i, j);\r\n            i++;\r\n            j--;\r\n        }\r\n    }\r\n    return i;\r\n}\r\n\r\nfunction quick<T>(array: T[], left: number, right: number, compareFn: ICompareFunction<T>): T[] {\r\n    let index: number;\r\n    if (array.length > 1) {\r\n        index = partition(array, left, right, compareFn)\r\n        if (left < index - 1) quick(array, left, index - 1, compareFn);\r\n        if (index < right) quick(array, index, right, compareFn);\r\n    }\r\n    return array;\r\n}\r\n\r\nexport function quickSort<T>(array: T[], compareFn = defaultCompare): T[] {\r\n    return quick(array, 0, array.length - 1, compareFn);\r\n}","import { Compare, defaultCompare, DOES_NOT_EXIST } from \"../../util\";\r\nimport { quickSort } from \"../sorting/quick-sort\";\r\n\r\nfunction binarySearchRecursive<T>(array: T[], value: T, low: number, high: number, compareFn = defaultCompare): number {\r\n    if (low <= high) {\r\n        const mid = (low + high) >> 1 | 0;\r\n        const element = array[mid];\r\n        if (compareFn(element, value) === Compare.LESS_THAN) {\r\n            return binarySearchRecursive(array, value, mid + 1, high, compareFn);\r\n        } else if (compareFn(element, value) === Compare.BIGGER_THAN) {\r\n            return binarySearchRecursive(array, value, low, mid - 1, compareFn);\r\n        } else {\r\n            return mid;\r\n        }\r\n    }\r\n    return DOES_NOT_EXIST;\r\n}\r\n\r\nexport function binarySearch<T>(array: T[], value: T, compareFn = defaultCompare): number {\r\n    const sortedArray = quickSort(array);\r\n    const low = 0;\r\n    const high = sortedArray.length - 1;\r\n\r\n    return binarySearchRecursive(array, value, low, high, compareFn);\r\n}","import { Compare, defaultCompare, DOES_NOT_EXIST } from \"../../util\";\r\nimport { quickSort } from \"../sorting/quick-sort\";\r\n\r\nexport function binarySearchIteration<T>(array: T[], value: T, compareFn = defaultCompare): number {\r\n    const sortedArray = quickSort(array);\r\n    let low = 0;\r\n    let high = sortedArray.length - 1;\r\n\r\n    while (low <= high) {\r\n        const mid = (low + high) / 2 | 0;\r\n        const element = sortedArray[mid];\r\n        if (compareFn(element, value) === Compare.LESS_THAN) {\r\n            low = mid + 1;\r\n        } else if (compareFn(element, value) === Compare.BIGGER_THAN) {\r\n            high = mid - 1;\r\n        } else {\r\n            return mid;\r\n        }\r\n    }\r\n    return DOES_NOT_EXIST;\r\n}","import { biggerEquals, Compare, defaultCompare, defaultDiff, defaultEquals, DOES_NOT_EXIST, lesserEquals } from \"../../util\";\r\n\r\nexport function interpolationSearch<T>(array: T[], value: T, compareFn = defaultCompare, equalsFn = defaultEquals, diffFn = defaultDiff): number {\r\n    const length = array.length;\r\n    let [low, high, position, delta] = [0, length - 1, -1, -1];\r\n\r\n    while (low <= high && biggerEquals(value, array[low], compareFn) && lesserEquals(value, array[high], compareFn)) {\r\n        delta = diffFn(value, array[low]) / diffFn(array[high], array[low]);\r\n        position = low + (high - low) * delta | 0;\r\n        if (equalsFn(array[position], value)) return position;\r\n        compareFn(array[position], value) === Compare.LESS_THAN ? low = position + 1 : high = position - 1;\r\n    }\r\n\r\n    return DOES_NOT_EXIST;\r\n}","import { defaultEquals, DOES_NOT_EXIST, IEqualsFunction } from \"../../util\";\r\n\r\nexport function sequentialSearch<T>(array: T[], value: T, equalsFn: IEqualsFunction<T> = defaultEquals): number {\r\n    for (let i = 0; i < array.length; i++)if (equalsFn(value, array[i])) return i;\r\n    return DOES_NOT_EXIST;\r\n}","import { Script } from \"laya/components/Script\";\r\nimport { binarySearch } from \"../algorithms/search/binary-search\";\r\nimport { binarySearchIteration } from \"../algorithms/search/binary-search-iteration\";\r\nimport { interpolationSearch } from \"../algorithms/search/interpolation-search\";\r\nimport { sequentialSearch } from \"../algorithms/search/sequential-search\";\r\nimport { quickSort } from \"../algorithms/sorting/quick-sort\";\r\n\r\nexport default class SearchTest extends Script {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onEnable() {\r\n        console.log('SearchTest~~~');\r\n\r\n        let arr = [5, 4, 3, 2, 1];\r\n        console.log('SequentialSearch: ', sequentialSearch(arr.slice(0), 3));\r\n\r\n        console.log('BinarySearch: ', binarySearch(arr.slice(0), 4));\r\n\r\n        console.log('InterpolationSearch: ', interpolationSearch(quickSort(arr.slice(0)), 2));\r\n\r\n        console.log('BinarySearchIteration: ', binarySearchIteration(arr.slice(0), 5));\r\n    }\r\n}","export default class Set<T>{\r\n    private items: any;\r\n\r\n    constructor() {\r\n        this.items = {};\r\n    }\r\n\r\n    public add(element: T): boolean {\r\n        if (!this.has(element)) {\r\n            this.items[element] = element;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public delete(element: T): boolean {\r\n        if (this.has(element)) {\r\n            delete this.items[element];\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public has(element: T): boolean {\r\n        return Object.prototype.hasOwnProperty.call(this.items, element);\r\n    }\r\n\r\n    public size(): number {\r\n        return Object.keys(this.items).length;\r\n    }\r\n\r\n    public values(): T[] {\r\n        let values = [];\r\n        for (let key in this.items) if (this.items.hasOwnProperty(key)) values.push(key);\r\n        return values;\r\n    }\r\n\r\n    public union(otherSet: Set<T>): Set<T> {\r\n        const unionSet = new Set<T>();\r\n\r\n        this.values().forEach(value => unionSet.add(value));\r\n        otherSet.values().forEach(value => unionSet.add(value));\r\n\r\n        return unionSet;\r\n    }\r\n\r\n    public intersection(otherSet: Set<T>): Set<T> {\r\n        const intersectionSet = new Set<T>();\r\n\r\n        const values = this.values();\r\n        const otherValues = otherSet.values();\r\n\r\n        let biggerSet = values;\r\n        let smallerSet = otherValues;\r\n\r\n        if (otherValues.length - values.length > 0) {\r\n            biggerSet = otherValues;\r\n            smallerSet = values;\r\n        }\r\n\r\n        smallerSet.forEach(value => {\r\n            if (biggerSet.indexOf(value) != -1) intersectionSet.add(value);\r\n        });\r\n\r\n        return intersectionSet;\r\n    }\r\n\r\n    public difference(otherSet: Set<T>): Set<T> {\r\n        const differenceSet = new Set<T>();\r\n\r\n        this.values().forEach(value => {\r\n            if (!otherSet.has(value)) differenceSet.add(value);\r\n        });\r\n\r\n        return differenceSet;\r\n    }\r\n\r\n    public isSubsetOf(otherSet: Set<T>): boolean {\r\n        if (this.size() > otherSet.size()) return false;\r\n\r\n        let isSubset = true;\r\n        this.values().every(value => {\r\n            if (!otherSet.has(value)) {\r\n                isSubset = false;\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n\r\n        return isSubset;\r\n    }\r\n}","import { Script } from \"laya/components/Script\";\r\nimport Set from \"../data_structures/Set\";\r\n\r\nexport default class SetTest extends Script {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onEnable() {\r\n        console.log('SET');\r\n        const set = new Set<number>();\r\n        set.add(1);\r\n        console.log(set.values());\r\n        console.log(set.has(1));\r\n        console.log(set.size());\r\n\r\n        set.add(2);\r\n        console.log(set.values());\r\n        console.log(set.has(2));\r\n        console.log(set.size());\r\n\r\n        set.delete(1);\r\n        console.log(set.values());\r\n\r\n        set.delete(2);\r\n        console.log(set.values());\r\n\r\n        const setA = new Set<number>();\r\n        setA.add(1);\r\n        setA.add(2);\r\n        setA.add(3);\r\n        setA.add(6);\r\n\r\n        const setB = new Set<number>();\r\n        setB.add(3);\r\n        setB.add(4);\r\n        setB.add(5);\r\n        setB.add(6);\r\n\r\n        const unionAB = setA.union(setB);\r\n        console.log('unionAB', unionAB.values());\r\n\r\n        const intersectionAB = setA.intersection(setB);\r\n        console.log('intersetionAB', intersectionAB.values());\r\n\r\n        const differenceAB = setA.difference(setB);\r\n        console.log('differenceAB', differenceAB.values());\r\n\r\n        const setC = new Set<number>();\r\n        setC.add(1);\r\n        setC.add(2);\r\n        setC.add(3);\r\n        setC.add(6);\r\n        setC.add(4);\r\n        console.log('isSubsetOf', setA.isSubsetOf(setC));\r\n\r\n    }\r\n}","import { swap } from \"../../util\";\r\n\r\nexport function shuffle<T>(array: T[]): T[] {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n        const randomIndex = Math.random() * (i + 1) | 0;\r\n        swap(array, i, randomIndex);\r\n    }\r\n    return array;\r\n}","import { Compare, defaultCompare, swap } from \"../../util\";\r\n\r\nexport function BubbleSort<T>(array: T[], compareFn = defaultCompare): T[] {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; i++) {\r\n        for (let j = 0; j < length - 1 - i; j++) {\r\n            if (compareFn(array[j], array[j + 1]) === Compare.BIGGER_THAN) swap(array, j, j + 1);\r\n        }\r\n    }\r\n    return array;\r\n}","import { Compare, defaultCompare } from \"../../util\";\r\n\r\nexport function insertionSort<T>(array: T[], compareFn = defaultCompare): T[] {\r\n    const length = array.length;\r\n    let temp: T;\r\n    for (let i = 1; i < length; i++) {\r\n        let j = i;\r\n        temp = array[i];\r\n        while (j > 0 && compareFn(array[j - 1], temp) === Compare.BIGGER_THAN) {\r\n            array[j] = array[j - 1];\r\n            j--;\r\n        }\r\n        array[j] = temp;\r\n    }\r\n    return array;\r\n}","import { insertionSort } from \"./insertion-sort\";\r\n\r\nfunction createBuckets(array: number[], bucketSize: number): number[][] {\r\n    let minValue = array[0];\r\n    let maxValue = array[0];\r\n    for (let i = 1; i < array.length; i++) {\r\n        if (array[i] < minValue) {\r\n            minValue = array[i];\r\n        } else if (array[i] > maxValue) {\r\n            maxValue = array[i];\r\n        }\r\n    }\r\n\r\n    const bucketCount = ((maxValue - minValue) / bucketSize | 0) + 1;\r\n    const buckets: number[][] = [];\r\n    for (let i = 0; i < bucketCount; i++)buckets[i] = [];\r\n\r\n    for (let j = 0; j < array.length; j++)buckets[(array[j] - minValue) / bucketSize | 0].push(array[j]);\r\n\r\n    return buckets;\r\n}\r\n\r\nfunction sortBuckets(buckets: number[][]): number[] {\r\n    const sortedArray = [];\r\n    for (let i = 0; i < buckets.length; i++) {\r\n        if (buckets[i] != null) {\r\n            insertionSort(buckets[i]);\r\n            sortedArray.push(...buckets[i]);\r\n        }\r\n    }\r\n\r\n    return sortedArray;\r\n}\r\n\r\nexport function bucketSort(array: number[], bucketSize: number = 5): number[] {\r\n    if (array.length < 2) return array;\r\n\r\n    const buckets = createBuckets(array, bucketSize);\r\n\r\n    return sortBuckets(buckets);\r\n}","import { Compare, defaultCompare } from \"../../util\";\r\n\r\nexport function findMaxValue<T>(array: T[], compareFn = defaultCompare): T {\r\n    if (array && array.length > 0) {\r\n        let max = array[0];\r\n        for (let i = 1; i < array.length; i++)if (compareFn(max, array[i]) === Compare.LESS_THAN) max = array[i];\r\n        return max;\r\n    }\r\n    return undefined;\r\n}\r\n\r\nexport function findMinValue<T>(array: T[], compareFn = defaultCompare): T {\r\n    if (array && array.length > 0) {\r\n        let min = array[0];\r\n        for (let i = 1; i < array.length; i++)if (compareFn(min, array[i]) === Compare.BIGGER_THAN) min = array[i];\r\n        return min;\r\n    }\r\n    return undefined;\r\n}","import { findMaxValue } from \"../search/min-max-search\";\r\n\r\nexport function countingSort(array: number[]): number[] {\r\n    if (array.length < 2) return array;\r\n    \r\n    const maxValue = findMaxValue<number>(array);\r\n    let sortedIndex = 0;\r\n    const counts = new Array<number>(maxValue + 1);\r\n\r\n    array.forEach(element => {\r\n        if (!counts[element]) counts[element] = 0;\r\n        counts[element]++;\r\n    });\r\n\r\n    counts.forEach((element, i) => {\r\n        while (element > 0) {\r\n            array[sortedIndex++] = i;\r\n            element--;\r\n        }\r\n    });\r\n    return array;\r\n}","import { Compare, defaultCompare, ICompareFunction } from \"../../util\";\r\n\r\nfunction merge<T>(left: T[], right: T[], compareFn: ICompareFunction<T>): T[] {\r\n    let [i, j] = [0, 0];\r\n    const result = [];\r\n    while (i < left.length && j < right.length) {\r\n        result.push(compareFn(left[i], right[j]) === Compare.LESS_THAN ? left[i++] : right[j++]);\r\n    }\r\n    return result.concat(i < left.length ? left.slice(i) : right.slice(j));\r\n}\r\nexport function mergeSort<T>(array: T[], compareFn = defaultCompare): T[] {\r\n    if (array.length > 1) {\r\n        const length = array.length;\r\n        const middle = length / 2 | 0;\r\n        const left = mergeSort(array.slice(0, middle), compareFn);\r\n        const right = mergeSort(array.slice(middle, length), compareFn);\r\n        array = merge(left, right, compareFn);\r\n    }\r\n    return array;\r\n}","import { findMaxValue, findMinValue } from \"../search/min-max-search\";\r\n\r\nfunction countingSortForRadix(array: number[], radixBase: number, significantDigit: number, minValue: number): number[] {\r\n    let bucketsIndex: number;\r\n    const buckets: number[] = [];\r\n    const aux: number[] = [];\r\n\r\n    for (let i = 0; i < radixBase; i++)buckets[i] = 0;\r\n\r\n    for (let i = 0; i < array.length; i++) {\r\n        bucketsIndex = ((array[i] - minValue) / significantDigit) % radixBase | 0;\r\n        console.log('~~~  ', array[i], minValue, significantDigit, radixBase, bucketsIndex)\r\n        buckets[bucketsIndex]++;\r\n    }\r\n    console.log(buckets)\r\n\r\n    for (let i = 1; i < radixBase; i++)buckets[i] += buckets[i - 1];\r\n    console.log(buckets)\r\n\r\n    for (let i = array.length - 1; i >= 0; i--) {\r\n        bucketsIndex = ((array[i] - minValue) / significantDigit) % radixBase | 0;\r\n        aux[--buckets[bucketsIndex]] = array[i];\r\n        console.log('``` ', array[i], minValue, significantDigit, radixBase, bucketsIndex)\r\n    }\r\n    console.log(buckets)\r\n\r\n    for (let i = 0; i < array.length; i++)array[i] = aux[i];\r\n\r\n    return array;\r\n}\r\n\r\nexport function radixSort(array: number[], radixBase: number = 10): number[] {\r\n    if (array.length < 2) return array;\r\n\r\n    const [minValue, maxValue] = [findMinValue(array), findMaxValue(array)];\r\n\r\n    let significantDigit = 1;\r\n    while ((maxValue - minValue) / significantDigit >= 1) {\r\n        array = countingSortForRadix(array, radixBase, significantDigit, minValue);\r\n        significantDigit *= radixBase;\r\n    }\r\n\r\n    return array;\r\n}","import { Compare, defaultCompare, swap } from \"../../util\";\r\n\r\nexport function selectionSort<T>(array: T[], compareFn = defaultCompare): T[] {\r\n    const length = array.length;\r\n    let indexMin: number;\r\n\r\n    for (let i = 0; i < length - 1; i++) {\r\n        indexMin = i;\r\n        for (let j = i; j < length; j++) {\r\n            if (compareFn(array[indexMin], array[j]) === Compare.BIGGER_THAN) indexMin = j;\r\n        }\r\n        if (i !== indexMin) swap(array, i, indexMin);\r\n    }\r\n\r\n    return array;\r\n}","import { Compare, defaultCompare } from \"../../util\";\r\n\r\nexport function shellSort<T>(array: T[], compareFn = defaultCompare): T[] {\r\n    const length = array.length;\r\n    let temp: T;\r\n    let gap = 1;\r\n    while (gap < length / 3) gap = gap * 3 + 1;\r\n\r\n    for (gap; gap > 0; gap = gap / 3 | 0) {\r\n        console.log('gap: ', gap)\r\n        for (let i = gap; i < length; i++) {\r\n            temp = array[i];\r\n            let j = i - gap;\r\n            while (j >= 0 && compareFn(array[j], temp) === Compare.BIGGER_THAN) {\r\n                array[j + gap] = array[j];\r\n                j -= gap;\r\n            }\r\n            array[j + gap] = temp;\r\n        }\r\n    }\r\n    return array;\r\n}","import { Script } from \"laya/components/Script\";\r\nimport { shuffle } from \"../algorithms/shuffle/fisher-yates\";\r\nimport { BubbleSort } from \"../algorithms/sorting/bubble-sort\";\r\nimport { bucketSort } from \"../algorithms/sorting/bucket-sort\";\r\nimport { countingSort } from \"../algorithms/sorting/counting-sort\";\r\nimport { insertionSort } from \"../algorithms/sorting/insertion-sort\";\r\nimport { mergeSort } from \"../algorithms/sorting/merge-sort\";\r\nimport { quickSort } from \"../algorithms/sorting/quick-sort\";\r\nimport { radixSort } from \"../algorithms/sorting/radix-sort\";\r\nimport { selectionSort } from \"../algorithms/sorting/selection-sort\";\r\nimport { shellSort } from \"../algorithms/sorting/shell-sort\";\r\nimport { swap } from \"../util\";\r\n\r\nexport default class SortingTest extends Script {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onEnable() {\r\n        let createNonSortedArray = (l: number = 5) => {\r\n            let array = [];\r\n            for (let i = l; i > 0; i--)array.push(i);\r\n            shuffle<number>(array);\r\n            return array;\r\n        }\r\n\r\n        const noiseArray = createNonSortedArray();\r\n\r\n        const arrayBubble = BubbleSort(noiseArray.slice(0));\r\n        console.log('bubbleSort: ', noiseArray.toString(), ' to ', arrayBubble.toString());\r\n\r\n        const arraySelection = selectionSort(noiseArray.slice(0));\r\n        console.log('selectionSort: ', noiseArray.toString(), ' to ', arraySelection.toString());\r\n\r\n        const arrayInsertion = insertionSort(noiseArray.slice(0));\r\n        console.log('insertionSort: ', noiseArray.toString(), ' to ', arrayInsertion.toString());\r\n\r\n        const arrayMerge = mergeSort(noiseArray.slice(0));\r\n        console.log('mergeSort: ', noiseArray.toString(), ' to ', arrayMerge.toString());\r\n\r\n        const quickNoiseArray = [3, 5, 1, 6, 4, 7, 2]\r\n        const arrayQuick = quickSort(quickNoiseArray.slice(0));\r\n        console.log('quickSort: ', quickNoiseArray.toString(), ' to ', arrayQuick.toString());\r\n\r\n        const countingArray = [4, 5, 3, 2, 3, 1];\r\n        const arrayCounting = countingSort(countingArray.slice(0));\r\n        console.log('countingSort: ', countingArray.toString(), ' to ', arrayCounting.toString());\r\n\r\n        const bucketArray = [1, 3, 9, 6, 4, 7, 8, 5, 2];\r\n        const arrayBucket = bucketSort(bucketArray.slice(0));\r\n        console.log('bucketSort: ', bucketArray.toString(), ' to ', arrayBucket.toString());\r\n\r\n        // const radixArray = [3, 2, 4, 1, 6];\r\n        const radixArray = [1, 3, 9, 6, 4, 7, 8, 5, 2, 11, 15, 41, 23, 33, 17];\r\n        // const radixArray = createNonSortedArray(20);\r\n        const arrayRadix = radixSort(radixArray.slice(0));\r\n        console.log('radixSort: ', radixArray.toString(), ' to ', arrayRadix.toString());\r\n\r\n        const shellArray = createNonSortedArray(10);\r\n        const arrayShell = shellSort(shellArray.slice(0));\r\n        console.log('shellSort: ', shellArray.toString(), ' to ', arrayShell.toString());\r\n\r\n        const shellArray1 = radixArray;\r\n        const arrayShell1 = shellSort(shellArray1.slice(0));\r\n        console.log('shellSort: ', shellArray1.toString(), ' to ', arrayShell1.toString());\r\n\r\n        const shellArray2 = createNonSortedArray(3);\r\n        const arrayShell2 = shellSort(shellArray2.slice(0));\r\n        console.log('shellSort: ', shellArray2.toString(), ' to ', arrayShell2.toString());\r\n    }\r\n\r\n}","import { Script } from \"laya/components/Script\"\r\nimport { Stack, StackArray } from \"../data_structures/Stack\";\r\n\r\nexport default class StackTest extends Script {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onEnable() {\r\n        const stack = new StackArray();\r\n        console.log(stack.isEmpty());\r\n\r\n        stack.push(5);\r\n        stack.push(8);\r\n        console.log(stack.peek());\r\n        stack.push(11);\r\n        console.log(stack.size());\r\n        console.log(stack.isEmpty());\r\n        stack.push(15);\r\n        stack.pop();\r\n        stack.pop();\r\n        console.log(stack.size());\r\n\r\n        const stack1 = new Stack();\r\n        stack1.push(5);\r\n        stack1.push(8);\r\n        stack1.clear();\r\n\r\n        let decimal2Binary = (decNum: number) => {\r\n            const remStack = new Stack();\r\n            let number = decNum;\r\n            let rem: number;\r\n            let binaryString = '';\r\n            while (number > 0) {\r\n                rem = Math.floor(number % 2);\r\n                remStack.push(rem);\r\n                number = Math.floor(number / 2);\r\n            }\r\n            while (!remStack.isEmpty()) {\r\n                binaryString += remStack.pop().toString();\r\n            }\r\n            return binaryString;\r\n        }\r\n\r\n        console.log('decimal2Binary:');\r\n        console.log(decimal2Binary(233));\r\n        console.log(decimal2Binary(10));\r\n        console.log(decimal2Binary(1000));\r\n        console.log(decimal2Binary(13));\r\n\r\n        let baseConverter = (decNumber: number, base: number) => {\r\n            const remStack = new Stack<number>();\r\n            const digits = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n            let number = decNumber;\r\n            let rem: number;\r\n            let baseString = '';\r\n            if (!(base >= 2 && base <= 36)) return '';\r\n            while (number > 0) {\r\n                rem = Math.floor(number % base);\r\n                remStack.push(rem);\r\n                number = Math.floor(number / base);\r\n            }\r\n            while (!remStack.isEmpty()) baseString += digits[remStack.pop()];\r\n            return baseString;\r\n        }\r\n\r\n        console.log('baseConverter:');\r\n        console.log(baseConverter(100345, 2));\r\n        console.log(baseConverter(100345, 8));\r\n        console.log(baseConverter(100345, 16));\r\n        console.log(baseConverter(100345, 35));\r\n    }\r\n}","import { TreeNode, RedBlackNode, Colors } from \"./data_models/Node\";\r\nimport { ICompareFunction, defaultCompare, Compare } from \"../util\";\r\n\r\nexport class BinarySearchTree<T>{\r\n    protected root: TreeNode<T>;\r\n\r\n    constructor(protected compareFn: ICompareFunction<T> = defaultCompare) { }\r\n\r\n    public insert(key: T) {\r\n        if (this.root == null) {\r\n            this.root = new TreeNode(key);\r\n        } else {\r\n            this.insertNode(this.root, key);\r\n        }\r\n    }\r\n\r\n    protected insertNode(node: TreeNode<T>, key: T) {\r\n        if (this.compareFn(key, node.key) === Compare.LESS_THAN) {\r\n            if (node.left == null) {\r\n                node.left = new TreeNode(key);\r\n            } else {\r\n                this.insertNode(node.left, key);\r\n            }\r\n        } else if (node.right == null) {\r\n            node.right = new TreeNode(key);\r\n        } else {\r\n            this.insertNode(node.right, key);\r\n        }\r\n    }\r\n\r\n    public getRoot(): TreeNode<T> {\r\n        return this.root;\r\n    }\r\n\r\n    public search(key: T): boolean {\r\n        return this.searchNode(this.root, key);\r\n    }\r\n\r\n    private searchNode(node: TreeNode<T>, key: T): boolean {\r\n        if (node == null) return false;\r\n        if (this.compareFn(key, node.key) === Compare.LESS_THAN) {\r\n            return this.searchNode(node.left, key);\r\n        } else if (this.compareFn(key, node.key) === Compare.BIGGER_THAN) {\r\n            return this.searchNode(node.right, key);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public inOrderTraverse(callback: Function) {\r\n        this.inOrderTraverseNode(this.root, callback);\r\n    }\r\n\r\n    private inOrderTraverseNode(node: TreeNode<T>, callback: Function) {\r\n        if (node != null) {\r\n            this.inOrderTraverseNode(node.left, callback);\r\n            callback(node.key);\r\n            this.inOrderTraverseNode(node.right, callback);\r\n        }\r\n    }\r\n\r\n    public preOrderTraverse(callback: Function) {\r\n        this.preOrderTraverseNode(this.root, callback);\r\n    }\r\n\r\n    private preOrderTraverseNode(node: TreeNode<T>, callback: Function) {\r\n        if (node != null) {\r\n            callback(node.key);\r\n            this.preOrderTraverseNode(node.left, callback);\r\n            this.preOrderTraverseNode(node.right, callback);\r\n        }\r\n    }\r\n\r\n    public postOrderTraverse(callback: Function) {\r\n        this.postOrderTraverseNode(this.root, callback);\r\n    }\r\n\r\n    private postOrderTraverseNode(node: TreeNode<T>, callback: Function) {\r\n        if (node != null) {\r\n            this.postOrderTraverseNode(node.left, callback);\r\n            this.postOrderTraverseNode(node.right, callback);\r\n            callback(node.key);\r\n        }\r\n    }\r\n\r\n    public min(): TreeNode<T> {\r\n        return this.minNode(this.root);\r\n    }\r\n\r\n    protected minNode(node: TreeNode<T>): TreeNode<T> {\r\n        let current = node;\r\n        while (current != null && current.left != null) current = current.left;\r\n        return current;\r\n    }\r\n\r\n    public max(): TreeNode<T> {\r\n        return this.maxNode(this.root);\r\n    }\r\n\r\n    protected maxNode(node: TreeNode<T>): TreeNode<T> {\r\n        let current = node;\r\n        while (current != null && current.right != null) current = current.right;\r\n        return current;\r\n    }\r\n\r\n    public remove(key: T): TreeNode<T> {\r\n        return this.root = this.removeNode(this.root, key);\r\n    }\r\n\r\n    protected removeNode(node: TreeNode<T>, key: T): TreeNode<T> {\r\n        if (node == null) return null;\r\n        if (this.compareFn(key, node.key) === Compare.LESS_THAN) {\r\n            node.left = this.removeNode(node.left, key);\r\n            return node;\r\n        } else if (this.compareFn(key, node.key) === Compare.BIGGER_THAN) {\r\n            node.right = this.removeNode(node.right, key);\r\n            return node;\r\n        } else {\r\n            // one leaf node\r\n            if (node.left == null && node.right == null) {\r\n                node = null;\r\n                return node;\r\n            }\r\n            // one node with only one child\r\n            if (node.left == null) {\r\n                node = node.right;\r\n                return node;\r\n            } else if (node.right == null) {\r\n                node = node.left;\r\n                return node;\r\n            }\r\n            //one node with two children\r\n            const aux = this.minNode(node.right);\r\n            node.key = aux.key;\r\n            node.right = this.removeNode(node.right, aux.key);\r\n            return node;\r\n        }\r\n    }\r\n}\r\n\r\nenum BalanceFactor {\r\n    UNBALANCED_RIGHT = 1,\r\n    SLIGHTLY_UNBALANCED_RIGHT = 2,\r\n    BALANCED = 3,\r\n    SLIGHTLY_UNBALANCED_LEFT = 4,\r\n    UNBALANCED_LEFT = 5\r\n}\r\nexport class AVLTree<T> extends BinarySearchTree<T> {\r\n    constructor(protected compareFn: ICompareFunction<T> = defaultCompare) {\r\n        super(compareFn);\r\n    }\r\n\r\n    private getNodeHeight(node: TreeNode<T>): number {\r\n        if (node == null) return -1;\r\n        return Math.max(this.getNodeHeight(node.left), this.getNodeHeight(node.right)) + 1;\r\n    }\r\n\r\n    /**\r\n     * Left left case: rotate right\r\n     * \r\n     *         b                           a\r\n     *        / \\                         / \\\r\n     *       a   e  -> rotationLL(b)->   c   b\r\n     *      / \\                         /   / \\\r\n     *     c   d                       f   d   e\r\n     *    /\r\n     *   f\r\n     * \r\n     */\r\n    private rotationLL(node: TreeNode<T>): TreeNode<T> {\r\n        const tmp = node.left; //tmp=a\r\n        node.left = tmp.right; //b.left=a.right=d\r\n        tmp.right = node;      //a.right=b\r\n        return tmp;            //top=a\r\n    }\r\n\r\n    /**\r\n     * Right right case: rotate right\r\n     *    \r\n     *     a                                b\r\n     *    / \\                              / \\\r\n     *   c   b      -> rotationRR(a)->    a   e\r\n     *      / \\                          / \\   \\\r\n     *     d   e                        c   d   f\r\n     *          \\\r\n     *           f\r\n     * \r\n     */\r\n    private rotationRR(node: TreeNode<T>): TreeNode<T> {\r\n        const tmp = node.right; //tmp=b\r\n        node.right = tmp.left;  //a.right=b.left=d\r\n        tmp.left = node;        //b.left=a\r\n        return tmp;             //top=b\r\n    }\r\n\r\n    /**\r\n     * Left right case: rotate left then right\r\n     * \r\n     *         b                              b                            d\r\n     *        / \\                            / \\                          / \\\r\n     *       a   e  -> rotationRR(a)->      d   e  -> rotationLL(b)->    a   b\r\n     *      / \\                            / \\                          /   / \\\r\n     *     c   d                          a   f                        c   f   e\r\n     *          \\                        /\r\n     *           f                      c\r\n     * \r\n     */\r\n    private rotationLR(node: TreeNode<T>): TreeNode<T> {\r\n        node.left = this.rotationRR(node.left);\r\n        return this.rotationLL(node);\r\n    }\r\n\r\n    /**\r\n     * Right left case: rotate right then left\r\n     * \r\n     *         b                           b                               c\r\n     *        / \\                         / \\                             / \\\r\n     *       a   e  -> rotationLL(e)->   a   c     -> rotationRR(b)->    b   e\r\n     *          / \\                         / \\                         / \\   \\\r\n     *         c   d                       f   e                       a   f   d\r\n     *        /                                 \\\r\n     *       f                                   d\r\n     * \r\n     */\r\n    private rotationRL(node: TreeNode<T>): TreeNode<T> {\r\n        node.right = this.rotationLL(node.right);\r\n        return this.rotationRR(node);\r\n    }\r\n\r\n    private getBalanceFactor(node: TreeNode<T>): number {\r\n        const heightDifference = this.getNodeHeight(node.left) - this.getNodeHeight(node.right);\r\n        switch (heightDifference) {\r\n            case -2: return BalanceFactor.UNBALANCED_RIGHT;\r\n            case -1: return BalanceFactor.SLIGHTLY_UNBALANCED_RIGHT;\r\n            case 1: return BalanceFactor.SLIGHTLY_UNBALANCED_LEFT;\r\n            case 2: return BalanceFactor.UNBALANCED_LEFT;\r\n            default: return BalanceFactor.BALANCED;\r\n        }\r\n    }\r\n\r\n    public insert(key: T) {\r\n        this.root = this.insertNode(this.root, key);\r\n    }\r\n\r\n    protected insertNode(node: TreeNode<T>, key: T): TreeNode<T> {\r\n        if (node == null) {\r\n            return new TreeNode(key);\r\n        } else if (this.compareFn(key, node.key) === Compare.LESS_THAN) {\r\n            node.left = this.insertNode(node.left, key);\r\n        } else if (this.compareFn(key, node.key) == Compare.BIGGER_THAN) {\r\n            node.right = this.insertNode(node.right, key);\r\n        } else {\r\n            return node;\r\n        }\r\n\r\n        const balanceState = this.getBalanceFactor(node);\r\n\r\n        if (balanceState === BalanceFactor.UNBALANCED_LEFT) {\r\n            if (this.compareFn(key, node.left.key) === Compare.LESS_THAN) {\r\n                node = this.rotationLL(node);\r\n            } else {\r\n                return this.rotationLR(node);\r\n            }\r\n        }\r\n\r\n        if (balanceState === BalanceFactor.UNBALANCED_RIGHT) {\r\n            if (this.compareFn(key, node.right.key) === Compare.BIGGER_THAN) {\r\n                node = this.rotationRR(node);\r\n            } else {\r\n                return this.rotationRL(node);\r\n            }\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    protected removeNode(node: TreeNode<T>, key: T): TreeNode<T> {\r\n        if (node == null) return null;\r\n\r\n        if (this.compareFn(key, node.key) === Compare.LESS_THAN) {\r\n            node.left = this.removeNode(node.left, key);//The key to be deleted is in the left sub-tree\r\n        } else if (this.compareFn(key, node.key) === Compare.BIGGER_THAN) {\r\n            node.right = this.removeNode(node.right, key);//this key to be deleted is in the right sub-tree\r\n        } else {//node is the node to be deleted\r\n            if (node.left == null && node.right == null) {\r\n                node = null;\r\n            } else if (node.left == null && node.right != null) {\r\n                node = node.right;\r\n            } else if (node.left != null && node.right == null) {\r\n                node = node.left;\r\n            } else {//node has 2 children,get the in-order successor. same to BinarySearchTree.removeNode function's  'one node with two children' case\r\n                const inOrderSuccessor = this.minNode(node.right);\r\n                node.key = inOrderSuccessor.key;\r\n                node.right = this.removeNode(node.right, inOrderSuccessor.key);\r\n            }\r\n        }\r\n\r\n        if (node == null) return node;//help to recursive\r\n\r\n        const balanceState = this.getBalanceFactor(node);// verify if tree is balanced\r\n\r\n        if (balanceState === BalanceFactor.UNBALANCED_LEFT) {\r\n            if (this.getBalanceFactor(node.left) === BalanceFactor.BALANCED || this.getBalanceFactor(node.left) === BalanceFactor.SLIGHTLY_UNBALANCED_LEFT) {\r\n                return this.rotationLL(node);\r\n            }\r\n            if (this.getBalanceFactor(node.left) === BalanceFactor.SLIGHTLY_UNBALANCED_RIGHT) {\r\n                return this.rotationLR(node.left);\r\n            }\r\n        }\r\n\r\n        if (balanceState === BalanceFactor.UNBALANCED_RIGHT) {\r\n            if (this.getBalanceFactor(node.right) === BalanceFactor.BALANCED || this.getBalanceFactor(node.right) === BalanceFactor.SLIGHTLY_UNBALANCED_RIGHT) {\r\n                return this.rotationRR(node);\r\n            }\r\n            if (this.getBalanceFactor(node.right) === BalanceFactor.SLIGHTLY_UNBALANCED_LEFT) {\r\n                return this.rotationRL(node.right);\r\n            }\r\n        }\r\n\r\n        return node;\r\n    }\r\n}\r\n\r\nexport class RedBlackTree<T> extends BinarySearchTree<T>{\r\n    protected root: RedBlackNode<T>;\r\n\r\n    constructor(protected compareFn: ICompareFunction<T> = defaultCompare) {\r\n        super();\r\n    }\r\n\r\n    /**\r\n   * Left left case: rotate right\r\n   *\r\n   *       b                           a\r\n   *      / \\                         / \\\r\n   *     a   e -> rotationLL(b) ->   c   b\r\n   *    / \\                             / \\\r\n   *   c   d                           d   e\r\n   *\r\n   */\r\n    private rotationLL(node: RedBlackNode<T>) {\r\n        const tmp = node.left;\r\n        node.left = tmp.right;\r\n        if (tmp.right && tmp.right.key) tmp.right.parent = node;\r\n        tmp.parent = node.parent;\r\n        if (!node.parent) {\r\n            this.root = tmp;\r\n        } else {\r\n            if (node === node.parent.left) {\r\n                node.parent.left = tmp;\r\n            } else {\r\n                node.parent.right = tmp;\r\n            }\r\n        }\r\n        tmp.right = node;\r\n        node.parent = tmp;\r\n    }\r\n\r\n    /**\r\n   * Right right case: rotate left\r\n   *\r\n   *     a                              b\r\n   *    / \\                            / \\\r\n   *   c   b   -> rotationRR(a) ->    a   e\r\n   *      / \\                        / \\\r\n   *     d   e                      c   d\r\n   *\r\n   */\r\n    private rotationRR(node: RedBlackNode<T>) {\r\n        const tmp = node.right;\r\n        node.right = tmp.left;\r\n        if (tmp.left && tmp.left.key) tmp.left.parent = node;\r\n        tmp.parent = node.parent;\r\n        if (!node.parent) {\r\n            this.root = tmp;\r\n        } else {\r\n            if (node === node.parent.left) {\r\n                node.parent.left = tmp;\r\n            } else {\r\n                node.parent.right = tmp;\r\n            }\r\n        }\r\n        tmp.left = node;\r\n        node.parent = tmp;\r\n    }\r\n\r\n    public insert(key: T) {\r\n        if (this.root == null) {\r\n            this.root = new RedBlackNode(key);\r\n            this.root.color = Colors.BLACK;\r\n        } else {\r\n            const newNode = this.insertNode(this.root, key);\r\n            this.fixTreeProperties(newNode);\r\n        }\r\n    }\r\n\r\n    protected insertNode(node: RedBlackNode<T>, key: T): RedBlackNode<T> {\r\n        if (this.compareFn(key, node.key) === Compare.LESS_THAN) {\r\n            if (node.left == null) {\r\n                node.left = new RedBlackNode(key);\r\n                node.left.parent = node;\r\n                return node.left;\r\n            } else {\r\n                return this.insertNode(node.left, key);\r\n            }\r\n        } else if (node.right == null) {\r\n            node.right = new RedBlackNode(key);\r\n            node.right.parent = node;\r\n            return node.right;\r\n        } else {\r\n            return this.insertNode(node.right, key);\r\n        }\r\n    }\r\n\r\n    private fixTreeProperties(node: RedBlackNode<T>) {\r\n        while (node && node.parent && node.parent.color === Colors.RED && node.color !== Colors.BLACK) {\r\n            let parent = node.parent;\r\n            const grandParent = parent.parent;\r\n\r\n            if (grandParent && grandParent.left === parent) {// case A: parent is left child of grand parent\r\n                const uncle = grandParent.right;\r\n                if (uncle && uncle.color === Colors.RED) {//case 1:uncle of node is also red -only recoloring\r\n                    grandParent.color = Colors.RED;\r\n                    uncle.color = Colors.BLACK;\r\n                    node = grandParent;\r\n                } else {\r\n                    if (node === parent.right) {// case 2: node is right child - left rotate\r\n                        this.rotationRR(parent);\r\n                        node = parent;\r\n                        parent = node.parent;\r\n                    }\r\n\r\n                    this.rotationLL(grandParent);// case 3: node is left child - right rotate\r\n\r\n                    parent.color = Colors.BLACK;\r\n                    grandParent.color = Colors.RED;\r\n                    node = parent;\r\n                }\r\n            } else {// case B: parent is right child of grand parent\r\n                const uncle = grandParent.left;\r\n                if (uncle && uncle.color === Colors.RED) {// case 1: uncle is read - only recoloring\r\n                    grandParent.color = Colors.RED;\r\n                    parent.color = Colors.BLACK;\r\n                    uncle.color = Colors.BLACK;\r\n                    node = grandParent;\r\n                } else {\r\n                    if (node === parent.left) {// case 2: node is left child - left rotate\r\n                        this.rotationLL(parent);\r\n                        node = parent;\r\n                        parent = node.parent;\r\n                    }\r\n\r\n                    this.rotationRR(grandParent);// case 3: node is right child - left rotate\r\n\r\n                    parent.color = Colors.BLACK;\r\n                    grandParent.color = Colors.RED;\r\n                    node = parent;\r\n                }\r\n            }\r\n        }\r\n        this.root.color = Colors.BLACK;\r\n    }\r\n\r\n    public getRoot(): RedBlackNode<T> {\r\n        return this.root;\r\n    }\r\n}","import { Script } from \"laya/components/Script\";\r\nimport { BinarySearchTree, AVLTree, RedBlackTree } from \"../data_structures/Tree\";\r\n\r\nexport default class TreeTest extends Script {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onEnable() {\r\n        console.log('TreeTest---');\r\n\r\n        // const tree = new BinarySearchTree();\r\n        // const tree = new AVLTree();\r\n        const tree = new RedBlackTree();\r\n\r\n        tree.insert(11);\r\n\r\n        tree.insert(7);\r\n        tree.insert(15);\r\n        tree.insert(5);\r\n        tree.insert(3);\r\n        tree.insert(9);\r\n        tree.insert(8);\r\n        tree.insert(10);\r\n        tree.insert(13);\r\n        tree.insert(12);\r\n        tree.insert(14);\r\n        tree.insert(20);\r\n        tree.insert(18);\r\n        tree.insert(25);\r\n\r\n        tree.insert(6);\r\n\r\n        const printNode = (value: number) => console.log(value);\r\n\r\n        console.log('inOrderTraverse...');\r\n        tree.inOrderTraverse(printNode);\r\n\r\n        console.log('preOrderTraverse...');\r\n        tree.preOrderTraverse(printNode);\r\n\r\n        console.log('postOrderTraverse...');\r\n        tree.postOrderTraverse(printNode);\r\n\r\n        console.log('search min max...', tree.min(), tree.max());\r\n\r\n        console.log(tree.search(1) ? 'key 1 found.' : 'key 1 not found.');\r\n        console.log(tree.search(8) ? 'key 8 found.' : 'key 8 not found.');\r\n\r\n        console.log('remove 6...');\r\n        tree.remove(6);\r\n        tree.inOrderTraverse(printNode);\r\n        console.log('remove 5...');\r\n        tree.remove(5);\r\n        tree.inOrderTraverse(printNode);\r\n        console.log('remove 15...');\r\n        tree.remove(15);\r\n        tree.inOrderTraverse(printNode);\r\n    }\r\n}","/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */\nimport { Scene } from \"laya/display/Scene\";\r\nimport { ClassUtils } from \"laya/utils/ClassUtils\";\nvar REG: Function = ClassUtils.regClass;\nimport { Button } from \"laya/ui/Button\";\nimport { Sprite } from \"laya/display/Sprite\";\nexport module ui {\n\texport class StartUI extends Scene {\n\t\tpublic referenceClass:Array<any>=[Button, Sprite]; // 强制引用类,防止被编译器忽略\n\t\tconstructor(){ super() }\n\t}\n}\nexport module ui.test {\n\texport class BackTracingSceneUI extends Scene {\n\t\tpublic referenceClass:Array<any>=[Button]; // 强制引用类,防止被编译器忽略\n\t\tconstructor(){ super() }\n\t}\n\texport class ConsoleUnitUI extends Scene {\n\t\tpublic referenceClass:Array<any>=[Button]; // 强制引用类,防止被编译器忽略\n\t\tconstructor(){ super() }\n\t}\n\texport class DictionarySceneUI extends Scene {\n\t\tpublic referenceClass:Array<any>=[Button]; // 强制引用类,防止被编译器忽略\n\t\tconstructor(){ super() }\n\t}\n\texport class DynamicProgramingSceneUI extends Scene {\n\t\tpublic referenceClass:Array<any>=[Button]; // 强制引用类,防止被编译器忽略\n\t\tconstructor(){ super() }\n\t}\n\texport class FunctionalTestUI extends Scene {\n\t\tpublic referenceClass:Array<any>=[Button]; // 强制引用类,防止被编译器忽略\n\t\tconstructor(){ super() }\n\t}\n\texport class GraphSceneUI extends Scene {\n\t\tpublic referenceClass:Array<any>=[Button]; // 强制引用类,防止被编译器忽略\n\t\tconstructor(){ super() }\n\t}\n\texport class GreedySceneUI extends Scene {\n\t\tpublic referenceClass:Array<any>=[Button]; // 强制引用类,防止被编译器忽略\n\t\tconstructor(){ super() }\n\t}\n\texport class HashTableSceneUI extends Scene {\n\t\tpublic referenceClass:Array<any>=[Button]; // 强制引用类,防止被编译器忽略\n\t\tconstructor(){ super() }\n\t}\n\texport class HeapSceneUI extends Scene {\n\t\tpublic referenceClass:Array<any>=[Button]; // 强制引用类,防止被编译器忽略\n\t\tconstructor(){ super() }\n\t}\n\texport class LinkedListSceneUI extends Scene {\n\t\tpublic referenceClass:Array<any>=[Button]; // 强制引用类,防止被编译器忽略\n\t\tconstructor(){ super() }\n\t}\n\texport class QueueSceneUI extends Scene {\n\t\tpublic referenceClass:Array<any>=[Button]; // 强制引用类,防止被编译器忽略\n\t\tconstructor(){ super() }\n\t}\n\texport class RecursiveSceneUI extends Scene {\n\t\tpublic referenceClass:Array<any>=[Button]; // 强制引用类,防止被编译器忽略\n\t\tconstructor(){ super() }\n\t}\n\texport class SearchSceneUI extends Scene {\n\t\tpublic referenceClass:Array<any>=[Button]; // 强制引用类,防止被编译器忽略\n\t\tconstructor(){ super() }\n\t}\n\texport class SetSceneUI extends Scene {\n\t\tpublic referenceClass:Array<any>=[Button]; // 强制引用类,防止被编译器忽略\n\t\tconstructor(){ super() }\n\t}\n\texport class SortingSceneUI extends Scene {\n\t\tpublic referenceClass:Array<any>=[Button]; // 强制引用类,防止被编译器忽略\n\t\tconstructor(){ super() }\n\t}\n\texport class StackSceneUI extends Scene {\n\t\tpublic referenceClass:Array<any>=[Button]; // 强制引用类,防止被编译器忽略\n\t\tconstructor(){ super() }\n\t}\n\texport class TreeSceneUI extends Scene {\n\t\tpublic referenceClass:Array<any>=[Button]; // 强制引用类,防止被编译器忽略\n\t\tconstructor(){ super() }\n\t}\n}","/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */\r\nimport Start from \"./script/Start\"\nimport BackTracingTest from \"./script/BackTracingTest\"\nimport Go2StartScene from \"./script/Go2StartScene\"\nimport UnitConsole from \"./script/UnitConsole\"\nimport DictionaryTest from \"./script/DictionaryTest\"\nimport DynamicProgramingTest from \"./script/DynamicProgramingTest\"\nimport FunctionalTest from \"./script/FunctionalTest\"\nimport GraphTest from \"./script/GraphTest\"\nimport GreedyTest from \"./script/GreedyTest\"\nimport HashTableTest from \"./script/HashTableTest\"\nimport HeapTest from \"./script/HeapTest\"\nimport LinkedListTest from \"./script/LinkedListTest\"\nimport QueueTest from \"./script/QueueTest\"\nimport RecursiveTest from \"./script/RecursiveTest\"\nimport SearchTest from \"./script/SearchTest\"\nimport SetTest from \"./script/SetTest\"\nimport SortingTest from \"./script/SortingTest\"\nimport StackTest from \"./script/StackTest\"\nimport TreeTest from \"./script/TreeTest\"\nimport { ClassUtils } from \"laya/utils/ClassUtils\";\nimport { ui } from \"./ui/layaMaxUI\";\r\n/*\r\n* 游戏初始化配置;\r\n*/\r\nexport default class GameConfig{\r\n    static width:number=640;\r\n    static height:number=1136;\r\n    static scaleMode:string=\"fixedwidth\";\r\n    static screenMode:string=\"none\";\r\n    static alignV:string=\"top\";\r\n    static alignH:string=\"left\";\r\n    static startScene:any=\"Start.scene\";\r\n    static sceneRoot:string=\"\";\r\n    static debug:boolean=false;\r\n    static stat:boolean=false;\r\n    static physicsDebug:boolean=false;\r\n    static exportSceneToJson:boolean=true;\r\n    constructor(){}\r\n    static init(){\r\n        var reg: Function = ClassUtils.regClass;\n\t\treg(\"ui\", ui);\r\n        reg(\"script/Start.ts\",Start);\n        reg(\"script/BackTracingTest.ts\",BackTracingTest);\n        reg(\"script/Go2StartScene.ts\",Go2StartScene);\n        reg(\"script/UnitConsole.ts\",UnitConsole);\n        reg(\"script/DictionaryTest.ts\",DictionaryTest);\n        reg(\"script/DynamicProgramingTest.ts\",DynamicProgramingTest);\n        reg(\"script/FunctionalTest.ts\",FunctionalTest);\n        reg(\"script/GraphTest.ts\",GraphTest);\n        reg(\"script/GreedyTest.ts\",GreedyTest);\n        reg(\"script/HashTableTest.ts\",HashTableTest);\n        reg(\"script/HeapTest.ts\",HeapTest);\n        reg(\"script/LinkedListTest.ts\",LinkedListTest);\n        reg(\"script/QueueTest.ts\",QueueTest);\n        reg(\"script/RecursiveTest.ts\",RecursiveTest);\n        reg(\"script/SearchTest.ts\",SearchTest);\n        reg(\"script/SetTest.ts\",SetTest);\n        reg(\"script/SortingTest.ts\",SortingTest);\n        reg(\"script/StackTest.ts\",StackTest);\n        reg(\"script/TreeTest.ts\",TreeTest);\r\n    }\r\n}\r\nGameConfig.init();","import { Laya } from \"Laya\";\r\nimport { URL } from \"laya/net/URL\";\r\nimport { Utils } from \"laya/utils/Utils\";\r\nimport { Stat } from \"laya/utils/Stat\";\r\nimport { Handler } from \"laya/utils/Handler\";\r\nimport { ResourceVersion } from \"laya/net/ResourceVersion\";\r\nimport { AtlasInfoManager } from \"laya/net/AtlasInfoManager\";\r\nimport { Scene } from \"laya/display/Scene\";\r\nimport GameConfig from \"./GameConfig\";\r\nimport { WebGL } from \"laya/webgl/WebGL\";\r\nimport { Physics } from \"laya/physics/Physics\";\r\nimport { PhysicsDebugDraw } from \"laya/physics/PhysicsDebugDraw\";\r\n\r\nclass Main {\r\n\tconstructor() {\r\n\t\t//根据IDE设置初始化引擎\t\t\r\n\t\tif (window[\"Laya3D\"]) window[\"Laya3D\"].init(GameConfig.width, GameConfig.height);\r\n\t\telse Laya.init(GameConfig.width, GameConfig.height, WebGL);\r\n\t\tPhysics.enable();\r\n\t\tLaya[\"DebugPanel\"] && Laya[\"DebugPanel\"].enable();\r\n\t\tLaya.stage.scaleMode = GameConfig.scaleMode;\r\n\t\tLaya.stage.screenMode = GameConfig.screenMode;\r\n\t\tLaya.stage.alignV = GameConfig.alignV;\r\n\t\tLaya.stage.alignH = GameConfig.alignH;\r\n\t\t//兼容微信不支持加载scene后缀场景\r\n\t\tURL.exportSceneToJson = GameConfig.exportSceneToJson;\r\n\r\n\t\t//打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）\r\n\t\tif (GameConfig.debug || Utils.getQueryString(\"debug\") == \"true\") Laya.enableDebugPanel();\r\n\t\tif (GameConfig.physicsDebug) PhysicsDebugDraw.enable();\r\n\t\tif (GameConfig.stat) Stat.show();\r\n\t\tLaya.alertGlobalError(true);\r\n\r\n\t\t//激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程\r\n\t\tResourceVersion.enable(\"version.json\", Handler.create(this, this.onVersionLoaded), ResourceVersion.FILENAME_VERSION);\r\n\t}\r\n\r\n\tonVersionLoaded(): void {\r\n\t\t//激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图\r\n\t\tAtlasInfoManager.enable(\"fileconfig.json\", Handler.create(this, this.onConfigLoaded));\r\n\t}\r\n\r\n\tonConfigLoaded(): void {\r\n\t\t//加载IDE指定的场景\r\n\t\tGameConfig.startScene && Scene.open(GameConfig.startScene);\r\n\t}\r\n}\r\n//激活启动类\r\nnew Main();\r\n"],"names":["Script","Scene","isSafe","initializeColor","INF","Colors","ClassUtils","Button","Sprite","Laya","WebGL","Physics","URL","Utils","PhysicsDebugDraw","Stat","ResourceVersion","Handler","AtlasInfoManager"],"mappings":"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"}