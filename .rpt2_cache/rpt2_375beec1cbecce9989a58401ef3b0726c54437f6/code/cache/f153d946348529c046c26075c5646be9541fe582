{
  "code": "import { Script } from \"laya/components/Script\";\r\nimport { RedBlackTree } from \"../data_structures/Tree\";\r\nexport default class TreeTest extends Script {\r\n    constructor() {\r\n        super();\r\n    }\r\n    onEnable() {\r\n        console.log('TreeTest---');\r\n        const tree = new RedBlackTree();\r\n        tree.insert(11);\r\n        tree.insert(7);\r\n        tree.insert(15);\r\n        tree.insert(5);\r\n        tree.insert(3);\r\n        tree.insert(9);\r\n        tree.insert(8);\r\n        tree.insert(10);\r\n        tree.insert(13);\r\n        tree.insert(12);\r\n        tree.insert(14);\r\n        tree.insert(20);\r\n        tree.insert(18);\r\n        tree.insert(25);\r\n        tree.insert(6);\r\n        const printNode = (value) => console.log(value);\r\n        console.log('inOrderTraverse...');\r\n        tree.inOrderTraverse(printNode);\r\n        console.log('preOrderTraverse...');\r\n        tree.preOrderTraverse(printNode);\r\n        console.log('postOrderTraverse...');\r\n        tree.postOrderTraverse(printNode);\r\n        console.log('search min max...', tree.min(), tree.max());\r\n        console.log(tree.search(1) ? 'key 1 found.' : 'key 1 not found.');\r\n        console.log(tree.search(8) ? 'key 8 found.' : 'key 8 not found.');\r\n        console.log('remove 6...');\r\n        tree.remove(6);\r\n        tree.inOrderTraverse(printNode);\r\n        console.log('remove 5...');\r\n        tree.remove(5);\r\n        tree.inOrderTraverse(printNode);\r\n        console.log('remove 15...');\r\n        tree.remove(15);\r\n        tree.inOrderTraverse(printNode);\r\n    }\r\n}\r\n//# sourceMappingURL=TreeTest.js.map",
  "references": [
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/components/Script.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/src/data_structures/Tree.ts"
  ],
  "map": "{\"version\":3,\"file\":\"TreeTest.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/script/TreeTest.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,wBAAwB,CAAC;AAChD,OAAO,EAA6B,YAAY,EAAE,MAAM,yBAAyB,CAAC;AAElF,MAAM,CAAC,OAAO,OAAO,QAAS,SAAQ,MAAM;IACxC;QACI,KAAK,EAAE,CAAC;IACZ,CAAC;IAED,QAAQ;QACJ,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAI3B,MAAM,IAAI,GAAG,IAAI,YAAY,EAAE,CAAC;QAEhC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAEhB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAChB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAChB,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAChB,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAChB,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAChB,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAChB,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAChB,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAEhB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEf,MAAM,SAAS,GAAG,CAAC,KAAa,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAExD,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;QAClC,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QAEhC,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;QACnC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;QAEjC,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;QACpC,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;QAElC,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;QAEzD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC;QAClE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC;QAElE,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAC3B,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACf,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QAChC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAC3B,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACf,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QAChC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAC5B,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAChB,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;IACpC,CAAC;CACJ\"}"
}
