{
  "code": "export function knapSackGreedy(capacity, weights, values) {\r\n    const n = values.length;\r\n    let [load, val] = [0, 0];\r\n    for (let i = 0; i < n && load < capacity; i++) {\r\n        if (weights[i] <= capacity - load) {\r\n            val += values[i];\r\n            load += weights[i];\r\n            console.log('using item ' + (i + 1) + ' for the solution');\r\n        }\r\n        else {\r\n            const r = (capacity - load) / weights[i];\r\n            val += r * values[i];\r\n            load += weights[i];\r\n            console.log('using ratio of ' + r + ' for item ' + (i + 1) + ' for the solution');\r\n        }\r\n    }\r\n    return val;\r\n}\r\n//# sourceMappingURL=knapsackGreedy.js.map",
  "references": [],
  "map": "{\"version\":3,\"file\":\"knapsackGreedy.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/algorithms/greedy/knapsackGreedy.ts\"],\"names\":[],\"mappings\":\"AAAA,MAAM,UAAU,cAAc,CAAC,QAAgB,EAAE,OAAiB,EAAE,MAAgB;IAChF,MAAM,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;IACxB,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAEzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,IAAI,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE;QAC3C,IAAI,OAAO,CAAC,CAAC,CAAC,IAAI,QAAQ,GAAG,IAAI,EAAE;YAC/B,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;YACjB,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC;YACnB,OAAO,CAAC,GAAG,CAAC,aAAa,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,mBAAmB,CAAC,CAAC;SAC9D;aAAM;YACH,MAAM,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;YACzC,GAAG,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACrB,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC;YACnB,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,CAAC,GAAG,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,mBAAmB,CAAC,CAAC;SACrF;KACJ;IACD,OAAO,GAAG,CAAC;AACf,CAAC\"}"
}
