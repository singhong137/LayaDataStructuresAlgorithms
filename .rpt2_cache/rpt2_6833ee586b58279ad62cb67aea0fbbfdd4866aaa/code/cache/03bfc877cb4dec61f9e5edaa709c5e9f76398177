{
  "code": "import { Script } from \"laya/components/Script\";\r\nimport { MinHeap } from \"../data_structures/Heap\";\r\nimport heapSort from \"../algorithms/sorting/heap-sort\";\r\nexport default class HeapTest extends Script {\r\n    constructor() {\r\n        super();\r\n    }\r\n    onEnable() {\r\n        console.log('HeapTest');\r\n        const heap = new MinHeap();\r\n        heap.insert(2);\r\n        heap.insert(3);\r\n        heap.insert(4);\r\n        heap.insert(5);\r\n        heap.insert(1);\r\n        heap.insert(6);\r\n        heap.insert(9);\r\n        heap.insert(8);\r\n        heap.insert(7);\r\n        console.log(heap.size());\r\n        console.log(heap.isEmpty());\r\n        console.log(heap.findMinimum());\r\n        console.log(heap.getAsArray().toString());\r\n        console.log('heap sort--');\r\n        console.log(heap.extract());\r\n        console.log(heap.extract());\r\n        console.log(heap.extract());\r\n        console.log(heap.extract());\r\n        console.log('array [2, 3, 4, 5, 1]');\r\n        console.log('heapify-');\r\n        heap.heapify([2, 3, 4, 5, 1]);\r\n        console.log(heap.getAsArray().toString());\r\n        console.log('array [2, 1, 4, 5, 3]');\r\n        console.log('heapify-');\r\n        heap.heapify([2, 1, 4, 5, 3]);\r\n        console.log(heap.getAsArray().toString());\r\n        console.log('array [2, 1, 4, 5, 3, 7, 8, 6, 10, 19, 9]');\r\n        console.log('heapify-');\r\n        heap.heapify([2, 1, 4, 5, 3, 7, 8, 6, 10, 19, 9]);\r\n        console.log(heap.getAsArray().toString());\r\n        console.log('array [8, 7, 10, 6, 9, 1, 3, 5]');\r\n        console.log('heapify-');\r\n        heap.heapify([8, 7, 10, 6, 9, 1, 3, 5]);\r\n        console.log(heap.getAsArray().toString());\r\n        console.log('array [7, 6, 3, 5, 4, 1, 2]');\r\n        console.log('heapify-');\r\n        heap.heapify([7, 6, 3, 5, 4, 1, 2]);\r\n        console.log(heap.getAsArray().toString());\r\n        console.log(heap.getAsArray().toString());\r\n        console.log(heapSort([8, 7, 10, 6, 9]).toString());\r\n        console.log(heapSort([7, 1, 4, 5, 3, 2, 8, 6, 10, 19, 9]).toString());\r\n        console.log(heapSort([17, 11, 14, 15, 13, 12, 18, 16, 20, 29, 19]).toString());\r\n        console.log(heapSort([7, 6, 3, 5, 4, 1, 2]).toString());\r\n    }\r\n}\r\n//# sourceMappingURL=HeapTest.js.map",
  "references": [
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/components/Script.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/src/data_structures/Heap.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/src/util.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/src/algorithms/sorting/heap-sort.ts"
  ],
  "map": "{\"version\":3,\"file\":\"HeapTest.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/script/HeapTest.ts\"],\"names\":[],\"mappings\":\"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\"}"
}
