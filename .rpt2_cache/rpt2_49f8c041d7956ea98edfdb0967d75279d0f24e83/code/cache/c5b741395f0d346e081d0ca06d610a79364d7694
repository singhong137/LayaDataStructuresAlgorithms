{
  "code": "const INF = Number.MAX_SAFE_INTEGER;\r\nconst minKey = (length, key, visited) => {\r\n    let min = INF;\r\n    let minIndex = 0;\r\n    for (let v = 0; v < length; v++) {\r\n        if (visited[v] === false && key[v] < min) {\r\n            min = key[v];\r\n            minIndex = v;\r\n        }\r\n    }\r\n    return minIndex;\r\n};\r\nexport function prim(graph) {\r\n    const parent = [];\r\n    const key = [];\r\n    const visited = [];\r\n    const length = graph.length;\r\n    for (let i = 0; i < length; i++) {\r\n        key[i] = INF;\r\n        visited[i] = false;\r\n    }\r\n    key[0] = 0;\r\n    parent[0] = -1;\r\n    for (let i = 0; i < length - 1; i++) {\r\n        const u = minKey(length, key, visited);\r\n        visited[u] = true;\r\n        for (let v = 0; v < length; v++) {\r\n            if (graph[u][v] && visited[v] === false && graph[u][v] < key[v]) {\r\n                parent[v] = u;\r\n                key[v] = graph[u][v];\r\n            }\r\n        }\r\n    }\r\n    return parent;\r\n}\r\n",
  "references": []
}
