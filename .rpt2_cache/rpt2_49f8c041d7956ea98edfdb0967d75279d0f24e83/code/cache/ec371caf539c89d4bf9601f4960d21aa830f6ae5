{
  "code": "import { ValuePair } from \"./data_models/Value-pair\";\r\nimport { default2String } from \"../util\";\r\nexport default class Dictionary {\r\n    constructor(toStrFn = default2String) {\r\n        this.toStrFn = toStrFn;\r\n        this.table = {};\r\n    }\r\n    set(key, value) {\r\n        if (key != null && value != null) {\r\n            const tableKey = this.toStrFn(key);\r\n            this.table[tableKey] = new ValuePair(key, value);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    get(key) {\r\n        const valuePair = this.table[this.toStrFn(key)];\r\n        return valuePair == null ? undefined : valuePair.value;\r\n    }\r\n    hasKey(key) {\r\n        return this.table[this.toStrFn(key)] != null;\r\n    }\r\n    remove(key) {\r\n        if (this.hasKey(key)) {\r\n            delete this.table[this.toStrFn(key)];\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    values() {\r\n        return this.keyValues().map((valuePair) => valuePair.value);\r\n    }\r\n    keys() {\r\n        return this.keyValues().map((valuePair) => valuePair.key);\r\n    }\r\n    keyValues() {\r\n        const valuePairs = [];\r\n        for (const k in this.table)\r\n            if (this.hasKey(k))\r\n                valuePairs.push(this.table[k]);\r\n        return valuePairs;\r\n    }\r\n    forEach(callbackFn) {\r\n        const valuePairs = this.keyValues();\r\n        for (let i = 0; i < valuePairs.length; i++) {\r\n            const result = callbackFn(valuePairs[i].key, valuePairs[i].value);\r\n            if (result === false)\r\n                break;\r\n        }\r\n    }\r\n    isEmpty() {\r\n        return this.size() === 0;\r\n    }\r\n    size() {\r\n        return Object.keys(this.table).length;\r\n    }\r\n    clear() {\r\n        this.table = {};\r\n    }\r\n    toString() {\r\n        if (this.isEmpty())\r\n            return '';\r\n        const valuePairs = this.keyValues();\r\n        let objString = `${valuePairs[0].toString()}`;\r\n        for (let i = 1; i < valuePairs.length; i++)\r\n            objString = `${objString},${valuePairs[i].toString()}`;\r\n        return objString;\r\n    }\r\n}\r\n",
  "references": [
    "D:/widgets/LayaDataStructuresAlgorithms/src/data_structures/data_models/Value-pair.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/src/util.ts"
  ]
}
