{
  "code": "import { Script } from \"laya/components/Script\";\r\nimport { Queue, Deque } from \"../data_structures/Queue\";\r\nexport default class QueueTest extends Script {\r\n    constructor() {\r\n        super();\r\n    }\r\n    onEnable() {\r\n        const queue = new Queue();\r\n        console.log(queue.isEmpyt());\r\n        queue.enqueue('John');\r\n        queue.enqueue('Jack');\r\n        console.log(queue.toString());\r\n        queue.enqueue('Camila');\r\n        console.log(queue.toString());\r\n        console.log(queue.size());\r\n        console.log(queue.isEmpyt());\r\n        queue.dequeue();\r\n        queue.dequeue();\r\n        console.log(queue.toString());\r\n        console.log('--------');\r\n        const deque = new Deque();\r\n        console.log(deque.isEmpyt());\r\n        deque.addBack('John');\r\n        deque.addBack('Jack');\r\n        console.log(deque.toString());\r\n        deque.addBack('Camila');\r\n        console.log(deque.toString());\r\n        console.log(deque.size());\r\n        console.log(deque.isEmpyt());\r\n        deque.removeFront();\r\n        console.log(deque.toString());\r\n        deque.removeBack();\r\n        console.log(deque.toString());\r\n        deque.addFront('John');\r\n        console.log(deque.toString());\r\n        let dd = new Deque();\r\n        dd.addFront('a0');\r\n        dd.addFront('a1');\r\n        dd.addFront('a2');\r\n        console.log(dd.toString());\r\n        const hotPotato = (elementsList, num) => {\r\n            const queue = new Queue();\r\n            const elimintatedList = [];\r\n            for (let i = 0; i < elementsList.length; i++)\r\n                queue.enqueue(elementsList[i]);\r\n            while (queue.size() > 1) {\r\n                for (let i = 0; i < num; i++)\r\n                    queue.enqueue(queue.dequeue());\r\n                elimintatedList.push(queue.dequeue());\r\n            }\r\n            return {\r\n                eliminated: elimintatedList,\r\n                winner: queue.dequeue()\r\n            };\r\n        };\r\n        const names = ['John', 'Jack', 'Camila', 'Ingrid', 'Carl'];\r\n        const result = hotPotato(names, 7);\r\n        result.eliminated.forEach(name => console.log(`${name} was eliminated `));\r\n        console.log(`Winner is ${result.winner}`);\r\n        const palindromeChecker = (aString) => {\r\n            if (aString === undefined || aString === null || (aString !== null && aString.length == 0))\r\n                return false;\r\n            const deque = new Deque();\r\n            const lowerString = aString.toLocaleLowerCase().split(' ').join('');\r\n            let isEqual = true;\r\n            let [firstChar, lastChar] = ['', ''];\r\n            for (let i = 0; i < lowerString.length; i++)\r\n                deque.addBack(lowerString.charAt(i));\r\n            while (deque.size() > 1 && isEqual) {\r\n                firstChar = deque.removeFront();\r\n                lastChar = deque.removeBack();\r\n                if (firstChar !== lastChar)\r\n                    isEqual = false;\r\n            }\r\n            return isEqual;\r\n        };\r\n        console.log('a', palindromeChecker('a'));\r\n        console.log('aa', palindromeChecker('aa'));\r\n        console.log('kayak', palindromeChecker('kayak'));\r\n        console.log('level', palindromeChecker('level'));\r\n        console.log('was it a car or a cat i saw', palindromeChecker('was it a car or a cat i saw'));\r\n        console.log('step on no pets', palindromeChecker('step on no pets'));\r\n    }\r\n}\r\n",
  "references": [
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/components/Script.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/src/data_structures/Queue.ts"
  ]
}
