{
  "code": "export function matrixChainOrder(p) {\r\n    const n = p.length;\r\n    const m = [];\r\n    const s = [];\r\n    for (let i = 1; i <= n; i++) {\r\n        m[i] = [];\r\n        m[i][i] = 0;\r\n    }\r\n    for (let i = 0; i <= n; i++) {\r\n        s[i] = [];\r\n        for (let j = 0; j <= n; j++)\r\n            s[i][j] = 0;\r\n    }\r\n    for (let l = 2; l < n; l++) {\r\n        for (let i = 1; i < n - l + 1; i++) {\r\n            const j = i + l - 1;\r\n            m[i][j] = Number.MAX_SAFE_INTEGER;\r\n            for (let k = i; k <= j - 1; k++) {\r\n                const q = m[i][k] + m[k + 1][j] + p[i - 1] * p[k] * p[j];\r\n                if (q < m[i][j]) {\r\n                    m[i][j] = q;\r\n                    s[i][j] = k;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let out = { s: '' };\r\n    printOptimalParenthesis(s, 1, n - 1, out);\r\n    console.log('m', m);\r\n    console.log('s', s);\r\n    console.log('MatrixChainOrder: ', out.s);\r\n    return m[1][n - 1];\r\n}\r\nfunction printOptimalParenthesis(s, i, j, out) {\r\n    if (i === j) {\r\n        out.s += '[' + i + ']';\r\n    }\r\n    else {\r\n        out.s += '(';\r\n        printOptimalParenthesis(s, i, s[i][j], out);\r\n        printOptimalParenthesis(s, s[i][j] + 1, j, out);\r\n        out.s += ')';\r\n    }\r\n}\r\n//# sourceMappingURL=matrix-chain-multiplication.js.map",
  "references": [],
  "map": "{\"version\":3,\"file\":\"matrix-chain-multiplication.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/algorithms/dynamic-programing/matrix-chain-multiplication.ts\"],\"names\":[],\"mappings\":\"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\"}"
}
