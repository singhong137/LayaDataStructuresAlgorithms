{
  "code": "import { ColliderBase } from \"./ColliderBase\";\r\nimport { Physics } from \"./Physics\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\";\r\nexport class CircleCollider extends ColliderBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._x = 0;\r\n        this._y = 0;\r\n        this._radius = 50;\r\n    }\r\n    getDef() {\r\n        if (!this._shape) {\r\n            this._shape = new window.box2d.b2CircleShape();\r\n            this._setShape(false);\r\n        }\r\n        this.label = (this.label || \"CircleCollider\");\r\n        return super.getDef();\r\n    }\r\n    _setShape(re = true) {\r\n        var scale = this.owner[\"scaleX\"] || 1;\r\n        this._shape.m_radius = this._radius / Physics.PIXEL_RATIO * scale;\r\n        this._shape.m_p.Set((this._radius + this._x) / Physics.PIXEL_RATIO * scale, (this._radius + this._y) / Physics.PIXEL_RATIO * scale);\r\n        if (re)\r\n            this.refresh();\r\n    }\r\n    get x() {\r\n        return this._x;\r\n    }\r\n    set x(value) {\r\n        this._x = value;\r\n        if (this._shape)\r\n            this._setShape();\r\n    }\r\n    get y() {\r\n        return this._y;\r\n    }\r\n    set y(value) {\r\n        this._y = value;\r\n        if (this._shape)\r\n            this._setShape();\r\n    }\r\n    get radius() {\r\n        return this._radius;\r\n    }\r\n    set radius(value) {\r\n        if (value <= 0)\r\n            throw \"CircleCollider radius cannot be less than 0\";\r\n        this._radius = value;\r\n        if (this._shape)\r\n            this._setShape();\r\n    }\r\n    resetShape(re = true) {\r\n        this._setShape();\r\n    }\r\n}\r\nClassUtils.regClass(\"laya.physics.CircleCollider\", CircleCollider);\r\nClassUtils.regClass(\"Laya.CircleCollider\", CircleCollider);\r\n//# sourceMappingURL=CircleCollider.js.map",
  "references": [
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/physics/ColliderBase.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/physics/Physics.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/utils/ClassUtils.ts"
  ],
  "map": "{\"version\":3,\"file\":\"CircleCollider.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../libs/laya/physics/CircleCollider.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAC9C,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AACpC,OAAO,EAAE,UAAU,EAAE,MAAM,qBAAqB,CAAC;AAIjD,MAAM,OAAO,cAAe,SAAQ,YAAY;IAAhD;;QAIY,OAAE,GAAW,CAAC,CAAC;QAEf,OAAE,GAAW,CAAC,CAAC;QAEf,YAAO,GAAW,EAAE,CAAC;IAyDjC,CAAC;IArDa,MAAM;QACZ,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACd,IAAI,CAAC,MAAM,GAAG,IAAU,MAAO,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;YACtD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;SACzB;QACD,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,IAAI,gBAAgB,CAAC,CAAC;QAC9C,OAAO,KAAK,CAAC,MAAM,EAAE,CAAC;IAC1B,CAAC;IAEO,SAAS,CAAC,KAAc,IAAI;QAChC,IAAI,KAAK,GAAW,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC9C,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,WAAW,GAAG,KAAK,CAAC;QAClE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,WAAW,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,WAAW,GAAG,KAAK,CAAC,CAAC;QACpI,IAAI,EAAE;YAAE,IAAI,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IAGD,IAAI,CAAC;QACD,OAAO,IAAI,CAAC,EAAE,CAAC;IACnB,CAAC;IAED,IAAI,CAAC,CAAC,KAAa;QACf,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;QAChB,IAAI,IAAI,CAAC,MAAM;YAAE,IAAI,CAAC,SAAS,EAAE,CAAC;IACtC,CAAC;IAGD,IAAI,CAAC;QACD,OAAO,IAAI,CAAC,EAAE,CAAC;IACnB,CAAC;IAED,IAAI,CAAC,CAAC,KAAa;QACf,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;QAChB,IAAI,IAAI,CAAC,MAAM;YAAE,IAAI,CAAC,SAAS,EAAE,CAAC;IACtC,CAAC;IAGD,IAAI,MAAM;QACN,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAED,IAAI,MAAM,CAAC,KAAa;QACpB,IAAI,KAAK,IAAI,CAAC;YAAE,MAAM,6CAA6C,CAAC;QACpE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,IAAI,CAAC,MAAM;YAAE,IAAI,CAAC,SAAS,EAAE,CAAC;IACtC,CAAC;IAKD,UAAU,CAAC,KAAc,IAAI;QACzB,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;CACJ;AAED,UAAU,CAAC,QAAQ,CAAC,6BAA6B,EAAE,cAAc,CAAC,CAAC;AACnE,UAAU,CAAC,QAAQ,CAAC,qBAAqB,EAAE,cAAc,CAAC,CAAC\"}",
  "dts": {
    "name": "D:/widgets/LayaDataStructuresAlgorithms/.rpt2_cache/placeholder/laya/physics/CircleCollider.d.ts",
    "writeByteOrderMark": false,
    "text": "import { ColliderBase } from \"./ColliderBase\";\r\nexport declare class CircleCollider extends ColliderBase {\r\n    private static _temp;\r\n    private _x;\r\n    private _y;\r\n    private _radius;\r\n    protected getDef(): any;\r\n    private _setShape;\r\n    x: number;\r\n    y: number;\r\n    radius: number;\r\n    resetShape(re?: boolean): void;\r\n}\r\n"
  }
}
