{
  "code": "import { AtlasGrid } from \"./AtlasGrid\";\r\nimport { TextTexture } from \"./TextTexture\";\r\nimport { ILaya } from \"../../../ILaya\";\r\nexport class TextAtlas {\r\n    constructor() {\r\n        this.texWidth = 1024;\r\n        this.texHeight = 1024;\r\n        this.texture = null;\r\n        this.charMaps = {};\r\n        this.texHeight = this.texWidth = ILaya.TextRender.atlasWidth;\r\n        this.texture = TextTexture.getTextTexture(this.texWidth, this.texHeight);\r\n        if (this.texWidth / TextAtlas.atlasGridW > 256) {\r\n            TextAtlas.atlasGridW = Math.ceil(this.texWidth / 256);\r\n        }\r\n        this.atlasgrid = new AtlasGrid(this.texWidth / TextAtlas.atlasGridW, this.texHeight / TextAtlas.atlasGridW, this.texture.id);\r\n    }\r\n    setProtecteDist(d) {\r\n    }\r\n    getAEmpty(w, h, pt) {\r\n        var find = this.atlasgrid.addRect(1, Math.ceil(w / TextAtlas.atlasGridW), Math.ceil(h / TextAtlas.atlasGridW), pt);\r\n        if (find) {\r\n            pt.x *= TextAtlas.atlasGridW;\r\n            pt.y *= TextAtlas.atlasGridW;\r\n        }\r\n        return find;\r\n    }\r\n    get usedRate() {\r\n        return this.atlasgrid._used;\r\n    }\r\n    destroy() {\r\n        for (var k in this.charMaps) {\r\n            var ri = this.charMaps[k];\r\n            ri.deleted = true;\r\n        }\r\n        this.texture.discard();\r\n    }\r\n    printDebugInfo() {\r\n    }\r\n}\r\nTextAtlas.atlasGridW = 16;\r\n//# sourceMappingURL=TextAtlas.js.map",
  "references": [
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/text/AtlasGrid.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/text/TextTexture.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/maths/Point.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/text/CharRenderInfo.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/ILaya.ts"
  ],
  "map": "{\"version\":3,\"file\":\"TextAtlas.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../libs/laya/webgl/text/TextAtlas.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AACxC,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAG5C,OAAO,EAAE,KAAK,EAAE,MAAM,gBAAgB,CAAC;AAIvC,MAAM,OAAO,SAAS;IASlB;QARA,aAAQ,GAAW,IAAI,CAAC;QACxB,cAAS,GAAW,IAAI,CAAC;QAGzB,YAAO,GAAqB,IAAI,CAAC;QACjC,aAAQ,GAAQ,EAAE,CAAC;QAIf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC;QAC7D,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QACzE,IAAI,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,UAAU,GAAG,GAAG,EAAE;YAC5C,SAAS,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,CAAC;SACzD;QACD,IAAI,CAAC,SAAS,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IACjI,CAAC;IAED,eAAe,CAAC,CAAS;IAEzB,CAAC;IASD,SAAS,CAAC,CAAS,EAAE,CAAS,EAAE,EAAS;QACrC,IAAI,IAAI,GAAY,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,UAAU,CAAC,EAAE,EAAE,CAAC,CAAC;QAC5H,IAAI,IAAI,EAAE;YACN,EAAE,CAAC,CAAC,IAAI,SAAS,CAAC,UAAU,CAAC;YAC7B,EAAE,CAAC,CAAC,IAAI,SAAS,CAAC,UAAU,CAAC;SAChC;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAKD,IAAI,QAAQ;QACR,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;IAChC,CAAC;IAQD,OAAO;QACH,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE;YACzB,IAAI,EAAE,GAAmB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC1C,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC;SACrB;QACD,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IAED,cAAc;IAEd,CAAC;;AAtDM,oBAAU,GAAW,EAAE,CAAC\"}",
  "dts": {
    "name": "D:/widgets/LayaDataStructuresAlgorithms/.rpt2_cache/placeholder/laya/webgl/text/TextAtlas.d.ts",
    "writeByteOrderMark": false,
    "text": "import { TextTexture } from \"./TextTexture\";\r\nimport { Point } from \"../../maths/Point\";\r\nexport declare class TextAtlas {\r\n    texWidth: number;\r\n    texHeight: number;\r\n    private atlasgrid;\r\n    texture: TextTexture | null;\r\n    charMaps: any;\r\n    static atlasGridW: number;\r\n    constructor();\r\n    setProtecteDist(d: number): void;\r\n    getAEmpty(w: number, h: number, pt: Point): boolean;\r\n    readonly usedRate: number;\r\n    destroy(): void;\r\n    printDebugInfo(): void;\r\n}\r\n"
  }
}
