{
  "code": "import { Point } from \"../maths/Point\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { ILaya } from \"../../ILaya\";\r\nexport class Utils {\r\n    static toRadian(angle) {\r\n        return angle * Utils._pi2;\r\n    }\r\n    static toAngle(radian) {\r\n        return radian * Utils._pi;\r\n    }\r\n    static toHexColor(color) {\r\n        if (color < 0 || isNaN(color))\r\n            return null;\r\n        var str = color.toString(16);\r\n        while (str.length < 6)\r\n            str = \"0\" + str;\r\n        return \"#\" + str;\r\n    }\r\n    static getGID() {\r\n        return Utils._gid++;\r\n    }\r\n    static concatArray(source, array) {\r\n        if (!array)\r\n            return source;\r\n        if (!source)\r\n            return array;\r\n        var i, len = array.length;\r\n        for (i = 0; i < len; i++) {\r\n            source.push(array[i]);\r\n        }\r\n        return source;\r\n    }\r\n    static clearArray(array) {\r\n        if (!array)\r\n            return array;\r\n        array.length = 0;\r\n        return array;\r\n    }\r\n    static copyArray(source, array) {\r\n        source || (source = []);\r\n        if (!array)\r\n            return source;\r\n        source.length = array.length;\r\n        var i, len = array.length;\r\n        for (i = 0; i < len; i++) {\r\n            source[i] = array[i];\r\n        }\r\n        return source;\r\n    }\r\n    static getGlobalRecByPoints(sprite, x0, y0, x1, y1) {\r\n        var newLTPoint;\r\n        newLTPoint = Point.create().setTo(x0, y0);\r\n        newLTPoint = sprite.localToGlobal(newLTPoint);\r\n        var newRBPoint;\r\n        newRBPoint = Point.create().setTo(x1, y1);\r\n        newRBPoint = sprite.localToGlobal(newRBPoint);\r\n        var rst = Rectangle._getWrapRec([newLTPoint.x, newLTPoint.y, newRBPoint.x, newRBPoint.y]);\r\n        newLTPoint.recover();\r\n        newRBPoint.recover();\r\n        return rst;\r\n    }\r\n    static getGlobalPosAndScale(sprite) {\r\n        return Utils.getGlobalRecByPoints(sprite, 0, 0, 1, 1);\r\n    }\r\n    static bind(fun, scope) {\r\n        var rst = fun;\r\n        rst = fun.bind(scope);\r\n        ;\r\n        return rst;\r\n    }\r\n    static updateOrder(array) {\r\n        if (!array || array.length < 2)\r\n            return false;\r\n        var i = 1, j, len = array.length, key, c;\r\n        while (i < len) {\r\n            j = i;\r\n            c = array[j];\r\n            key = array[j]._zOrder;\r\n            while (--j > -1) {\r\n                if (array[j]._zOrder > key)\r\n                    array[j + 1] = array[j];\r\n                else\r\n                    break;\r\n            }\r\n            array[j + 1] = c;\r\n            i++;\r\n        }\r\n        return true;\r\n    }\r\n    static transPointList(points, x, y) {\r\n        var i, len = points.length;\r\n        for (i = 0; i < len; i += 2) {\r\n            points[i] += x;\r\n            points[i + 1] += y;\r\n        }\r\n    }\r\n    static parseInt(str, radix = 0) {\r\n        var result = parseInt(str, radix);\r\n        if (isNaN(result))\r\n            return 0;\r\n        return result;\r\n    }\r\n    static getFileExtension(path) {\r\n        Utils._extReg.lastIndex = path.lastIndexOf(\".\");\r\n        var result = Utils._extReg.exec(path);\r\n        if (result && result.length > 1) {\r\n            return result[1].toLowerCase();\r\n        }\r\n        return null;\r\n    }\r\n    static getTransformRelativeToWindow(coordinateSpace, x, y) {\r\n        var stage = Utils.gStage;\r\n        var globalTransform = Utils.getGlobalPosAndScale(coordinateSpace);\r\n        var canvasMatrix = stage._canvasTransform.clone();\r\n        var canvasLeft = canvasMatrix.tx;\r\n        var canvasTop = canvasMatrix.ty;\r\n        canvasMatrix.rotate(-Math.PI / 180 * stage.canvasDegree);\r\n        canvasMatrix.scale(stage.clientScaleX, stage.clientScaleY);\r\n        var perpendicular = (stage.canvasDegree % 180 != 0);\r\n        var tx, ty;\r\n        if (perpendicular) {\r\n            tx = y + globalTransform.y;\r\n            ty = x + globalTransform.x;\r\n            tx *= canvasMatrix.d;\r\n            ty *= canvasMatrix.a;\r\n            if (stage.canvasDegree == 90) {\r\n                tx = canvasLeft - tx;\r\n                ty += canvasTop;\r\n            }\r\n            else {\r\n                tx += canvasLeft;\r\n                ty = canvasTop - ty;\r\n            }\r\n        }\r\n        else {\r\n            tx = x + globalTransform.x;\r\n            ty = y + globalTransform.y;\r\n            tx *= canvasMatrix.a;\r\n            ty *= canvasMatrix.d;\r\n            tx += canvasLeft;\r\n            ty += canvasTop;\r\n        }\r\n        ty += stage['_safariOffsetY'];\r\n        var domScaleX, domScaleY;\r\n        if (perpendicular) {\r\n            domScaleX = canvasMatrix.d * globalTransform.height;\r\n            domScaleY = canvasMatrix.a * globalTransform.width;\r\n        }\r\n        else {\r\n            domScaleX = canvasMatrix.a * globalTransform.width;\r\n            domScaleY = canvasMatrix.d * globalTransform.height;\r\n        }\r\n        return { x: tx, y: ty, scaleX: domScaleX, scaleY: domScaleY };\r\n    }\r\n    static fitDOMElementInArea(dom, coordinateSpace, x, y, width, height) {\r\n        if (!dom._fitLayaAirInitialized) {\r\n            dom._fitLayaAirInitialized = true;\r\n            dom.style.transformOrigin = dom.style.webKittransformOrigin = \"left top\";\r\n            dom.style.position = \"absolute\";\r\n        }\r\n        var transform = Utils.getTransformRelativeToWindow(coordinateSpace, x, y);\r\n        dom.style.transform = dom.style.webkitTransform = \"scale(\" + transform.scaleX + \",\" + transform.scaleY + \") rotate(\" + (Utils.gStage.canvasDegree) + \"deg)\";\r\n        dom.style.width = width + 'px';\r\n        dom.style.height = height + 'px';\r\n        dom.style.left = transform.x + 'px';\r\n        dom.style.top = transform.y + 'px';\r\n    }\r\n    static isOkTextureList(textureList) {\r\n        if (!textureList)\r\n            return false;\r\n        var i, len = textureList.length;\r\n        var tTexture;\r\n        for (i = 0; i < len; i++) {\r\n            tTexture = textureList[i];\r\n            if (!tTexture || !tTexture._getSource())\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n    static isOKCmdList(cmds) {\r\n        if (!cmds)\r\n            return false;\r\n        var i, len = cmds.length;\r\n        var cmd;\r\n        var tex;\r\n        for (i = 0; i < len; i++) {\r\n            cmd = cmds[i];\r\n        }\r\n        return true;\r\n    }\r\n    static getQueryString(name) {\r\n        if (ILaya.Browser.onMiniGame)\r\n            return null;\r\n        if (!window.location || !window.location.search)\r\n            return null;\r\n        var reg = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\");\r\n        var r = window.location.search.substr(1).match(reg);\r\n        if (r != null)\r\n            return unescape(r[2]);\r\n        return null;\r\n    }\r\n}\r\nUtils.gStage = null;\r\nUtils._gid = 1;\r\nUtils._pi = 180 / Math.PI;\r\nUtils._pi2 = Math.PI / 180;\r\nUtils._extReg = /\\.(\\w+)\\??/g;\r\nUtils.parseXMLFromString = function (value) {\r\n    var rst;\r\n    value = value.replace(/>\\s+</g, '><');\r\n    rst = (new DOMParser()).parseFromString(value, 'text/xml');\r\n    if (rst.firstChild.textContent.indexOf(\"This page contains the following errors\") > -1) {\r\n        throw new Error(rst.firstChild.firstChild.textContent);\r\n    }\r\n    return rst;\r\n};\r\n//# sourceMappingURL=Utils.js.map",
  "references": [
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/display/Sprite.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/display/Stage.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/maths/Matrix.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/maths/Point.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/maths/Rectangle.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/resource/Texture.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/ILaya.ts"
  ],
  "map": "{\"version\":3,\"file\":\"Utils.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../libs/laya/utils/Utils.ts\"],\"names\":[],\"mappings\":\"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\"}",
  "dts": {
    "name": "D:/widgets/LayaDataStructuresAlgorithms/.rpt2_cache/placeholder/laya/utils/Utils.d.ts",
    "writeByteOrderMark": false,
    "text": "import { Sprite } from \"../display/Sprite\";\r\nimport { Stage } from \"../display/Stage\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nexport declare class Utils {\r\n    static gStage: Stage;\r\n    private static _gid;\r\n    private static _pi;\r\n    private static _pi2;\r\n    protected static _extReg: RegExp;\r\n    static toRadian(angle: number): number;\r\n    static toAngle(radian: number): number;\r\n    static toHexColor(color: number): string;\r\n    static getGID(): number;\r\n    static parseXMLFromString: Function;\r\n    static concatArray(source: any[], array: any[]): any[];\r\n    static clearArray(array: any[]): any[];\r\n    static copyArray(source: any[], array: any[]): any[];\r\n    static getGlobalRecByPoints(sprite: Sprite, x0: number, y0: number, x1: number, y1: number): Rectangle;\r\n    static getGlobalPosAndScale(sprite: Sprite): Rectangle;\r\n    static bind(fun: Function, scope: any): Function;\r\n    static updateOrder(array: any[]): boolean;\r\n    static transPointList(points: any[], x: number, y: number): void;\r\n    static parseInt(str: string, radix?: number): number;\r\n    static getFileExtension(path: string): string;\r\n    static getTransformRelativeToWindow(coordinateSpace: Sprite, x: number, y: number): any;\r\n    static fitDOMElementInArea(dom: any, coordinateSpace: Sprite, x: number, y: number, width: number, height: number): void;\r\n    static isOkTextureList(textureList: any[]): boolean;\r\n    static isOKCmdList(cmds: any[]): boolean;\r\n    static getQueryString(name: string): string;\r\n}\r\n"
  }
}
