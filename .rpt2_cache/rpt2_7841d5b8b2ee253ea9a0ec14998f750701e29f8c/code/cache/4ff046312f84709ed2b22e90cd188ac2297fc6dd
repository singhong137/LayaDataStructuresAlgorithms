{
  "code": "import { SpriteStyle } from \"./SpriteStyle\";\r\nimport { Pool } from \"../../utils/Pool\";\r\nexport class TextStyle extends SpriteStyle {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.italic = false;\r\n    }\r\n    reset() {\r\n        super.reset();\r\n        this.italic = false;\r\n        this.align = \"left\";\r\n        this.wordWrap = false;\r\n        this.leading = 0;\r\n        this.padding = [0, 0, 0, 0];\r\n        this.bgColor = null;\r\n        this.borderColor = null;\r\n        this.asPassword = false;\r\n        this.stroke = 0;\r\n        this.strokeColor = \"#000000\";\r\n        this.bold = false;\r\n        this.underline = false;\r\n        this.underlineColor = null;\r\n        this.currBitmapFont = null;\r\n        return this;\r\n    }\r\n    recover() {\r\n        if (this === TextStyle.EMPTY)\r\n            return;\r\n        Pool.recover(\"TextStyle\", this.reset());\r\n    }\r\n    static create() {\r\n        return Pool.getItemByClass(\"TextStyle\", TextStyle);\r\n    }\r\n    render(sprite, context, x, y) {\r\n        (this.bgColor || this.borderColor) && context.drawRect(x, y, sprite.width, sprite.height, this.bgColor, this.borderColor, 1);\r\n    }\r\n}\r\nTextStyle.EMPTY = new TextStyle();\r\n//# sourceMappingURL=TextStyle.js.map",
  "references": [
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/display/css/SpriteStyle.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/display/BitmapFont.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/display/Sprite.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/resource/Context.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/utils/Pool.ts"
  ],
  "map": "{\"version\":3,\"file\":\"TextStyle.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../libs/laya/display/css/TextStyle.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAI5C,OAAO,EAAE,IAAI,EAAE,MAAM,kBAAkB,CAAA;AAKvC,MAAM,OAAO,SAAU,SAAQ,WAAW;IAA1C;;QASI,WAAM,GAAY,KAAK,CAAC;IA8F5B,CAAC;IAtCG,KAAK;QACD,KAAK,CAAC,KAAK,EAAE,CAAC;QACd,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;QAC7B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,OAAO,IAAI,CAAC;IAChB,CAAC;IAID,OAAO;QACH,IAAI,IAAI,KAAK,SAAS,CAAC,KAAK;YACxB,OAAO;QACX,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;IAC5C,CAAC;IAKD,MAAM,CAAC,MAAM;QACT,OAAO,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;IACvD,CAAC;IAGD,MAAM,CAAC,MAAc,EAAE,OAAgB,EAAE,CAAS,EAAE,CAAS;QACzD,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;IACjI,CAAC;;AAlGM,eAAK,GAAc,IAAI,SAAS,EAAE,CAAC\"}",
  "dts": {
    "name": "D:/widgets/LayaDataStructuresAlgorithms/.rpt2_cache/placeholder/laya/display/css/TextStyle.d.ts",
    "writeByteOrderMark": false,
    "text": "import { SpriteStyle } from \"./SpriteStyle\";\r\nimport { BitmapFont } from \"../BitmapFont\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { Context } from \"../../resource/Context\";\r\nexport declare class TextStyle extends SpriteStyle {\r\n    static EMPTY: TextStyle;\r\n    italic: boolean;\r\n    align: string;\r\n    wordWrap: boolean;\r\n    leading: number;\r\n    padding: any[];\r\n    bgColor: string | null;\r\n    borderColor: string | null;\r\n    asPassword: boolean;\r\n    stroke: number;\r\n    strokeColor: string;\r\n    bold: boolean;\r\n    underline: boolean;\r\n    underlineColor: string | null;\r\n    currBitmapFont: BitmapFont | null;\r\n    reset(): SpriteStyle;\r\n    recover(): void;\r\n    static create(): TextStyle;\r\n    render(sprite: Sprite, context: Context, x: number, y: number): void;\r\n}\r\n"
  }
}
