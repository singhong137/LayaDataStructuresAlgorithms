{
  "code": "import { AlphaCmd } from \"./cmd/AlphaCmd\";\r\nimport { DrawCircleCmd } from \"./cmd/DrawCircleCmd\";\r\nimport { DrawCurvesCmd } from \"./cmd/DrawCurvesCmd\";\r\nimport { DrawImageCmd } from \"./cmd/DrawImageCmd\";\r\nimport { DrawLineCmd } from \"./cmd/DrawLineCmd\";\r\nimport { DrawLinesCmd } from \"./cmd/DrawLinesCmd\";\r\nimport { DrawPathCmd } from \"./cmd/DrawPathCmd\";\r\nimport { DrawPieCmd } from \"./cmd/DrawPieCmd\";\r\nimport { DrawPolyCmd } from \"./cmd/DrawPolyCmd\";\r\nimport { DrawRectCmd } from \"./cmd/DrawRectCmd\";\r\nimport { DrawTextureCmd } from \"./cmd/DrawTextureCmd\";\r\nimport { FillTextureCmd } from \"./cmd/FillTextureCmd\";\r\nimport { RestoreCmd } from \"./cmd/RestoreCmd\";\r\nimport { RotateCmd } from \"./cmd/RotateCmd\";\r\nimport { ScaleCmd } from \"./cmd/ScaleCmd\";\r\nimport { TransformCmd } from \"./cmd/TransformCmd\";\r\nimport { TranslateCmd } from \"./cmd/TranslateCmd\";\r\nimport { Bezier } from \"../maths/Bezier\";\r\nimport { GrahamScan } from \"../maths/GrahamScan\";\r\nimport { Matrix } from \"../maths/Matrix\";\r\nimport { Point } from \"../maths/Point\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { Render } from \"../renders/Render\";\r\nimport { Pool } from \"../utils/Pool\";\r\nimport { Utils } from \"../utils/Utils\";\r\nimport { DrawTrianglesCmd } from \"./cmd/DrawTrianglesCmd\";\r\nimport { Draw9GridTexture } from \"./cmd/Draw9GridTexture\";\r\nexport class GraphicsBounds {\r\n    constructor() {\r\n        this._cacheBoundsType = false;\r\n    }\r\n    destroy() {\r\n        this._graphics = null;\r\n        this._cacheBoundsType = false;\r\n        if (this._temp)\r\n            this._temp.length = 0;\r\n        if (this._rstBoundPoints)\r\n            this._rstBoundPoints.length = 0;\r\n        if (this._bounds)\r\n            this._bounds.recover();\r\n        this._bounds = null;\r\n        Pool.recover(\"GraphicsBounds\", this);\r\n    }\r\n    static create() {\r\n        return Pool.getItemByClass(\"GraphicsBounds\", GraphicsBounds);\r\n    }\r\n    reset() {\r\n        this._temp && (this._temp.length = 0);\r\n    }\r\n    getBounds(realSize = false) {\r\n        if (!this._bounds || !this._temp || this._temp.length < 1 || realSize != this._cacheBoundsType) {\r\n            this._bounds = Rectangle._getWrapRec(this.getBoundPoints(realSize), this._bounds);\r\n        }\r\n        this._cacheBoundsType = realSize;\r\n        return this._bounds;\r\n    }\r\n    getBoundPoints(realSize = false) {\r\n        if (!this._temp || this._temp.length < 1 || realSize != this._cacheBoundsType)\r\n            this._temp = this._getCmdPoints(realSize);\r\n        this._cacheBoundsType = realSize;\r\n        return this._rstBoundPoints = Utils.copyArray(this._rstBoundPoints, this._temp);\r\n    }\r\n    _getCmdPoints(realSize = false) {\r\n        var context = Render._context;\r\n        var cmds = this._graphics.cmds;\r\n        var rst;\r\n        rst = this._temp || (this._temp = []);\r\n        rst.length = 0;\r\n        if (!cmds && this._graphics._one != null) {\r\n            GraphicsBounds._tempCmds.length = 0;\r\n            GraphicsBounds._tempCmds.push(this._graphics._one);\r\n            cmds = GraphicsBounds._tempCmds;\r\n        }\r\n        if (!cmds)\r\n            return rst;\r\n        var matrixs = GraphicsBounds._tempMatrixArrays;\r\n        matrixs.length = 0;\r\n        var tMatrix = GraphicsBounds._initMatrix;\r\n        tMatrix.identity();\r\n        var tempMatrix = GraphicsBounds._tempMatrix;\r\n        var cmd;\r\n        var tex;\r\n        for (var i = 0, n = cmds.length; i < n; i++) {\r\n            cmd = cmds[i];\r\n            switch (cmd.cmdID) {\r\n                case AlphaCmd.ID:\r\n                    matrixs.push(tMatrix);\r\n                    tMatrix = tMatrix.clone();\r\n                    break;\r\n                case RestoreCmd.ID:\r\n                    tMatrix = matrixs.pop();\r\n                    break;\r\n                case ScaleCmd.ID:\r\n                    tempMatrix.identity();\r\n                    tempMatrix.translate(-cmd.pivotX, -cmd.pivotY);\r\n                    tempMatrix.scale(cmd.scaleX, cmd.scaleY);\r\n                    tempMatrix.translate(cmd.pivotX, cmd.pivotY);\r\n                    this._switchMatrix(tMatrix, tempMatrix);\r\n                    break;\r\n                case RotateCmd.ID:\r\n                    tempMatrix.identity();\r\n                    tempMatrix.translate(-cmd.pivotX, -cmd.pivotY);\r\n                    tempMatrix.rotate(cmd.angle);\r\n                    tempMatrix.translate(cmd.pivotX, cmd.pivotY);\r\n                    this._switchMatrix(tMatrix, tempMatrix);\r\n                    break;\r\n                case TranslateCmd.ID:\r\n                    tempMatrix.identity();\r\n                    tempMatrix.translate(cmd.tx, cmd.ty);\r\n                    this._switchMatrix(tMatrix, tempMatrix);\r\n                    break;\r\n                case TransformCmd.ID:\r\n                    tempMatrix.identity();\r\n                    tempMatrix.translate(-cmd.pivotX, -cmd.pivotY);\r\n                    tempMatrix.concat(cmd.matrix);\r\n                    tempMatrix.translate(cmd.pivotX, cmd.pivotY);\r\n                    this._switchMatrix(tMatrix, tempMatrix);\r\n                    break;\r\n                case DrawImageCmd.ID:\r\n                case FillTextureCmd.ID:\r\n                    GraphicsBounds._addPointArrToRst(rst, Rectangle._getBoundPointS(cmd.x, cmd.y, cmd.width, cmd.height), tMatrix);\r\n                    break;\r\n                case DrawTextureCmd.ID:\r\n                    tMatrix.copyTo(tempMatrix);\r\n                    if (cmd.matrix)\r\n                        tempMatrix.concat(cmd.matrix);\r\n                    GraphicsBounds._addPointArrToRst(rst, Rectangle._getBoundPointS(cmd.x, cmd.y, cmd.width, cmd.height), tempMatrix);\r\n                    break;\r\n                case DrawImageCmd.ID:\r\n                    tex = cmd.texture;\r\n                    if (realSize) {\r\n                        if (cmd.width && cmd.height) {\r\n                            GraphicsBounds._addPointArrToRst(rst, Rectangle._getBoundPointS(cmd.x, cmd.y, cmd.width, cmd.height), tMatrix);\r\n                        }\r\n                        else {\r\n                            GraphicsBounds._addPointArrToRst(rst, Rectangle._getBoundPointS(cmd.x, cmd.y, tex.width, tex.height), tMatrix);\r\n                        }\r\n                    }\r\n                    else {\r\n                        var wRate = (cmd.width || tex.sourceWidth) / tex.width;\r\n                        var hRate = (cmd.height || tex.sourceHeight) / tex.height;\r\n                        var oWidth = wRate * tex.sourceWidth;\r\n                        var oHeight = hRate * tex.sourceHeight;\r\n                        var offX = tex.offsetX > 0 ? tex.offsetX : 0;\r\n                        var offY = tex.offsetY > 0 ? tex.offsetY : 0;\r\n                        offX *= wRate;\r\n                        offY *= hRate;\r\n                        GraphicsBounds._addPointArrToRst(rst, Rectangle._getBoundPointS(cmd.x - offX, cmd.y - offY, oWidth, oHeight), tMatrix);\r\n                    }\r\n                    break;\r\n                case FillTextureCmd.ID:\r\n                    if (cmd.width && cmd.height) {\r\n                        GraphicsBounds._addPointArrToRst(rst, Rectangle._getBoundPointS(cmd.x, cmd.y, cmd.width, cmd.height), tMatrix);\r\n                    }\r\n                    else {\r\n                        tex = cmd.texture;\r\n                        GraphicsBounds._addPointArrToRst(rst, Rectangle._getBoundPointS(cmd.x, cmd.y, tex.width, tex.height), tMatrix);\r\n                    }\r\n                    break;\r\n                case DrawTextureCmd.ID:\r\n                    var drawMatrix;\r\n                    if (cmd.matrix) {\r\n                        tMatrix.copyTo(tempMatrix);\r\n                        tempMatrix.concat(cmd.matrix);\r\n                        drawMatrix = tempMatrix;\r\n                    }\r\n                    else {\r\n                        drawMatrix = tMatrix;\r\n                    }\r\n                    if (realSize) {\r\n                        if (cmd.width && cmd.height) {\r\n                            GraphicsBounds._addPointArrToRst(rst, Rectangle._getBoundPointS(cmd.x, cmd.y, cmd.width, cmd.height), drawMatrix);\r\n                        }\r\n                        else {\r\n                            tex = cmd.texture;\r\n                            GraphicsBounds._addPointArrToRst(rst, Rectangle._getBoundPointS(cmd.x, cmd.y, tex.width, tex.height), drawMatrix);\r\n                        }\r\n                    }\r\n                    else {\r\n                        tex = cmd.texture;\r\n                        wRate = (cmd.width || tex.sourceWidth) / tex.width;\r\n                        hRate = (cmd.height || tex.sourceHeight) / tex.height;\r\n                        oWidth = wRate * tex.sourceWidth;\r\n                        oHeight = hRate * tex.sourceHeight;\r\n                        offX = tex.offsetX > 0 ? tex.offsetX : 0;\r\n                        offY = tex.offsetY > 0 ? tex.offsetY : 0;\r\n                        offX *= wRate;\r\n                        offY *= hRate;\r\n                        GraphicsBounds._addPointArrToRst(rst, Rectangle._getBoundPointS(cmd.x - offX, cmd.y - offY, oWidth, oHeight), drawMatrix);\r\n                    }\r\n                    break;\r\n                case DrawRectCmd.ID:\r\n                    GraphicsBounds._addPointArrToRst(rst, Rectangle._getBoundPointS(cmd.x, cmd.y, cmd.width, cmd.height), tMatrix);\r\n                    break;\r\n                case DrawCircleCmd.ID:\r\n                    GraphicsBounds._addPointArrToRst(rst, Rectangle._getBoundPointS(cmd.x - cmd.radius, cmd.y - cmd.radius, cmd.radius + cmd.radius, cmd.radius + cmd.radius), tMatrix);\r\n                    break;\r\n                case DrawLineCmd.ID:\r\n                    GraphicsBounds._tempPoints.length = 0;\r\n                    var lineWidth;\r\n                    lineWidth = cmd.lineWidth * 0.5;\r\n                    if (cmd.fromX == cmd.toX) {\r\n                        GraphicsBounds._tempPoints.push(cmd.fromX + lineWidth, cmd.fromY, cmd.toX + lineWidth, cmd.toY, cmd.fromX - lineWidth, cmd.fromY, cmd.toX - lineWidth, cmd.toY);\r\n                    }\r\n                    else if (cmd.fromY == cmd.toY) {\r\n                        GraphicsBounds._tempPoints.push(cmd.fromX, cmd.fromY + lineWidth, cmd.toX, cmd.toY + lineWidth, cmd.fromX, cmd.fromY - lineWidth, cmd.toX, cmd.toY - lineWidth);\r\n                    }\r\n                    else {\r\n                        GraphicsBounds._tempPoints.push(cmd.fromX, cmd.fromY, cmd.toX, cmd.toY);\r\n                    }\r\n                    GraphicsBounds._addPointArrToRst(rst, GraphicsBounds._tempPoints, tMatrix);\r\n                    break;\r\n                case DrawCurvesCmd.ID:\r\n                    GraphicsBounds._addPointArrToRst(rst, Bezier.I.getBezierPoints(cmd.points), tMatrix, cmd.x, cmd.y);\r\n                    break;\r\n                case DrawLinesCmd.ID:\r\n                case DrawPolyCmd.ID:\r\n                    GraphicsBounds._addPointArrToRst(rst, cmd.points, tMatrix, cmd.x, cmd.y);\r\n                    break;\r\n                case DrawPathCmd.ID:\r\n                    GraphicsBounds._addPointArrToRst(rst, this._getPathPoints(cmd.paths), tMatrix, cmd.x, cmd.y);\r\n                    break;\r\n                case DrawPieCmd.ID:\r\n                    GraphicsBounds._addPointArrToRst(rst, this._getPiePoints(cmd.x, cmd.y, cmd.radius, cmd.startAngle, cmd.endAngle), tMatrix);\r\n                    break;\r\n                case DrawTrianglesCmd.ID:\r\n                    GraphicsBounds._addPointArrToRst(rst, this._getTriAngBBXPoints(cmd.vertices), tMatrix);\r\n                    break;\r\n                case Draw9GridTexture.ID:\r\n                    GraphicsBounds._addPointArrToRst(rst, this._getDraw9GridBBXPoints(cmd), tMatrix);\r\n                    break;\r\n            }\r\n        }\r\n        if (rst.length > 200) {\r\n            rst = Utils.copyArray(rst, Rectangle._getWrapRec(rst)._getBoundPoints());\r\n        }\r\n        else if (rst.length > 8)\r\n            rst = GrahamScan.scanPList(rst);\r\n        return rst;\r\n    }\r\n    _switchMatrix(tMatix, tempMatrix) {\r\n        tempMatrix.concat(tMatix);\r\n        tempMatrix.copyTo(tMatix);\r\n    }\r\n    static _addPointArrToRst(rst, points, matrix, dx = 0, dy = 0) {\r\n        var i, len;\r\n        len = points.length;\r\n        for (i = 0; i < len; i += 2) {\r\n            GraphicsBounds._addPointToRst(rst, points[i] + dx, points[i + 1] + dy, matrix);\r\n        }\r\n    }\r\n    static _addPointToRst(rst, x, y, matrix) {\r\n        var _tempPoint = Point.TEMP;\r\n        _tempPoint.setTo(x ? x : 0, y ? y : 0);\r\n        matrix.transformPoint(_tempPoint);\r\n        rst.push(_tempPoint.x, _tempPoint.y);\r\n    }\r\n    _getPiePoints(x, y, radius, startAngle, endAngle) {\r\n        var rst = GraphicsBounds._tempPoints;\r\n        GraphicsBounds._tempPoints.length = 0;\r\n        var k = Math.PI / 180;\r\n        var d1 = endAngle - startAngle;\r\n        if (d1 >= 360 || d1 <= -360) {\r\n            rst.push(x - radius, y - radius);\r\n            rst.push(x + radius, y - radius);\r\n            rst.push(x + radius, y + radius);\r\n            rst.push(x - radius, y + radius);\r\n            return rst;\r\n        }\r\n        rst.push(x, y);\r\n        var delta = d1 % 360;\r\n        if (delta < 0)\r\n            delta += 360;\r\n        var end1 = startAngle + delta;\r\n        var st = startAngle * k;\r\n        var ed = end1 * k;\r\n        rst.push(x + radius * Math.cos(st), y + radius * Math.sin(st));\r\n        rst.push(x + radius * Math.cos(ed), y + radius * Math.sin(ed));\r\n        var s1 = Math.ceil(startAngle / 90) * 90;\r\n        var s2 = Math.floor(end1 / 90) * 90;\r\n        for (var cs = s1; cs <= s2; cs += 90) {\r\n            var csr = cs * k;\r\n            rst.push(x + radius * Math.cos(csr), y + radius * Math.sin(csr));\r\n        }\r\n        return rst;\r\n    }\r\n    _getTriAngBBXPoints(vert) {\r\n        var vnum = vert.length;\r\n        if (vnum < 2)\r\n            return [];\r\n        var minx = vert[0];\r\n        var miny = vert[1];\r\n        var maxx = minx;\r\n        var maxy = miny;\r\n        for (var i = 2; i < vnum;) {\r\n            var cx = vert[i++];\r\n            var cy = vert[i++];\r\n            if (minx > cx)\r\n                minx = cx;\r\n            if (miny > cy)\r\n                miny = cy;\r\n            if (maxx < cx)\r\n                maxx = cx;\r\n            if (maxy < cy)\r\n                maxy = cy;\r\n        }\r\n        return [minx, miny, maxx, miny, maxx, maxy, minx, maxy];\r\n    }\r\n    _getDraw9GridBBXPoints(cmd) {\r\n        var minx = 0;\r\n        var miny = 0;\r\n        var maxx = cmd.width;\r\n        var maxy = cmd.height;\r\n        return [minx, miny, maxx, miny, maxx, maxy, minx, maxy];\r\n    }\r\n    _getPathPoints(paths) {\r\n        var i, len;\r\n        var rst = GraphicsBounds._tempPoints;\r\n        rst.length = 0;\r\n        len = paths.length;\r\n        var tCMD;\r\n        for (i = 0; i < len; i++) {\r\n            tCMD = paths[i];\r\n            if (tCMD.length > 1) {\r\n                rst.push(tCMD[1], tCMD[2]);\r\n                if (tCMD.length > 3) {\r\n                    rst.push(tCMD[3], tCMD[4]);\r\n                }\r\n            }\r\n        }\r\n        return rst;\r\n    }\r\n}\r\nGraphicsBounds._tempMatrix = new Matrix();\r\nGraphicsBounds._initMatrix = new Matrix();\r\nGraphicsBounds._tempPoints = [];\r\nGraphicsBounds._tempMatrixArrays = [];\r\nGraphicsBounds._tempCmds = [];\r\n//# sourceMappingURL=GraphicsBounds.js.map",
  "references": [
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/display/cmd/AlphaCmd.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/display/cmd/DrawCircleCmd.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/display/cmd/DrawCurvesCmd.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/display/cmd/DrawImageCmd.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/display/cmd/DrawLineCmd.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/display/cmd/DrawLinesCmd.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/display/cmd/DrawPathCmd.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/display/cmd/DrawPieCmd.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/display/cmd/DrawPolyCmd.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/display/cmd/DrawRectCmd.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/display/cmd/DrawTextureCmd.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/display/cmd/FillTextureCmd.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/display/cmd/RestoreCmd.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/display/cmd/RotateCmd.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/display/cmd/ScaleCmd.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/display/cmd/TransformCmd.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/display/cmd/TranslateCmd.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/maths/Bezier.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/maths/GrahamScan.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/maths/Matrix.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/maths/Point.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/maths/Rectangle.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/renders/Render.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/resource/Context.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/resource/Texture.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/utils/Pool.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/utils/Utils.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/display/Graphics.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/display/cmd/DrawTrianglesCmd.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/display/cmd/Draw9GridTexture.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/utils/ClassUtils.ts"
  ],
  "map": "{\"version\":3,\"file\":\"GraphicsBounds.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../libs/laya/display/GraphicsBounds.ts\"],\"names\":[],\"mappings\":\"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\"}",
  "dts": {
    "name": "D:/widgets/LayaDataStructuresAlgorithms/.rpt2_cache/placeholder/laya/display/GraphicsBounds.d.ts",
    "writeByteOrderMark": false,
    "text": "import { Rectangle } from \"../maths/Rectangle\";\r\nimport { Graphics } from \"./Graphics\";\r\nexport declare class GraphicsBounds {\r\n    private static _tempMatrix;\r\n    private static _initMatrix;\r\n    private static _tempPoints;\r\n    private static _tempMatrixArrays;\r\n    private static _tempCmds;\r\n    private _temp;\r\n    private _bounds;\r\n    private _rstBoundPoints;\r\n    private _cacheBoundsType;\r\n    _graphics: Graphics;\r\n    destroy(): void;\r\n    static create(): GraphicsBounds;\r\n    reset(): void;\r\n    getBounds(realSize?: boolean): Rectangle;\r\n    getBoundPoints(realSize?: boolean): any[];\r\n    private _getCmdPoints;\r\n    private _switchMatrix;\r\n    private static _addPointArrToRst;\r\n    private static _addPointToRst;\r\n    private _getPiePoints;\r\n    private _getTriAngBBXPoints;\r\n    private _getDraw9GridBBXPoints;\r\n    private _getPathPoints;\r\n}\r\n"
  }
}
