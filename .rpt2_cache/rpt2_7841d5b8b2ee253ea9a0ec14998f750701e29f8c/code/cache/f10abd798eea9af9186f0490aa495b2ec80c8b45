{
  "code": "import { Config } from \"../../Config\";\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { VertexArrayObject } from \"../../laya/webgl/VertexArrayObject\";\r\nimport { SystemUtils } from \"./SystemUtils\";\r\nexport class LayaGPU {\r\n    constructor(gl, isWebGL2) {\r\n        this._gl = null;\r\n        this._vaoExt = null;\r\n        this._angleInstancedArrays = null;\r\n        this._isWebGL2 = false;\r\n        this._oesTextureHalfFloat = null;\r\n        this._oes_element_index_uint = null;\r\n        this._oesTextureHalfFloatLinear = null;\r\n        this._oesTextureFloat = null;\r\n        this._extShaderTextureLod = null;\r\n        this._extTextureFilterAnisotropic = null;\r\n        this._compressedTextureS3tc = null;\r\n        this._compressedTexturePvrtc = null;\r\n        this._compressedTextureEtc1 = null;\r\n        this._webgl_depth_texture = null;\r\n        this._gl = gl;\r\n        this._isWebGL2 = isWebGL2;\r\n        var maxTextureFS = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\r\n        var maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\r\n        if (!isWebGL2) {\r\n            if (!ILaya.Render.isConchApp) {\r\n                VertexArrayObject;\r\n                if (window._setupVertexArrayObject)\r\n                    window._setupVertexArrayObject(gl);\r\n            }\r\n            this._vaoExt = this._getExtension(\"OES_vertex_array_object\");\r\n            this._angleInstancedArrays = this._getExtension(\"ANGLE_instanced_arrays\");\r\n            this._oesTextureHalfFloat = this._getExtension(\"OES_texture_half_float\");\r\n            this._oesTextureHalfFloatLinear = this._getExtension(\"OES_texture_half_float_linear\");\r\n            this._oesTextureFloat = this._getExtension(\"OES_texture_float\");\r\n            this._oes_element_index_uint = this._getExtension(\"OES_element_index_uint\");\r\n            this._extShaderTextureLod = this._getExtension(\"EXT_shader_texture_lod\");\r\n            this._webgl_depth_texture = this._getExtension(\"WEBGL_depth_texture\");\r\n            SystemUtils._shaderCapailityLevel = 30;\r\n        }\r\n        else {\r\n            this._getExtension(\"EXT_color_buffer_float\");\r\n            SystemUtils._shaderCapailityLevel = 35;\r\n        }\r\n        this._extTextureFilterAnisotropic = this._getExtension(\"EXT_texture_filter_anisotropic\");\r\n        this._compressedTextureS3tc = this._getExtension(\"WEBGL_compressed_texture_s3tc\");\r\n        this._compressedTexturePvrtc = this._getExtension(\"WEBGL_compressed_texture_pvrtc\");\r\n        this._compressedTextureEtc1 = this._getExtension(\"WEBGL_compressed_texture_etc1\");\r\n        SystemUtils._maxTextureCount = maxTextureFS;\r\n        SystemUtils._maxTextureSize = maxTextureSize;\r\n    }\r\n    _getExtension(name) {\r\n        var prefixes = LayaGPU._extentionVendorPrefixes;\r\n        for (var k in prefixes) {\r\n            var ext = this._gl.getExtension(prefixes[k] + name);\r\n            if (ext)\r\n                return ext;\r\n        }\r\n        return null;\r\n    }\r\n    createVertexArray() {\r\n        if (this._isWebGL2)\r\n            return this._gl.createVertexArray();\r\n        else\r\n            return this._vaoExt.createVertexArrayOES();\r\n    }\r\n    bindVertexArray(vertexArray) {\r\n        if (this._isWebGL2)\r\n            this._gl.bindVertexArray(vertexArray);\r\n        else\r\n            this._vaoExt.bindVertexArrayOES(vertexArray);\r\n    }\r\n    deleteVertexArray(vertexArray) {\r\n        if (this._isWebGL2)\r\n            this._gl.deleteVertexArray(vertexArray);\r\n        else\r\n            this._vaoExt.deleteVertexArrayOES(vertexArray);\r\n    }\r\n    isVertexArray(vertexArray) {\r\n        if (this._isWebGL2)\r\n            this._gl.isVertexArray(vertexArray);\r\n        else\r\n            this._vaoExt.isVertexArrayOES(vertexArray);\r\n    }\r\n    drawElementsInstanced(mode, count, type, offset, instanceCount) {\r\n        if (this._isWebGL2)\r\n            this._gl.drawElementsInstanced(mode, count, type, offset, instanceCount);\r\n        else\r\n            this._angleInstancedArrays.drawElementsInstancedANGLE(mode, count, type, offset, instanceCount);\r\n    }\r\n    drawArraysInstanced(mode, first, count, instanceCount) {\r\n        if (this._isWebGL2)\r\n            this._gl.drawArraysInstanced(mode, first, count, instanceCount);\r\n        else\r\n            this._angleInstancedArrays.drawArraysInstancedANGLE(mode, first, count, instanceCount);\r\n    }\r\n    vertexAttribDivisor(index, divisor) {\r\n        if (this._isWebGL2)\r\n            this._gl.vertexAttribDivisor(index, divisor);\r\n        else\r\n            this._angleInstancedArrays.vertexAttribDivisorANGLE(index, divisor);\r\n    }\r\n    supportInstance() {\r\n        if ((this._isWebGL2 || this._angleInstancedArrays) && Config.allowGPUInstanceDynamicBatch)\r\n            return true;\r\n        else\r\n            return false;\r\n    }\r\n    supportElementIndexUint32() {\r\n        return this._isWebGL2 || this._oes_element_index_uint ? true : false;\r\n    }\r\n}\r\nLayaGPU._extentionVendorPrefixes = [\"\", \"WEBKIT_\", \"MOZ_\"];\r\n//# sourceMappingURL=LayaGPU.js.map",
  "references": [
    "D:/widgets/LayaDataStructuresAlgorithms/libs/Config.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/ILaya.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/VertexArrayObject.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/SystemUtils.ts"
  ],
  "map": "{\"version\":3,\"file\":\"LayaGPU.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../libs/laya/webgl/LayaGPU.ts\"],\"names\":[],\"mappings\":\"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\"}",
  "dts": {
    "name": "D:/widgets/LayaDataStructuresAlgorithms/.rpt2_cache/placeholder/laya/webgl/LayaGPU.d.ts",
    "writeByteOrderMark": false,
    "text": "export declare class LayaGPU {\r\n    private static _extentionVendorPrefixes;\r\n    private _gl;\r\n    private _vaoExt;\r\n    private _angleInstancedArrays;\r\n    _isWebGL2: boolean;\r\n    _oesTextureHalfFloat: any;\r\n    _oes_element_index_uint: any;\r\n    _oesTextureHalfFloatLinear: any;\r\n    _oesTextureFloat: any;\r\n    _extShaderTextureLod: any;\r\n    _extTextureFilterAnisotropic: any;\r\n    _compressedTextureS3tc: any;\r\n    _compressedTexturePvrtc: any;\r\n    _compressedTextureEtc1: any;\r\n    _webgl_depth_texture: any;\r\n    constructor(gl: WebGLRenderingContext, isWebGL2: boolean);\r\n    private _getExtension;\r\n    createVertexArray(): any;\r\n    bindVertexArray(vertexArray: any): void;\r\n    deleteVertexArray(vertexArray: any): void;\r\n    isVertexArray(vertexArray: any): void;\r\n    drawElementsInstanced(mode: number, count: number, type: number, offset: number, instanceCount: number): void;\r\n    drawArraysInstanced(mode: number, first: number, count: number, instanceCount: number): void;\r\n    vertexAttribDivisor(index: number, divisor: number): void;\r\n    supportInstance(): boolean;\r\n    supportElementIndexUint32(): boolean;\r\n}\r\n"
  }
}
