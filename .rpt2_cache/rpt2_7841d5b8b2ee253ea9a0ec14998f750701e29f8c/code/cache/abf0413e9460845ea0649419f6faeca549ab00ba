{
  "code": "import { ILaya } from \"../../ILaya\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { Bezier } from \"../maths/Bezier\";\r\nimport { Matrix } from \"../maths/Matrix\";\r\nimport { Point } from \"../maths/Point\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { Stat } from \"../utils/Stat\";\r\nimport { BlendMode } from \"../webgl/canvas/BlendMode\";\r\nimport { DrawStyle } from \"../webgl/canvas/DrawStyle\";\r\nimport { Path } from \"../webgl/canvas/Path\";\r\nimport { SaveBase } from \"../webgl/canvas/save/SaveBase\";\r\nimport { SaveClipRect } from \"../webgl/canvas/save/SaveClipRect\";\r\nimport { SaveMark } from \"../webgl/canvas/save/SaveMark\";\r\nimport { SaveTransform } from \"../webgl/canvas/save/SaveTransform\";\r\nimport { SaveTranslate } from \"../webgl/canvas/save/SaveTranslate\";\r\nimport { WebGLCacheAsNormalCanvas } from \"../webgl/canvas/WebGLCacheAsNormalCanvas\";\r\nimport { BaseShader } from \"../webgl/shader/BaseShader\";\r\nimport { Shader2D } from \"../webgl/shader/d2/Shader2D\";\r\nimport { ShaderDefines2D } from \"../webgl/shader/d2/ShaderDefines2D\";\r\nimport { SkinMeshBuffer } from \"../webgl/shader/d2/skinAnishader/SkinMeshBuffer\";\r\nimport { Value2D } from \"../webgl/shader/d2/value/Value2D\";\r\nimport { BasePoly } from \"../webgl/shapes/BasePoly\";\r\nimport { Earcut } from \"../webgl/shapes/Earcut\";\r\nimport { Submit } from \"../webgl/submit/Submit\";\r\nimport { SubmitBase } from \"../webgl/submit/SubmitBase\";\r\nimport { SubmitCanvas } from \"../webgl/submit/SubmitCanvas\";\r\nimport { SubmitCMD } from \"../webgl/submit/SubmitCMD\";\r\nimport { SubmitKey } from \"../webgl/submit/SubmitKey\";\r\nimport { SubmitTarget } from \"../webgl/submit/SubmitTarget\";\r\nimport { SubmitTexture } from \"../webgl/submit/SubmitTexture\";\r\nimport { CharSubmitCache } from \"../webgl/text/CharSubmitCache\";\r\nimport { TextRender } from \"../webgl/text/TextRender\";\r\nimport { MeshQuadTexture } from \"../webgl/utils/MeshQuadTexture\";\r\nimport { MeshTexture } from \"../webgl/utils/MeshTexture\";\r\nimport { MeshVG } from \"../webgl/utils/MeshVG\";\r\nimport { RenderState2D } from \"../webgl/utils/RenderState2D\";\r\nimport { WebGLContext } from \"../webgl/WebGLContext\";\r\nimport { RenderTexture2D } from \"./RenderTexture2D\";\r\nimport { RenderTextureFormat } from \"./RenderTextureFormat\";\r\nimport { Texture } from \"./Texture\";\r\nimport { Texture2D } from \"./Texture2D\";\r\nexport class Context {\r\n    constructor() {\r\n        this._tmpMatrix = new Matrix();\r\n        this._drawTexToDrawTri_Vert = new Float32Array(8);\r\n        this._drawTexToDrawTri_Index = new Uint16Array([0, 1, 2, 0, 2, 3]);\r\n        this._tempUV = new Float32Array(8);\r\n        this._drawTriUseAbsMatrix = false;\r\n        this._id = ++Context._COUNT;\r\n        this._other = null;\r\n        this._renderNextSubmitIndex = 0;\r\n        this._path = null;\r\n        this._drawCount = 1;\r\n        this._width = Context._MAXSIZE;\r\n        this._height = Context._MAXSIZE;\r\n        this._renderCount = 0;\r\n        this._submits = null;\r\n        this._curSubmit = null;\r\n        this._submitKey = new SubmitKey();\r\n        this._mesh = null;\r\n        this._pathMesh = null;\r\n        this._triangleMesh = null;\r\n        this.meshlist = [];\r\n        this._transedPoints = new Array(8);\r\n        this._temp4Points = new Array(8);\r\n        this._clipRect = Context.MAXCLIPRECT;\r\n        this._globalClipMatrix = new Matrix(Context._MAXSIZE, 0, 0, Context._MAXSIZE, 0, 0);\r\n        this._clipInCache = false;\r\n        this._clipInfoID = 0;\r\n        this._clipID_Gen = 0;\r\n        this._lastMatScaleX = 1.0;\r\n        this._lastMatScaleY = 1.0;\r\n        this._lastMat_a = 1.0;\r\n        this._lastMat_b = 0.0;\r\n        this._lastMat_c = 0.0;\r\n        this._lastMat_d = 1.0;\r\n        this._nBlendType = 0;\r\n        this._save = null;\r\n        this._targets = null;\r\n        this._charSubmitCache = null;\r\n        this._saveMark = null;\r\n        this._shader2D = new Shader2D();\r\n        this.sprite = null;\r\n        this._italicDeg = 0;\r\n        this._lastTex = null;\r\n        this._fillColor = 0;\r\n        this._flushCnt = 0;\r\n        this.defTexture = null;\r\n        this._colorFiler = null;\r\n        this.drawTexAlign = false;\r\n        this._incache = false;\r\n        this.isMain = false;\r\n        Context._contextcount++;\r\n        Context._textRender = Context._textRender || new TextRender();\r\n        if (!this.defTexture) {\r\n            var defTex2d = new Texture2D(2, 2);\r\n            defTex2d.setPixels(new Uint8Array(16));\r\n            defTex2d.lock = true;\r\n            this.defTexture = new Texture(defTex2d);\r\n        }\r\n        this._lastTex = this.defTexture;\r\n        this.clear();\r\n    }\r\n    static __init__() {\r\n        Context.MAXCLIPRECT = new Rectangle(0, 0, Context._MAXSIZE, Context._MAXSIZE);\r\n        ContextParams.DEFAULT = new ContextParams();\r\n        WebGLCacheAsNormalCanvas;\r\n    }\r\n    drawImage(...args) {\r\n    }\r\n    getImageData(...args) {\r\n    }\r\n    measureText(text) {\r\n        return null;\r\n    }\r\n    setTransform(...args) {\r\n    }\r\n    $transform(a, b, c, d, tx, ty) {\r\n    }\r\n    get lineJoin() {\r\n        return '';\r\n    }\r\n    set lineJoin(value) {\r\n    }\r\n    get lineCap() {\r\n        return '';\r\n    }\r\n    set lineCap(value) {\r\n    }\r\n    get miterLimit() {\r\n        return '';\r\n    }\r\n    set miterLimit(value) {\r\n    }\r\n    clearRect(x, y, width, height) {\r\n    }\r\n    _drawRect(x, y, width, height, style) {\r\n        Stat.renderBatches++;\r\n        style && (this.fillStyle = style);\r\n        this.fillRect(x, y, width, height, null);\r\n    }\r\n    drawTexture2(x, y, pivotX, pivotY, m, args2) {\r\n    }\r\n    transformByMatrix(matrix, tx, ty) {\r\n        this.transform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx + tx, matrix.ty + ty);\r\n    }\r\n    saveTransform(matrix) {\r\n        this.save();\r\n    }\r\n    restoreTransform(matrix) {\r\n        this.restore();\r\n    }\r\n    drawRect(x, y, width, height, fillColor, lineColor, lineWidth) {\r\n        var ctx = this;\r\n        if (fillColor != null) {\r\n            ctx.fillStyle = fillColor;\r\n            ctx.fillRect(x, y, width, height);\r\n        }\r\n        if (lineColor != null) {\r\n            ctx.strokeStyle = lineColor;\r\n            ctx.lineWidth = lineWidth;\r\n            ctx.strokeRect(x, y, width, height);\r\n        }\r\n    }\r\n    alpha(value) {\r\n        this.globalAlpha *= value;\r\n    }\r\n    _transform(mat, pivotX, pivotY) {\r\n        this.translate(pivotX, pivotY);\r\n        this.transform(mat.a, mat.b, mat.c, mat.d, mat.tx, mat.ty);\r\n        this.translate(-pivotX, -pivotY);\r\n    }\r\n    _rotate(angle, pivotX, pivotY) {\r\n        this.translate(pivotX, pivotY);\r\n        this.rotate(angle);\r\n        this.translate(-pivotX, -pivotY);\r\n    }\r\n    _scale(scaleX, scaleY, pivotX, pivotY) {\r\n        this.translate(pivotX, pivotY);\r\n        this.scale(scaleX, scaleY);\r\n        this.translate(-pivotX, -pivotY);\r\n    }\r\n    _drawLine(x, y, fromX, fromY, toX, toY, lineColor, lineWidth, vid) {\r\n        this.beginPath();\r\n        this.strokeStyle = lineColor;\r\n        this.lineWidth = lineWidth;\r\n        this.moveTo(x + fromX, y + fromY);\r\n        this.lineTo(x + toX, y + toY);\r\n        this.stroke();\r\n    }\r\n    _drawLines(x, y, points, lineColor, lineWidth, vid) {\r\n        this.beginPath();\r\n        this.strokeStyle = lineColor;\r\n        this.lineWidth = lineWidth;\r\n        this.addPath(points.slice(), false, false, x, y);\r\n        this.stroke();\r\n    }\r\n    drawCurves(x, y, points, lineColor, lineWidth) {\r\n        this.beginPath();\r\n        this.strokeStyle = lineColor;\r\n        this.lineWidth = lineWidth;\r\n        this.moveTo(x + points[0], y + points[1]);\r\n        var i = 2, n = points.length;\r\n        while (i < n) {\r\n            this.quadraticCurveTo(x + points[i++], y + points[i++], x + points[i++], y + points[i++]);\r\n        }\r\n        this.stroke();\r\n    }\r\n    _fillAndStroke(fillColor, strokeColor, lineWidth, isConvexPolygon = false) {\r\n        if (fillColor != null) {\r\n            this.fillStyle = fillColor;\r\n            this.fill();\r\n        }\r\n        if (strokeColor != null && lineWidth > 0) {\r\n            this.strokeStyle = strokeColor;\r\n            this.lineWidth = lineWidth;\r\n            this.stroke();\r\n        }\r\n    }\r\n    _drawCircle(x, y, radius, fillColor, lineColor, lineWidth, vid) {\r\n        Stat.renderBatches++;\r\n        this.beginPath(true);\r\n        this.arc(x, y, radius, 0, Context.PI2);\r\n        this.closePath();\r\n        this._fillAndStroke(fillColor, lineColor, lineWidth);\r\n    }\r\n    _drawPie(x, y, radius, startAngle, endAngle, fillColor, lineColor, lineWidth, vid) {\r\n        this.beginPath();\r\n        this.moveTo(x, y);\r\n        this.arc(x, y, radius, startAngle, endAngle);\r\n        this.closePath();\r\n        this._fillAndStroke(fillColor, lineColor, lineWidth);\r\n    }\r\n    _drawPoly(x, y, points, fillColor, lineColor, lineWidth, isConvexPolygon, vid) {\r\n        this.beginPath();\r\n        this.addPath(points.slice(), true, isConvexPolygon, x, y);\r\n        this.closePath();\r\n        this._fillAndStroke(fillColor, lineColor, lineWidth, isConvexPolygon);\r\n    }\r\n    _drawPath(x, y, paths, brush, pen) {\r\n        this.beginPath();\r\n        for (var i = 0, n = paths.length; i < n; i++) {\r\n            var path = paths[i];\r\n            switch (path[0]) {\r\n                case \"moveTo\":\r\n                    this.moveTo(x + path[1], y + path[2]);\r\n                    break;\r\n                case \"lineTo\":\r\n                    this.lineTo(x + path[1], y + path[2]);\r\n                    break;\r\n                case \"arcTo\":\r\n                    this.arcTo(x + path[1], y + path[2], x + path[3], y + path[4], path[5]);\r\n                    break;\r\n                case \"closePath\":\r\n                    this.closePath();\r\n                    break;\r\n            }\r\n        }\r\n        if (brush != null) {\r\n            this.fillStyle = brush.fillStyle;\r\n            this.fill();\r\n        }\r\n        if (pen != null) {\r\n            this.strokeStyle = pen.strokeStyle;\r\n            this.lineWidth = pen.lineWidth || 1;\r\n            this.lineJoin = pen.lineJoin;\r\n            this.lineCap = pen.lineCap;\r\n            this.miterLimit = pen.miterLimit;\r\n            this.stroke();\r\n        }\r\n    }\r\n    static set2DRenderConfig() {\r\n        var gl = LayaGL.instance;\r\n        WebGLContext.setBlend(gl, true);\r\n        WebGLContext.setBlendEquation(gl, gl.FUNC_ADD);\r\n        BlendMode.activeBlendFunction = null;\r\n        WebGLContext.setBlendFunc(gl, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n        WebGLContext.setDepthTest(gl, false);\r\n        WebGLContext.setCullFace(gl, false);\r\n        WebGLContext.setDepthMask(gl, true);\r\n        WebGLContext.setFrontFace(gl, gl.CCW);\r\n        gl.viewport(0, 0, RenderState2D.width, RenderState2D.height);\r\n    }\r\n    clearBG(r, g, b, a) {\r\n        var gl = WebGLContext.mainContext;\r\n        gl.clearColor(r, g, b, a);\r\n        gl.clear(gl.COLOR_BUFFER_BIT);\r\n    }\r\n    _getSubmits() {\r\n        return this._submits;\r\n    }\r\n    _releaseMem(keepRT = false) {\r\n        if (!this._submits)\r\n            return;\r\n        this._curMat && this._curMat.destroy();\r\n        this._curMat = null;\r\n        this._shader2D.destroy();\r\n        this._shader2D = null;\r\n        this._charSubmitCache.clear();\r\n        for (var i = 0, n = this._submits._length; i < n; i++) {\r\n            this._submits[i].releaseRender();\r\n        }\r\n        this._submits.length = 0;\r\n        this._submits._length = 0;\r\n        this._submits = null;\r\n        this._curSubmit = null;\r\n        this._path = null;\r\n        this._save = null;\r\n        var sz;\r\n        for (i = 0, sz = this.meshlist.length; i < sz; i++) {\r\n            var curm = this.meshlist[i];\r\n            curm.destroy();\r\n        }\r\n        this.meshlist.length = 0;\r\n        this.sprite = null;\r\n        if (!keepRT) {\r\n            this._targets && (this._targets.destroy());\r\n            this._targets = null;\r\n        }\r\n    }\r\n    destroy(keepRT = false) {\r\n        --Context._contextcount;\r\n        this.sprite = null;\r\n        this._releaseMem(keepRT);\r\n        this._charSubmitCache.destroy();\r\n        this._mesh.destroy();\r\n        if (!keepRT) {\r\n            this._targets && this._targets.destroy();\r\n            this._targets = null;\r\n        }\r\n    }\r\n    clear() {\r\n        if (!this._submits) {\r\n            this._other = ContextParams.DEFAULT;\r\n            this._curMat = Matrix.create();\r\n            this._charSubmitCache = new CharSubmitCache();\r\n            this._mesh = MeshQuadTexture.getAMesh(this.isMain);\r\n            this.meshlist.push(this._mesh);\r\n            this._pathMesh = MeshVG.getAMesh(this.isMain);\r\n            this.meshlist.push(this._pathMesh);\r\n            this._triangleMesh = MeshTexture.getAMesh(this.isMain);\r\n            this.meshlist.push(this._triangleMesh);\r\n            this._submits = [];\r\n            this._save = [SaveMark.Create(this)];\r\n            this._save.length = 10;\r\n            this._shader2D = new Shader2D();\r\n        }\r\n        this._submitKey.clear();\r\n        this._mesh.clearVB();\r\n        this._drawCount = 1;\r\n        this._other = ContextParams.DEFAULT;\r\n        this._other.lineWidth = this._shader2D.ALPHA = 1.0;\r\n        this._nBlendType = 0;\r\n        this._clipRect = Context.MAXCLIPRECT;\r\n        this._curSubmit = SubmitBase.RENDERBASE;\r\n        SubmitBase.RENDERBASE._ref = 0xFFFFFF;\r\n        SubmitBase.RENDERBASE._numEle = 0;\r\n        this._shader2D.fillStyle = this._shader2D.strokeStyle = DrawStyle.DEFAULT;\r\n        for (var i = 0, n = this._submits._length; i < n; i++)\r\n            this._submits[i].releaseRender();\r\n        this._submits._length = 0;\r\n        this._curMat.identity();\r\n        this._other.clear();\r\n        this._saveMark = this._save[0];\r\n        this._save._length = 1;\r\n    }\r\n    size(w, h) {\r\n        if (this._width != w || this._height != h) {\r\n            this._width = w;\r\n            this._height = h;\r\n            if (this._targets) {\r\n                this._targets.destroy();\r\n                this._targets = new RenderTexture2D(w, h, RenderTextureFormat.R8G8B8A8, -1);\r\n            }\r\n            if (this.isMain) {\r\n                WebGLContext.mainContext.viewport(0, 0, w, h);\r\n                RenderState2D.width = w;\r\n                RenderState2D.height = h;\r\n            }\r\n        }\r\n        if (w === 0 && h === 0)\r\n            this._releaseMem();\r\n    }\r\n    set asBitmap(value) {\r\n        if (value) {\r\n            let rt = this._targets;\r\n            if (!this._width || !this._height)\r\n                throw Error(\"asBitmap no size!\");\r\n            if (!rt || rt.width != this._width || rt.height != this._height) {\r\n                if (rt) {\r\n                    rt.destroy();\r\n                }\r\n                this._targets = new RenderTexture2D(this._width, this._height, RenderTextureFormat.R8G8B8A8, -1);\r\n            }\r\n        }\r\n        else {\r\n            this._targets && this._targets.destroy();\r\n            this._targets = null;\r\n        }\r\n    }\r\n    getMatScaleX() {\r\n        if (this._lastMat_a == this._curMat.a && this._lastMat_b == this._curMat.b)\r\n            return this._lastMatScaleX;\r\n        this._lastMatScaleX = this._curMat.getScaleX();\r\n        this._lastMat_a = this._curMat.a;\r\n        this._lastMat_b = this._curMat.b;\r\n        return this._lastMatScaleX;\r\n    }\r\n    getMatScaleY() {\r\n        if (this._lastMat_c == this._curMat.c && this._lastMat_d == this._curMat.d)\r\n            return this._lastMatScaleY;\r\n        this._lastMatScaleY = this._curMat.getScaleY();\r\n        this._lastMat_c = this._curMat.c;\r\n        this._lastMat_d = this._curMat.d;\r\n        return this._lastMatScaleY;\r\n    }\r\n    setFillColor(color) {\r\n        this._fillColor = color;\r\n    }\r\n    getFillColor() {\r\n        return this._fillColor;\r\n    }\r\n    set fillStyle(value) {\r\n        if (!this._shader2D.fillStyle.equal(value)) {\r\n            SaveBase.save(this, SaveBase.TYPE_FILESTYLE, this._shader2D, false);\r\n            this._shader2D.fillStyle = DrawStyle.create(value);\r\n            this._submitKey.other = -this._shader2D.fillStyle.toInt();\r\n        }\r\n    }\r\n    get fillStyle() {\r\n        return this._shader2D.fillStyle;\r\n    }\r\n    set globalAlpha(value) {\r\n        value = Math.floor(value * 1000) / 1000;\r\n        if (value != this._shader2D.ALPHA) {\r\n            SaveBase.save(this, SaveBase.TYPE_ALPHA, this._shader2D, false);\r\n            this._shader2D.ALPHA = value;\r\n        }\r\n    }\r\n    get globalAlpha() {\r\n        return this._shader2D.ALPHA;\r\n    }\r\n    set textAlign(value) {\r\n        (this._other.textAlign === value) || (this._other = this._other.make(), SaveBase.save(this, SaveBase.TYPE_TEXTALIGN, this._other, false), this._other.textAlign = value);\r\n    }\r\n    get textAlign() {\r\n        return this._other.textAlign;\r\n    }\r\n    set textBaseline(value) {\r\n        (this._other.textBaseline === value) || (this._other = this._other.make(), SaveBase.save(this, SaveBase.TYPE_TEXTBASELINE, this._other, false), this._other.textBaseline = value);\r\n    }\r\n    get textBaseline() {\r\n        return this._other.textBaseline;\r\n    }\r\n    set globalCompositeOperation(value) {\r\n        var n = BlendMode.TOINT[value];\r\n        n == null || (this._nBlendType === n) || (SaveBase.save(this, SaveBase.TYPE_GLOBALCOMPOSITEOPERATION, this, true), this._curSubmit = SubmitBase.RENDERBASE, this._nBlendType = n);\r\n    }\r\n    get globalCompositeOperation() {\r\n        return BlendMode.NAMES[this._nBlendType];\r\n    }\r\n    set strokeStyle(value) {\r\n        this._shader2D.strokeStyle.equal(value) || (SaveBase.save(this, SaveBase.TYPE_STROKESTYLE, this._shader2D, false), this._shader2D.strokeStyle = DrawStyle.create(value), this._submitKey.other = -this._shader2D.strokeStyle.toInt());\r\n    }\r\n    get strokeStyle() {\r\n        return this._shader2D.strokeStyle;\r\n    }\r\n    translate(x, y) {\r\n        if (x !== 0 || y !== 0) {\r\n            SaveTranslate.save(this);\r\n            if (this._curMat._bTransform) {\r\n                SaveTransform.save(this);\r\n                this._curMat.tx += (x * this._curMat.a + y * this._curMat.c);\r\n                this._curMat.ty += (x * this._curMat.b + y * this._curMat.d);\r\n            }\r\n            else {\r\n                this._curMat.tx = x;\r\n                this._curMat.ty = y;\r\n            }\r\n        }\r\n    }\r\n    set lineWidth(value) {\r\n        (this._other.lineWidth === value) || (this._other = this._other.make(), SaveBase.save(this, SaveBase.TYPE_LINEWIDTH, this._other, false), this._other.lineWidth = value);\r\n    }\r\n    get lineWidth() {\r\n        return this._other.lineWidth;\r\n    }\r\n    save() {\r\n        this._save[this._save._length++] = SaveMark.Create(this);\r\n    }\r\n    restore() {\r\n        var sz = this._save._length;\r\n        var lastBlend = this._nBlendType;\r\n        if (sz < 1)\r\n            return;\r\n        for (var i = sz - 1; i >= 0; i--) {\r\n            var o = this._save[i];\r\n            o.restore(this);\r\n            if (o.isSaveMark()) {\r\n                this._save._length = i;\r\n                return;\r\n            }\r\n        }\r\n        if (lastBlend != this._nBlendType) {\r\n            this._curSubmit = SubmitBase.RENDERBASE;\r\n        }\r\n    }\r\n    set font(str) {\r\n        this._other = this._other.make();\r\n        SaveBase.save(this, SaveBase.TYPE_FONT, this._other, false);\r\n    }\r\n    fillText(txt, x, y, fontStr, color, align, lineWidth = 0, borderColor = \"\") {\r\n        Context._textRender.filltext(this, txt, x, y, fontStr, color, borderColor, lineWidth, align);\r\n    }\r\n    drawText(text, x, y, font, color, textAlign) {\r\n        Context._textRender.filltext(this, text, x, y, font, color, null, 0, textAlign);\r\n    }\r\n    fillWords(words, x, y, fontStr, color) {\r\n        Context._textRender.fillWords(this, words, x, y, fontStr, color, null, 0);\r\n    }\r\n    strokeWord(text, x, y, font, color, lineWidth, textAlign) {\r\n        Context._textRender.filltext(this, text, x, y, font, null, color, lineWidth, textAlign);\r\n    }\r\n    fillBorderText(txt, x, y, font, color, borderColor, lineWidth, textAlign) {\r\n        Context._textRender.filltext(this, txt, x, y, font, color, borderColor, lineWidth, textAlign);\r\n    }\r\n    fillBorderWords(words, x, y, font, color, borderColor, lineWidth) {\r\n        Context._textRender.fillWords(this, words, x, y, font, color, borderColor, lineWidth);\r\n    }\r\n    _fast_filltext(data, x, y, fontObj, color, strokeColor, lineWidth, textAlign, underLine = 0) {\r\n        Context._textRender._fast_filltext(this, data, null, x, y, fontObj, color, strokeColor, lineWidth, textAlign, underLine);\r\n    }\r\n    _fillRect(x, y, width, height, rgba) {\r\n        var submit = this._curSubmit;\r\n        var sameKey = submit && (submit._key.submitType === SubmitBase.KEY_DRAWTEXTURE && submit._key.blendShader === this._nBlendType);\r\n        if (this._mesh.vertNum + 4 > Context._MAXVERTNUM) {\r\n            this._mesh = MeshQuadTexture.getAMesh(this.isMain);\r\n            this.meshlist.push(this._mesh);\r\n            sameKey = false;\r\n        }\r\n        sameKey && (sameKey = sameKey && this.isSameClipInfo(submit));\r\n        this.transformQuad(x, y, width, height, 0, this._curMat, this._transedPoints);\r\n        if (!this.clipedOff(this._transedPoints)) {\r\n            this._mesh.addQuad(this._transedPoints, Texture.NO_UV, rgba, false);\r\n            if (!sameKey) {\r\n                submit = this._curSubmit = SubmitTexture.create(this, this._mesh, Value2D.create(ShaderDefines2D.TEXTURE2D, 0));\r\n                this._submits[this._submits._length++] = submit;\r\n                this._copyClipInfo(submit, this._globalClipMatrix);\r\n                submit.shaderValue.textureHost = this._lastTex;\r\n                submit._key.other = (this._lastTex && this._lastTex.bitmap) ? this._lastTex.bitmap.id : -1;\r\n                submit._renderType = SubmitBase.TYPE_TEXTURE;\r\n            }\r\n            this._curSubmit._numEle += 6;\r\n            this._mesh.indexNum += 6;\r\n            this._mesh.vertNum += 4;\r\n        }\r\n    }\r\n    fillRect(x, y, width, height, fillStyle) {\r\n        var drawstyle = fillStyle ? DrawStyle.create(fillStyle) : this._shader2D.fillStyle;\r\n        var rgba = this.mixRGBandAlpha(drawstyle.toInt());\r\n        this._fillRect(x, y, width, height, rgba);\r\n    }\r\n    fillTexture(texture, x, y, width, height, type, offset, other) {\r\n        if (!texture._getSource()) {\r\n            this.sprite && ILaya.systemTimer.callLater(this, this._repaintSprite);\r\n            return;\r\n        }\r\n        this._fillTexture(texture, texture.width, texture.height, texture.uvrect, x, y, width, height, type, offset.x, offset.y);\r\n    }\r\n    _fillTexture(texture, texw, texh, texuvRect, x, y, width, height, type, offsetx, offsety) {\r\n        var submit = this._curSubmit;\r\n        var sameKey = false;\r\n        if (this._mesh.vertNum + 4 > Context._MAXVERTNUM) {\r\n            this._mesh = MeshQuadTexture.getAMesh(this.isMain);\r\n            this.meshlist.push(this._mesh);\r\n            sameKey = false;\r\n        }\r\n        var repeatx = true;\r\n        var repeaty = true;\r\n        switch (type) {\r\n            case \"repeat\": break;\r\n            case \"repeat-x\":\r\n                repeaty = false;\r\n                break;\r\n            case \"repeat-y\":\r\n                repeatx = false;\r\n                break;\r\n            case \"no-repeat\":\r\n                repeatx = repeaty = false;\r\n                break;\r\n            default: break;\r\n        }\r\n        var uv = this._temp4Points;\r\n        var stu = 0;\r\n        var stv = 0;\r\n        var stx = 0, sty = 0, edx = 0, edy = 0;\r\n        if (offsetx < 0) {\r\n            stx = x;\r\n            stu = (-offsetx % texw) / texw;\r\n        }\r\n        else {\r\n            stx = x + offsetx;\r\n        }\r\n        if (offsety < 0) {\r\n            sty = y;\r\n            stv = (-offsety % texh) / texh;\r\n        }\r\n        else {\r\n            sty = y + offsety;\r\n        }\r\n        edx = x + width;\r\n        edy = y + height;\r\n        (!repeatx) && (edx = Math.min(edx, x + offsetx + texw));\r\n        (!repeaty) && (edy = Math.min(edy, y + offsety + texh));\r\n        if (edx < x || edy < y)\r\n            return;\r\n        if (stx > edx || sty > edy)\r\n            return;\r\n        var edu = (edx - x - offsetx) / texw;\r\n        var edv = (edy - y - offsety) / texh;\r\n        this.transformQuad(stx, sty, edx - stx, edy - sty, 0, this._curMat, this._transedPoints);\r\n        uv[0] = stu;\r\n        uv[1] = stv;\r\n        uv[2] = edu;\r\n        uv[3] = stv;\r\n        uv[4] = edu;\r\n        uv[5] = edv;\r\n        uv[6] = stu;\r\n        uv[7] = edv;\r\n        if (!this.clipedOff(this._transedPoints)) {\r\n            var rgba = this._mixRGBandAlpha(0xffffffff, this._shader2D.ALPHA);\r\n            this._mesh.addQuad(this._transedPoints, uv, rgba, true);\r\n            var sv = Value2D.create(ShaderDefines2D.TEXTURE2D, 0);\r\n            sv.defines.add(ShaderDefines2D.FILLTEXTURE);\r\n            sv.u_TexRange = texuvRect.concat();\r\n            submit = this._curSubmit = SubmitTexture.create(this, this._mesh, sv);\r\n            this._submits[this._submits._length++] = submit;\r\n            this._copyClipInfo(submit, this._globalClipMatrix);\r\n            submit.shaderValue.textureHost = texture;\r\n            submit._renderType = SubmitBase.TYPE_TEXTURE;\r\n            this._curSubmit._numEle += 6;\r\n            this._mesh.indexNum += 6;\r\n            this._mesh.vertNum += 4;\r\n        }\r\n        this.breakNextMerge();\r\n    }\r\n    setColorFilter(filter) {\r\n        SaveBase.save(this, SaveBase.TYPE_COLORFILTER, this, true);\r\n        this._colorFiler = filter;\r\n        this._curSubmit = SubmitBase.RENDERBASE;\r\n    }\r\n    drawTexture(tex, x, y, width, height) {\r\n        this._drawTextureM(tex, x, y, width, height, null, 1, null);\r\n    }\r\n    drawTextures(tex, pos, tx, ty) {\r\n        if (!tex._getSource()) {\r\n            this.sprite && ILaya.systemTimer.callLater(this, this._repaintSprite);\r\n            return;\r\n        }\r\n        var n = pos.length / 2;\r\n        var ipos = 0;\r\n        var bmpid = tex.bitmap.id;\r\n        for (var i = 0; i < n; i++) {\r\n            this._inner_drawTexture(tex, bmpid, pos[ipos++] + tx, pos[ipos++] + ty, 0, 0, null, null, 1.0, false);\r\n        }\r\n    }\r\n    _drawTextureAddSubmit(imgid, tex) {\r\n        var submit = null;\r\n        submit = SubmitTexture.create(this, this._mesh, Value2D.create(ShaderDefines2D.TEXTURE2D, 0));\r\n        this._submits[this._submits._length++] = submit;\r\n        submit.shaderValue.textureHost = tex;\r\n        submit._key.other = imgid;\r\n        submit._renderType = SubmitBase.TYPE_TEXTURE;\r\n        this._curSubmit = submit;\r\n    }\r\n    _drawTextureM(tex, x, y, width, height, m, alpha, uv) {\r\n        var cs = this.sprite;\r\n        if (!tex._getSource(function () {\r\n            if (cs) {\r\n                cs.repaint();\r\n            }\r\n        })) {\r\n            return false;\r\n        }\r\n        return this._inner_drawTexture(tex, tex.bitmap.id, x, y, width, height, m, uv, alpha, false);\r\n    }\r\n    _drawRenderTexture(tex, x, y, width, height, m, alpha, uv) {\r\n        return this._inner_drawTexture(tex, -1, x, y, width, height, m, uv, 1.0, false);\r\n    }\r\n    submitDebugger() {\r\n        this._submits[this._submits._length++] = SubmitCMD.create([], function () { debugger; }, this);\r\n    }\r\n    _copyClipInfo(submit, clipInfo) {\r\n        var cm = submit.shaderValue.clipMatDir;\r\n        cm[0] = clipInfo.a;\r\n        cm[1] = clipInfo.b;\r\n        cm[2] = clipInfo.c;\r\n        cm[3] = clipInfo.d;\r\n        var cmp = submit.shaderValue.clipMatPos;\r\n        cmp[0] = clipInfo.tx;\r\n        cmp[1] = clipInfo.ty;\r\n        submit.clipInfoID = this._clipInfoID;\r\n        if (this._clipInCache) {\r\n            submit.shaderValue.clipOff[0] = 1;\r\n        }\r\n    }\r\n    isSameClipInfo(submit) {\r\n        return (submit.clipInfoID === this._clipInfoID);\r\n    }\r\n    _useNewTex2DSubmit(tex, minVertNum) {\r\n        if (this._mesh.vertNum + minVertNum > Context._MAXVERTNUM) {\r\n            this._mesh = MeshQuadTexture.getAMesh(this.isMain);\r\n            this.meshlist.push(this._mesh);\r\n        }\r\n        var submit = SubmitTexture.create(this, this._mesh, Value2D.create(ShaderDefines2D.TEXTURE2D, 0));\r\n        this._submits[this._submits._length++] = this._curSubmit = submit;\r\n        submit.shaderValue.textureHost = tex;\r\n        this._copyClipInfo(submit, this._globalClipMatrix);\r\n    }\r\n    _drawTexRect(x, y, w, h, uv) {\r\n        this.transformQuad(x, y, w, h, this._italicDeg, this._curMat, this._transedPoints);\r\n        var ops = this._transedPoints;\r\n        ops[0] = (ops[0] + 0.5) | 0;\r\n        ops[1] = (ops[1] + 0.5) | 0;\r\n        ops[2] = (ops[2] + 0.5) | 0;\r\n        ops[3] = (ops[3] + 0.5) | 0;\r\n        ops[4] = (ops[4] + 0.5) | 0;\r\n        ops[5] = (ops[5] + 0.5) | 0;\r\n        ops[6] = (ops[6] + 0.5) | 0;\r\n        ops[7] = (ops[7] + 0.5) | 0;\r\n        if (!this.clipedOff(this._transedPoints)) {\r\n            this._mesh.addQuad(this._transedPoints, uv, this._fillColor, true);\r\n            this._curSubmit._numEle += 6;\r\n            this._mesh.indexNum += 6;\r\n            this._mesh.vertNum += 4;\r\n        }\r\n    }\r\n    drawCallOptimize(enable) {\r\n        this._charSubmitCache.enable(enable, this);\r\n        return enable;\r\n    }\r\n    _inner_drawTexture(tex, imgid, x, y, width, height, m, uv, alpha, lastRender) {\r\n        if (width <= 0 || height <= 0) {\r\n            return;\r\n        }\r\n        var preKey = this._curSubmit._key;\r\n        uv = uv || tex._uv;\r\n        if (preKey.submitType === SubmitBase.KEY_TRIANGLES && preKey.other === imgid) {\r\n            var tv = this._drawTexToDrawTri_Vert;\r\n            tv[0] = x;\r\n            tv[1] = y;\r\n            tv[2] = x + width, tv[3] = y, tv[4] = x + width, tv[5] = y + height, tv[6] = x, tv[7] = y + height;\r\n            this._drawTriUseAbsMatrix = true;\r\n            var tuv = this._tempUV;\r\n            tuv[0] = uv[0];\r\n            tuv[1] = uv[1];\r\n            tuv[2] = uv[2];\r\n            tuv[3] = uv[3];\r\n            tuv[4] = uv[4];\r\n            tuv[5] = uv[5];\r\n            tuv[6] = uv[6];\r\n            tuv[7] = uv[7];\r\n            this.drawTriangles(tex, 0, 0, tv, tuv, this._drawTexToDrawTri_Index, m, alpha, null, null);\r\n            this._drawTriUseAbsMatrix = false;\r\n            return true;\r\n        }\r\n        var mesh = this._mesh;\r\n        var submit = this._curSubmit;\r\n        var ops = lastRender ? this._charSubmitCache.getPos() : this._transedPoints;\r\n        this.transformQuad(x, y, width || tex.width, height || tex.height, this._italicDeg, m || this._curMat, ops);\r\n        if (this.drawTexAlign) {\r\n            var round = Math.round;\r\n            ops[0] = round(ops[0]);\r\n            ops[1] = round(ops[1]);\r\n            ops[2] = round(ops[2]);\r\n            ops[3] = round(ops[3]);\r\n            ops[4] = round(ops[4]);\r\n            ops[5] = round(ops[5]);\r\n            ops[6] = round(ops[6]);\r\n            ops[7] = round(ops[7]);\r\n            this.drawTexAlign = false;\r\n        }\r\n        var rgba = this._mixRGBandAlpha(0xffffffff, this._shader2D.ALPHA * alpha);\r\n        if (lastRender) {\r\n            this._charSubmitCache.add(this, tex, imgid, ops, uv, rgba);\r\n            return true;\r\n        }\r\n        this._drawCount++;\r\n        var sameKey = imgid >= 0 && preKey.submitType === SubmitBase.KEY_DRAWTEXTURE && preKey.other === imgid;\r\n        sameKey && (sameKey = sameKey && this.isSameClipInfo(submit));\r\n        this._lastTex = tex;\r\n        if (mesh.vertNum + 4 > Context._MAXVERTNUM) {\r\n            mesh = this._mesh = MeshQuadTexture.getAMesh(this.isMain);\r\n            this.meshlist.push(mesh);\r\n            sameKey = false;\r\n        }\r\n        {\r\n            mesh.addQuad(ops, uv, rgba, true);\r\n            if (!sameKey) {\r\n                this._submits[this._submits._length++] = this._curSubmit = submit = SubmitTexture.create(this, mesh, Value2D.create(ShaderDefines2D.TEXTURE2D, 0));\r\n                submit.shaderValue.textureHost = tex;\r\n                submit._key.other = imgid;\r\n                this._copyClipInfo(submit, this._globalClipMatrix);\r\n            }\r\n            submit._numEle += 6;\r\n            mesh.indexNum += 6;\r\n            mesh.vertNum += 4;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    transform4Points(a, m, out) {\r\n        var tx = m.tx;\r\n        var ty = m.ty;\r\n        var ma = m.a;\r\n        var mb = m.b;\r\n        var mc = m.c;\r\n        var md = m.d;\r\n        var a0 = a[0];\r\n        var a1 = a[1];\r\n        var a2 = a[2];\r\n        var a3 = a[3];\r\n        var a4 = a[4];\r\n        var a5 = a[5];\r\n        var a6 = a[6];\r\n        var a7 = a[7];\r\n        if (m._bTransform) {\r\n            out[0] = a0 * ma + a1 * mc + tx;\r\n            out[1] = a0 * mb + a1 * md + ty;\r\n            out[2] = a2 * ma + a3 * mc + tx;\r\n            out[3] = a2 * mb + a3 * md + ty;\r\n            out[4] = a4 * ma + a5 * mc + tx;\r\n            out[5] = a4 * mb + a5 * md + ty;\r\n            out[6] = a6 * ma + a7 * mc + tx;\r\n            out[7] = a6 * mb + a7 * md + ty;\r\n        }\r\n        else {\r\n            out[0] = a0 + tx;\r\n            out[1] = a1 + ty;\r\n            out[2] = a2 + tx;\r\n            out[3] = a3 + ty;\r\n            out[4] = a4 + tx;\r\n            out[5] = a5 + ty;\r\n            out[6] = a6 + tx;\r\n            out[7] = a7 + ty;\r\n        }\r\n    }\r\n    clipedOff(pt) {\r\n        if (this._clipRect.width <= 0 || this._clipRect.height <= 0)\r\n            return true;\r\n        return false;\r\n    }\r\n    transformQuad(x, y, w, h, italicDeg, m, out) {\r\n        var xoff = 0;\r\n        if (italicDeg != 0) {\r\n            xoff = Math.tan(italicDeg * Math.PI / 180) * h;\r\n        }\r\n        var maxx = x + w;\r\n        var maxy = y + h;\r\n        var tx = m.tx;\r\n        var ty = m.ty;\r\n        var ma = m.a;\r\n        var mb = m.b;\r\n        var mc = m.c;\r\n        var md = m.d;\r\n        var a0 = x + xoff;\r\n        var a1 = y;\r\n        var a2 = maxx + xoff;\r\n        var a3 = y;\r\n        var a4 = maxx;\r\n        var a5 = maxy;\r\n        var a6 = x;\r\n        var a7 = maxy;\r\n        if (m._bTransform) {\r\n            out[0] = a0 * ma + a1 * mc + tx;\r\n            out[1] = a0 * mb + a1 * md + ty;\r\n            out[2] = a2 * ma + a3 * mc + tx;\r\n            out[3] = a2 * mb + a3 * md + ty;\r\n            out[4] = a4 * ma + a5 * mc + tx;\r\n            out[5] = a4 * mb + a5 * md + ty;\r\n            out[6] = a6 * ma + a7 * mc + tx;\r\n            out[7] = a6 * mb + a7 * md + ty;\r\n        }\r\n        else {\r\n            out[0] = a0 + tx;\r\n            out[1] = a1 + ty;\r\n            out[2] = a2 + tx;\r\n            out[3] = a3 + ty;\r\n            out[4] = a4 + tx;\r\n            out[5] = a5 + ty;\r\n            out[6] = a6 + tx;\r\n            out[7] = a7 + ty;\r\n        }\r\n    }\r\n    pushRT() {\r\n        this.addRenderObject(SubmitCMD.create(null, RenderTexture2D.pushRT, this));\r\n    }\r\n    popRT() {\r\n        this.addRenderObject(SubmitCMD.create(null, RenderTexture2D.popRT, this));\r\n        this.breakNextMerge();\r\n    }\r\n    useRT(rt) {\r\n        function _use(rt) {\r\n            if (!rt) {\r\n                throw 'error useRT';\r\n            }\r\n            else {\r\n                rt.start();\r\n                rt.clear(0, 0, 0, 0);\r\n            }\r\n        }\r\n        this.addRenderObject(SubmitCMD.create([rt], _use, this));\r\n        this.breakNextMerge();\r\n    }\r\n    RTRestore(rt) {\r\n        function _restore(rt) {\r\n            rt.restore();\r\n        }\r\n        this.addRenderObject(SubmitCMD.create([rt], _restore, this));\r\n        this.breakNextMerge();\r\n    }\r\n    breakNextMerge() {\r\n        this._curSubmit = SubmitBase.RENDERBASE;\r\n    }\r\n    _repaintSprite() {\r\n        this.sprite && this.sprite.repaint();\r\n    }\r\n    drawTextureWithTransform(tex, x, y, width, height, transform, tx, ty, alpha, blendMode, colorfilter = null, uv) {\r\n        var oldcomp;\r\n        var curMat = this._curMat;\r\n        if (blendMode) {\r\n            oldcomp = this.globalCompositeOperation;\r\n            this.globalCompositeOperation = blendMode;\r\n        }\r\n        var oldColorFilter = this._colorFiler;\r\n        if (colorfilter) {\r\n            this.setColorFilter(colorfilter);\r\n        }\r\n        if (!transform) {\r\n            this._drawTextureM(tex, x + tx, y + ty, width, height, curMat, alpha, uv);\r\n            if (blendMode) {\r\n                this.globalCompositeOperation = oldcomp;\r\n            }\r\n            if (colorfilter) {\r\n                this.setColorFilter(oldColorFilter);\r\n            }\r\n            return;\r\n        }\r\n        var tmpMat = this._tmpMatrix;\r\n        tmpMat.a = transform.a;\r\n        tmpMat.b = transform.b;\r\n        tmpMat.c = transform.c;\r\n        tmpMat.d = transform.d;\r\n        tmpMat.tx = transform.tx + tx;\r\n        tmpMat.ty = transform.ty + ty;\r\n        tmpMat._bTransform = transform._bTransform;\r\n        if (transform && curMat._bTransform) {\r\n            Matrix.mul(tmpMat, curMat, tmpMat);\r\n            transform = tmpMat;\r\n            transform._bTransform = true;\r\n        }\r\n        else {\r\n            tmpMat.tx += curMat.tx;\r\n            tmpMat.ty += curMat.ty;\r\n            transform = tmpMat;\r\n        }\r\n        this._drawTextureM(tex, x, y, width, height, transform, alpha, uv);\r\n        if (blendMode) {\r\n            this.globalCompositeOperation = oldcomp;\r\n        }\r\n        if (colorfilter) {\r\n            this.setColorFilter(oldColorFilter);\r\n        }\r\n    }\r\n    _flushToTarget(context, target) {\r\n        RenderState2D.worldScissorTest = false;\r\n        var gl = LayaGL.instance;\r\n        gl.disable(gl.SCISSOR_TEST);\r\n        var preAlpha = RenderState2D.worldAlpha;\r\n        var preMatrix4 = RenderState2D.worldMatrix4;\r\n        var preMatrix = RenderState2D.worldMatrix;\r\n        var preShaderDefines = RenderState2D.worldShaderDefines;\r\n        RenderState2D.worldMatrix = Matrix.EMPTY;\r\n        RenderState2D.restoreTempArray();\r\n        RenderState2D.worldMatrix4 = RenderState2D.TEMPMAT4_ARRAY;\r\n        RenderState2D.worldAlpha = 1;\r\n        BaseShader.activeShader = null;\r\n        target.start();\r\n        if (context._submits._length > 0)\r\n            target.clear(0, 0, 0, 0);\r\n        context._curSubmit = SubmitBase.RENDERBASE;\r\n        context.flush();\r\n        context.clear();\r\n        target.restore();\r\n        context._curSubmit = SubmitBase.RENDERBASE;\r\n        BaseShader.activeShader = null;\r\n        RenderState2D.worldAlpha = preAlpha;\r\n        RenderState2D.worldMatrix4 = preMatrix4;\r\n        RenderState2D.worldMatrix = preMatrix;\r\n    }\r\n    drawCanvas(canvas, x, y, width, height) {\r\n        if (!canvas)\r\n            return;\r\n        var src = canvas.context;\r\n        var submit;\r\n        if (src._targets) {\r\n            if (src._submits._length > 0) {\r\n                submit = SubmitCMD.create([src, src._targets], this._flushToTarget, this);\r\n                this._submits[this._submits._length++] = submit;\r\n            }\r\n            this._drawRenderTexture(src._targets, x, y, width, height, null, 1.0, RenderTexture2D.flipyuv);\r\n            this._curSubmit = SubmitBase.RENDERBASE;\r\n        }\r\n        else {\r\n            var canv = canvas;\r\n            if (canv.touches) {\r\n                canv.touches.forEach(function (v) { v.touch(); });\r\n            }\r\n            submit = SubmitCanvas.create(canvas, this._shader2D.ALPHA, this._shader2D.filters);\r\n            this._submits[this._submits._length++] = submit;\r\n            submit._key.clear();\r\n            var mat = submit._matrix;\r\n            this._curMat.copyTo(mat);\r\n            var tx = mat.tx, ty = mat.ty;\r\n            mat.tx = mat.ty = 0;\r\n            mat.transformPoint(Point.TEMP.setTo(x, y));\r\n            mat.translate(Point.TEMP.x + tx, Point.TEMP.y + ty);\r\n            Matrix.mul(canv.invMat, mat, mat);\r\n            this._curSubmit = SubmitBase.RENDERBASE;\r\n        }\r\n    }\r\n    drawTarget(rt, x, y, width, height, m, shaderValue, uv = null, blend = -1) {\r\n        this._drawCount++;\r\n        var rgba = 0xffffffff;\r\n        if (this._mesh.vertNum + 4 > Context._MAXVERTNUM) {\r\n            this._mesh = MeshQuadTexture.getAMesh(this.isMain);\r\n            this.meshlist.push(this._mesh);\r\n        }\r\n        this.transformQuad(x, y, width, height, 0, m || this._curMat, this._transedPoints);\r\n        if (!this.clipedOff(this._transedPoints)) {\r\n            this._mesh.addQuad(this._transedPoints, uv || Texture.DEF_UV, 0xffffffff, true);\r\n            var submit = this._curSubmit = SubmitTarget.create(this, this._mesh, shaderValue, rt);\r\n            submit.blendType = (blend == -1) ? this._nBlendType : blend;\r\n            this._copyClipInfo(submit, this._globalClipMatrix);\r\n            submit._numEle = 6;\r\n            this._mesh.indexNum += 6;\r\n            this._mesh.vertNum += 4;\r\n            this._submits[this._submits._length++] = submit;\r\n            this._curSubmit = SubmitBase.RENDERBASE;\r\n            return true;\r\n        }\r\n        this._curSubmit = SubmitBase.RENDERBASE;\r\n        return false;\r\n    }\r\n    drawTriangles(tex, x, y, vertices, uvs, indices, matrix, alpha, color, blendMode, colorNum = 0xffffffff) {\r\n        if (!tex._getSource()) {\r\n            if (this.sprite) {\r\n                ILaya.systemTimer.callLater(this, this._repaintSprite);\r\n            }\r\n            return;\r\n        }\r\n        var oldcomp = null;\r\n        if (blendMode) {\r\n            oldcomp = this.globalCompositeOperation;\r\n            this.globalCompositeOperation = blendMode;\r\n        }\r\n        this._drawCount++;\r\n        var tmpMat = this._tmpMatrix;\r\n        var triMesh = this._triangleMesh;\r\n        var oldColorFilter = null;\r\n        var needRestorFilter = false;\r\n        if (color) {\r\n            oldColorFilter = this._colorFiler;\r\n            this._colorFiler = color;\r\n            this._curSubmit = SubmitBase.RENDERBASE;\r\n            needRestorFilter = oldColorFilter != color;\r\n        }\r\n        var webGLImg = tex.bitmap;\r\n        var preKey = this._curSubmit._key;\r\n        var sameKey = preKey.submitType === SubmitBase.KEY_TRIANGLES && preKey.other === webGLImg.id && preKey.blendShader == this._nBlendType;\r\n        if (triMesh.vertNum + vertices.length / 2 > Context._MAXVERTNUM) {\r\n            triMesh = this._triangleMesh = MeshTexture.getAMesh(this.isMain);\r\n            this.meshlist.push(triMesh);\r\n            sameKey = false;\r\n        }\r\n        if (!sameKey) {\r\n            var submit = this._curSubmit = SubmitTexture.create(this, triMesh, Value2D.create(ShaderDefines2D.TEXTURE2D, 0));\r\n            submit.shaderValue.textureHost = tex;\r\n            submit._renderType = SubmitBase.TYPE_TEXTURE;\r\n            submit._key.submitType = SubmitBase.KEY_TRIANGLES;\r\n            submit._key.other = webGLImg.id;\r\n            this._copyClipInfo(submit, this._globalClipMatrix);\r\n            this._submits[this._submits._length++] = submit;\r\n        }\r\n        var rgba = this._mixRGBandAlpha(colorNum, this._shader2D.ALPHA * alpha);\r\n        if (!this._drawTriUseAbsMatrix) {\r\n            if (!matrix) {\r\n                tmpMat.a = 1;\r\n                tmpMat.b = 0;\r\n                tmpMat.c = 0;\r\n                tmpMat.d = 1;\r\n                tmpMat.tx = x;\r\n                tmpMat.ty = y;\r\n            }\r\n            else {\r\n                tmpMat.a = matrix.a;\r\n                tmpMat.b = matrix.b;\r\n                tmpMat.c = matrix.c;\r\n                tmpMat.d = matrix.d;\r\n                tmpMat.tx = matrix.tx + x;\r\n                tmpMat.ty = matrix.ty + y;\r\n            }\r\n            Matrix.mul(tmpMat, this._curMat, tmpMat);\r\n            triMesh.addData(vertices, uvs, indices, tmpMat || this._curMat, rgba);\r\n        }\r\n        else {\r\n            triMesh.addData(vertices, uvs, indices, matrix, rgba);\r\n        }\r\n        this._curSubmit._numEle += indices.length;\r\n        if (needRestorFilter) {\r\n            this._colorFiler = oldColorFilter;\r\n            this._curSubmit = SubmitBase.RENDERBASE;\r\n        }\r\n        if (blendMode) {\r\n            this.globalCompositeOperation = oldcomp;\r\n        }\r\n    }\r\n    transform(a, b, c, d, tx, ty) {\r\n        SaveTransform.save(this);\r\n        Matrix.mul(Matrix.TEMP.setTo(a, b, c, d, tx, ty), this._curMat, this._curMat);\r\n        this._curMat._checkTransform();\r\n    }\r\n    _transformByMatrix(matrix, tx, ty) {\r\n        matrix.setTranslate(tx, ty);\r\n        Matrix.mul(matrix, this._curMat, this._curMat);\r\n        matrix.setTranslate(0, 0);\r\n        this._curMat._bTransform = true;\r\n    }\r\n    setTransformByMatrix(value) {\r\n        value.copyTo(this._curMat);\r\n    }\r\n    rotate(angle) {\r\n        SaveTransform.save(this);\r\n        this._curMat.rotateEx(angle);\r\n    }\r\n    scale(scaleX, scaleY) {\r\n        SaveTransform.save(this);\r\n        this._curMat.scaleEx(scaleX, scaleY);\r\n    }\r\n    clipRect(x, y, width, height) {\r\n        SaveClipRect.save(this);\r\n        if (this._clipRect == Context.MAXCLIPRECT) {\r\n            this._clipRect = new Rectangle(x, y, width, height);\r\n        }\r\n        else {\r\n            this._clipRect.width = width;\r\n            this._clipRect.height = height;\r\n            this._clipRect.x = x;\r\n            this._clipRect.y = y;\r\n        }\r\n        this._clipID_Gen++;\r\n        this._clipID_Gen %= 10000;\r\n        this._clipInfoID = this._clipID_Gen;\r\n        var cm = this._globalClipMatrix;\r\n        var minx = cm.tx;\r\n        var miny = cm.ty;\r\n        var maxx = minx + cm.a;\r\n        var maxy = miny + cm.d;\r\n        if (this._clipRect.width >= Context._MAXSIZE) {\r\n            cm.a = cm.d = Context._MAXSIZE;\r\n            cm.b = cm.c = cm.tx = cm.ty = 0;\r\n        }\r\n        else {\r\n            if (this._curMat._bTransform) {\r\n                cm.tx = this._clipRect.x * this._curMat.a + this._clipRect.y * this._curMat.c + this._curMat.tx;\r\n                cm.ty = this._clipRect.x * this._curMat.b + this._clipRect.y * this._curMat.d + this._curMat.ty;\r\n                cm.a = this._clipRect.width * this._curMat.a;\r\n                cm.b = this._clipRect.width * this._curMat.b;\r\n                cm.c = this._clipRect.height * this._curMat.c;\r\n                cm.d = this._clipRect.height * this._curMat.d;\r\n            }\r\n            else {\r\n                cm.tx = this._clipRect.x + this._curMat.tx;\r\n                cm.ty = this._clipRect.y + this._curMat.ty;\r\n                cm.a = this._clipRect.width;\r\n                cm.b = cm.c = 0;\r\n                cm.d = this._clipRect.height;\r\n            }\r\n            if (this._incache) {\r\n                this._clipInCache = true;\r\n            }\r\n        }\r\n        if (cm.a > 0 && cm.d > 0) {\r\n            var cmaxx = cm.tx + cm.a;\r\n            var cmaxy = cm.ty + cm.d;\r\n            if (cmaxx <= minx || cmaxy <= miny || cm.tx >= maxx || cm.ty >= maxy) {\r\n                cm.a = -0.1;\r\n                cm.d = -0.1;\r\n            }\r\n            else {\r\n                if (cm.tx < minx) {\r\n                    cm.a -= (minx - cm.tx);\r\n                    cm.tx = minx;\r\n                }\r\n                if (cmaxx > maxx) {\r\n                    cm.a -= (cmaxx - maxx);\r\n                }\r\n                if (cm.ty < miny) {\r\n                    cm.d -= (miny - cm.ty);\r\n                    cm.ty = miny;\r\n                }\r\n                if (cmaxy > maxy) {\r\n                    cm.d -= (cmaxy - maxy);\r\n                }\r\n                if (cm.a <= 0)\r\n                    cm.a = -0.1;\r\n                if (cm.d <= 0)\r\n                    cm.d = -0.1;\r\n            }\r\n        }\r\n    }\r\n    drawMesh(x, y, ib, vb, numElement, mat, shader, shaderValues, startIndex = 0) {\r\n        ;\r\n    }\r\n    addRenderObject(o) {\r\n        this._submits[this._submits._length++] = o;\r\n    }\r\n    submitElement(start, end) {\r\n        var mainCtx = this.isMain;\r\n        var renderList = this._submits;\r\n        var ret = renderList._length;\r\n        end < 0 && (end = renderList._length);\r\n        var submit = SubmitBase.RENDERBASE;\r\n        while (start < end) {\r\n            this._renderNextSubmitIndex = start + 1;\r\n            if (renderList[start] === SubmitBase.RENDERBASE) {\r\n                start++;\r\n                continue;\r\n            }\r\n            SubmitBase.preRender = submit;\r\n            submit = renderList[start];\r\n            start += submit.renderSubmit();\r\n        }\r\n        return ret;\r\n    }\r\n    flush() {\r\n        this._clipID_Gen = 0;\r\n        var ret = this.submitElement(0, this._submits._length);\r\n        this._path && this._path.reset();\r\n        SkinMeshBuffer.instance && SkinMeshBuffer.getInstance().reset();\r\n        this._curSubmit = SubmitBase.RENDERBASE;\r\n        for (var i = 0, sz = this.meshlist.length; i < sz; i++) {\r\n            var curm = this.meshlist[i];\r\n            curm.canReuse ? (curm.releaseMesh()) : (curm.destroy());\r\n        }\r\n        this.meshlist.length = 0;\r\n        this._mesh = MeshQuadTexture.getAMesh(this.isMain);\r\n        this._pathMesh = MeshVG.getAMesh(this.isMain);\r\n        this._triangleMesh = MeshTexture.getAMesh(this.isMain);\r\n        this.meshlist.push(this._mesh, this._pathMesh, this._triangleMesh);\r\n        this._flushCnt++;\r\n        if (this._flushCnt % 60 == 0 && this.isMain) {\r\n            if (TextRender.textRenderInst) {\r\n                TextRender.textRenderInst.GC();\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    beginPath(convex = false) {\r\n        var tPath = this._getPath();\r\n        tPath.beginPath(convex);\r\n    }\r\n    closePath() {\r\n        this._path.closePath();\r\n    }\r\n    addPath(points, close, convex, dx, dy) {\r\n        var ci = 0;\r\n        for (var i = 0, sz = points.length / 2; i < sz; i++) {\r\n            var x1 = points[ci] + dx, y1 = points[ci + 1] + dy;\r\n            points[ci] = x1;\r\n            points[ci + 1] = y1;\r\n            ci += 2;\r\n        }\r\n        this._getPath().push(points, convex);\r\n    }\r\n    fill() {\r\n        var m = this._curMat;\r\n        var tPath = this._getPath();\r\n        var submit = this._curSubmit;\r\n        var sameKey = (submit._key.submitType === SubmitBase.KEY_VG && submit._key.blendShader === this._nBlendType);\r\n        sameKey && (sameKey = sameKey && this.isSameClipInfo(submit));\r\n        if (!sameKey) {\r\n            this._curSubmit = this.addVGSubmit(this._pathMesh);\r\n        }\r\n        var rgba = this.mixRGBandAlpha(this.fillStyle.toInt());\r\n        var curEleNum = 0;\r\n        var idx;\r\n        for (var i = 0, sz = tPath.paths.length; i < sz; i++) {\r\n            var p = tPath.paths[i];\r\n            var vertNum = p.path.length / 2;\r\n            if (vertNum < 3 || (vertNum == 3 && !p.convex))\r\n                continue;\r\n            var cpath = p.path.concat();\r\n            var pi = 0;\r\n            var xp, yp;\r\n            var _x, _y;\r\n            if (m._bTransform) {\r\n                for (pi = 0; pi < vertNum; pi++) {\r\n                    xp = pi << 1;\r\n                    yp = xp + 1;\r\n                    _x = cpath[xp];\r\n                    _y = cpath[yp];\r\n                    cpath[xp] = m.a * _x + m.c * _y + m.tx;\r\n                    cpath[yp] = m.b * _x + m.d * _y + m.ty;\r\n                }\r\n            }\r\n            else {\r\n                for (pi = 0; pi < vertNum; pi++) {\r\n                    xp = pi << 1;\r\n                    yp = xp + 1;\r\n                    _x = cpath[xp];\r\n                    _y = cpath[yp];\r\n                    cpath[xp] = _x + m.tx;\r\n                    cpath[yp] = _y + m.ty;\r\n                }\r\n            }\r\n            if (this._pathMesh.vertNum + vertNum > Context._MAXVERTNUM) {\r\n                this._curSubmit._numEle += curEleNum;\r\n                curEleNum = 0;\r\n                this._pathMesh = MeshVG.getAMesh(this.isMain);\r\n                this._curSubmit = this.addVGSubmit(this._pathMesh);\r\n            }\r\n            var curvert = this._pathMesh.vertNum;\r\n            if (p.convex) {\r\n                var faceNum = vertNum - 2;\r\n                idx = new Array(faceNum * 3);\r\n                var idxpos = 0;\r\n                for (var fi = 0; fi < faceNum; fi++) {\r\n                    idx[idxpos++] = curvert;\r\n                    idx[idxpos++] = fi + 1 + curvert;\r\n                    idx[idxpos++] = fi + 2 + curvert;\r\n                }\r\n            }\r\n            else {\r\n                idx = Earcut.earcut(cpath, null, 2);\r\n                if (curvert > 0) {\r\n                    for (var ii = 0; ii < idx.length; ii++) {\r\n                        idx[ii] += curvert;\r\n                    }\r\n                }\r\n            }\r\n            this._pathMesh.addVertAndIBToMesh(this, cpath, rgba, idx);\r\n            curEleNum += idx.length;\r\n        }\r\n        this._curSubmit._numEle += curEleNum;\r\n    }\r\n    addVGSubmit(mesh) {\r\n        var submit = Submit.createShape(this, mesh, 0, Value2D.create(ShaderDefines2D.PRIMITIVE, 0));\r\n        submit._key.submitType = SubmitBase.KEY_VG;\r\n        this._submits[this._submits._length++] = submit;\r\n        this._copyClipInfo(submit, this._globalClipMatrix);\r\n        return submit;\r\n    }\r\n    stroke() {\r\n        if (this.lineWidth > 0) {\r\n            var rgba = this.mixRGBandAlpha(this.strokeStyle._color.numColor);\r\n            var tPath = this._getPath();\r\n            var submit = this._curSubmit;\r\n            var sameKey = (submit._key.submitType === SubmitBase.KEY_VG && submit._key.blendShader === this._nBlendType);\r\n            sameKey && (sameKey = sameKey && this.isSameClipInfo(submit));\r\n            if (!sameKey) {\r\n                this._curSubmit = this.addVGSubmit(this._pathMesh);\r\n            }\r\n            var curEleNum = 0;\r\n            for (var i = 0, sz = tPath.paths.length; i < sz; i++) {\r\n                var p = tPath.paths[i];\r\n                if (p.path.length <= 0)\r\n                    continue;\r\n                var idx = [];\r\n                var vertex = [];\r\n                var maxVertexNum = p.path.length * 2;\r\n                if (maxVertexNum < 2)\r\n                    continue;\r\n                if (this._pathMesh.vertNum + maxVertexNum > Context._MAXVERTNUM) {\r\n                    this._curSubmit._numEle += curEleNum;\r\n                    curEleNum = 0;\r\n                    this._pathMesh = MeshVG.getAMesh(this.isMain);\r\n                    this.meshlist.push(this._pathMesh);\r\n                    this._curSubmit = this.addVGSubmit(this._pathMesh);\r\n                }\r\n                BasePoly.createLine2(p.path, idx, this.lineWidth, this._pathMesh.vertNum, vertex, p.loop);\r\n                var ptnum = vertex.length / 2;\r\n                var m = this._curMat;\r\n                var pi = 0;\r\n                var xp, yp;\r\n                var _x, _y;\r\n                if (m._bTransform) {\r\n                    for (pi = 0; pi < ptnum; pi++) {\r\n                        xp = pi << 1;\r\n                        yp = xp + 1;\r\n                        _x = vertex[xp];\r\n                        _y = vertex[yp];\r\n                        vertex[xp] = m.a * _x + m.c * _y + m.tx;\r\n                        vertex[yp] = m.b * _x + m.d * _y + m.ty;\r\n                    }\r\n                }\r\n                else {\r\n                    for (pi = 0; pi < ptnum; pi++) {\r\n                        xp = pi << 1;\r\n                        yp = xp + 1;\r\n                        _x = vertex[xp];\r\n                        _y = vertex[yp];\r\n                        vertex[xp] = _x + m.tx;\r\n                        vertex[yp] = _y + m.ty;\r\n                    }\r\n                }\r\n                this._pathMesh.addVertAndIBToMesh(this, vertex, rgba, idx);\r\n                curEleNum += idx.length;\r\n            }\r\n            this._curSubmit._numEle += curEleNum;\r\n        }\r\n    }\r\n    moveTo(x, y) {\r\n        var tPath = this._getPath();\r\n        tPath.newPath();\r\n        tPath._lastOriX = x;\r\n        tPath._lastOriY = y;\r\n        tPath.addPoint(x, y);\r\n    }\r\n    lineTo(x, y) {\r\n        var tPath = this._getPath();\r\n        if (Math.abs(x - tPath._lastOriX) < 1e-3 && Math.abs(y - tPath._lastOriY) < 1e-3)\r\n            return;\r\n        tPath._lastOriX = x;\r\n        tPath._lastOriY = y;\r\n        tPath.addPoint(x, y);\r\n    }\r\n    arcTo(x1, y1, x2, y2, r) {\r\n        var i = 0;\r\n        var x = 0, y = 0;\r\n        var dx = this._path._lastOriX - x1;\r\n        var dy = this._path._lastOriY - y1;\r\n        var len1 = Math.sqrt(dx * dx + dy * dy);\r\n        if (len1 <= 0.000001) {\r\n            return;\r\n        }\r\n        var ndx = dx / len1;\r\n        var ndy = dy / len1;\r\n        var dx2 = x2 - x1;\r\n        var dy2 = y2 - y1;\r\n        var len22 = dx2 * dx2 + dy2 * dy2;\r\n        var len2 = Math.sqrt(len22);\r\n        if (len2 <= 0.000001) {\r\n            return;\r\n        }\r\n        var ndx2 = dx2 / len2;\r\n        var ndy2 = dy2 / len2;\r\n        var odx = ndx + ndx2;\r\n        var ody = ndy + ndy2;\r\n        var olen = Math.sqrt(odx * odx + ody * ody);\r\n        if (olen <= 0.000001) {\r\n            return;\r\n        }\r\n        var nOdx = odx / olen;\r\n        var nOdy = ody / olen;\r\n        var alpha = Math.acos(nOdx * ndx + nOdy * ndy);\r\n        var halfAng = Math.PI / 2 - alpha;\r\n        len1 = r / Math.tan(halfAng);\r\n        var ptx1 = len1 * ndx + x1;\r\n        var pty1 = len1 * ndy + y1;\r\n        var orilen = Math.sqrt(len1 * len1 + r * r);\r\n        var orix = x1 + nOdx * orilen;\r\n        var oriy = y1 + nOdy * orilen;\r\n        var ptx2 = len1 * ndx2 + x1;\r\n        var pty2 = len1 * ndy2 + y1;\r\n        var dir = ndx * ndy2 - ndy * ndx2;\r\n        var fChgAng = 0;\r\n        var sinx = 0.0;\r\n        var cosx = 0.0;\r\n        if (dir >= 0) {\r\n            fChgAng = halfAng * 2;\r\n            var fda = fChgAng / Context.SEGNUM;\r\n            sinx = Math.sin(fda);\r\n            cosx = Math.cos(fda);\r\n        }\r\n        else {\r\n            fChgAng = -halfAng * 2;\r\n            fda = fChgAng / Context.SEGNUM;\r\n            sinx = Math.sin(fda);\r\n            cosx = Math.cos(fda);\r\n        }\r\n        var lastx = this._path._lastOriX, lasty = this._path._lastOriY;\r\n        var _x1 = ptx1, _y1 = pty1;\r\n        if (Math.abs(_x1 - this._path._lastOriX) > 0.1 || Math.abs(_y1 - this._path._lastOriY) > 0.1) {\r\n            x = _x1;\r\n            y = _y1;\r\n            lastx = _x1;\r\n            lasty = _y1;\r\n            this._path._lastOriX = x;\r\n            this._path._lastOriY = y;\r\n            this._path.addPoint(x, y);\r\n        }\r\n        var cvx = ptx1 - orix;\r\n        var cvy = pty1 - oriy;\r\n        var tx = 0.0;\r\n        var ty = 0.0;\r\n        for (i = 0; i < Context.SEGNUM; i++) {\r\n            var cx = cvx * cosx + cvy * sinx;\r\n            var cy = -cvx * sinx + cvy * cosx;\r\n            x = cx + orix;\r\n            y = cy + oriy;\r\n            if (Math.abs(lastx - x) > 0.1 || Math.abs(lasty - y) > 0.1) {\r\n                this._path._lastOriX = x;\r\n                this._path._lastOriY = y;\r\n                this._path.addPoint(x, y);\r\n                lastx = x;\r\n                lasty = y;\r\n            }\r\n            cvx = cx;\r\n            cvy = cy;\r\n        }\r\n    }\r\n    arc(cx, cy, r, startAngle, endAngle, counterclockwise = false, b = true) {\r\n        var a = 0, da = 0, hda = 0, kappa = 0;\r\n        var dx = 0, dy = 0, x = 0, y = 0, tanx = 0, tany = 0;\r\n        var px = 0, py = 0, ptanx = 0, ptany = 0;\r\n        var i, ndivs, nvals;\r\n        da = endAngle - startAngle;\r\n        if (!counterclockwise) {\r\n            if (Math.abs(da) >= Math.PI * 2) {\r\n                da = Math.PI * 2;\r\n            }\r\n            else {\r\n                while (da < 0.0) {\r\n                    da += Math.PI * 2;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (Math.abs(da) >= Math.PI * 2) {\r\n                da = -Math.PI * 2;\r\n            }\r\n            else {\r\n                while (da > 0.0) {\r\n                    da -= Math.PI * 2;\r\n                }\r\n            }\r\n        }\r\n        var sx = this.getMatScaleX();\r\n        var sy = this.getMatScaleY();\r\n        var sr = r * (sx > sy ? sx : sy);\r\n        var cl = 2 * Math.PI * sr;\r\n        ndivs = (Math.max(cl / 10, 10)) | 0;\r\n        hda = (da / ndivs) / 2.0;\r\n        kappa = Math.abs(4 / 3 * (1 - Math.cos(hda)) / Math.sin(hda));\r\n        if (counterclockwise)\r\n            kappa = -kappa;\r\n        nvals = 0;\r\n        var tPath = this._getPath();\r\n        var _x1, _y1;\r\n        for (i = 0; i <= ndivs; i++) {\r\n            a = startAngle + da * (i / ndivs);\r\n            dx = Math.cos(a);\r\n            dy = Math.sin(a);\r\n            x = cx + dx * r;\r\n            y = cy + dy * r;\r\n            if (x != this._path._lastOriX || y != this._path._lastOriY) {\r\n                tPath.addPoint(x, y);\r\n            }\r\n        }\r\n        dx = Math.cos(endAngle);\r\n        dy = Math.sin(endAngle);\r\n        x = cx + dx * r;\r\n        y = cy + dy * r;\r\n        if (x != this._path._lastOriX || y != this._path._lastOriY) {\r\n            tPath.addPoint(x, y);\r\n        }\r\n    }\r\n    quadraticCurveTo(cpx, cpy, x, y) {\r\n        var tBezier = Bezier.I;\r\n        var tResultArray = [];\r\n        var tArray = tBezier.getBezierPoints([this._path._lastOriX, this._path._lastOriY, cpx, cpy, x, y], 30, 2);\r\n        for (var i = 0, n = tArray.length / 2; i < n; i++) {\r\n            this.lineTo(tArray[i * 2], tArray[i * 2 + 1]);\r\n        }\r\n        this.lineTo(x, y);\r\n    }\r\n    mixRGBandAlpha(color) {\r\n        return this._mixRGBandAlpha(color, this._shader2D.ALPHA);\r\n    }\r\n    _mixRGBandAlpha(color, alpha) {\r\n        if (alpha >= 1) {\r\n            return color;\r\n        }\r\n        var a = ((color & 0xff000000) >>> 24);\r\n        if (a != 0) {\r\n            a *= alpha;\r\n        }\r\n        else {\r\n            a = alpha * 255;\r\n        }\r\n        return (color & 0x00ffffff) | (a << 24);\r\n    }\r\n    strokeRect(x, y, width, height, parameterLineWidth) {\r\n        var tW = parameterLineWidth * 0.5;\r\n        if (this.lineWidth > 0) {\r\n            var rgba = this.mixRGBandAlpha(this.strokeStyle._color.numColor);\r\n            var hw = this.lineWidth / 2;\r\n            this._fillRect(x - hw, y - hw, width + this.lineWidth, this.lineWidth, rgba);\r\n            this._fillRect(x - hw, y - hw + height, width + this.lineWidth, this.lineWidth, rgba);\r\n            this._fillRect(x - hw, y + hw, this.lineWidth, height - this.lineWidth, rgba);\r\n            this._fillRect(x - hw + width, y + hw, this.lineWidth, height - this.lineWidth, rgba);\r\n        }\r\n    }\r\n    clip() {\r\n    }\r\n    drawParticle(x, y, pt) {\r\n        pt.x = x;\r\n        pt.y = y;\r\n        this._submits[this._submits._length++] = pt;\r\n    }\r\n    _getPath() {\r\n        return this._path || (this._path = new Path());\r\n    }\r\n    get canvas() {\r\n        return this._canvas;\r\n    }\r\n    _fillTexture_h(tex, imgid, uv, oriw, orih, x, y, w) {\r\n        if (oriw <= 0)\r\n            console.error('_fillTexture_h error: oriw must>0');\r\n        var stx = x;\r\n        var num = Math.floor(w / oriw);\r\n        var left = w % oriw;\r\n        for (var i = 0; i < num; i++) {\r\n            this._inner_drawTexture(tex, imgid, stx, y, oriw, orih, this._curMat, uv, 1, false);\r\n            stx += oriw;\r\n        }\r\n        if (left > 0) {\r\n            var du = uv[2] - uv[0];\r\n            var uvr = uv[0] + du * (left / oriw);\r\n            var tuv = Context.tmpuv1;\r\n            tuv[0] = uv[0];\r\n            tuv[1] = uv[1];\r\n            tuv[2] = uvr;\r\n            tuv[3] = uv[3];\r\n            tuv[4] = uvr;\r\n            tuv[5] = uv[5];\r\n            tuv[6] = uv[6];\r\n            tuv[7] = uv[7];\r\n            this._inner_drawTexture(tex, imgid, stx, y, left, orih, this._curMat, tuv, 1, false);\r\n        }\r\n    }\r\n    _fillTexture_v(tex, imgid, uv, oriw, orih, x, y, h) {\r\n        if (orih <= 0)\r\n            console.error('_fillTexture_v error: orih must>0');\r\n        var sty = y;\r\n        var num = Math.floor(h / orih);\r\n        var left = h % orih;\r\n        for (var i = 0; i < num; i++) {\r\n            this._inner_drawTexture(tex, imgid, x, sty, oriw, orih, this._curMat, uv, 1, false);\r\n            sty += orih;\r\n        }\r\n        if (left > 0) {\r\n            var dv = uv[7] - uv[1];\r\n            var uvb = uv[1] + dv * (left / orih);\r\n            var tuv = Context.tmpuv1;\r\n            tuv[0] = uv[0];\r\n            tuv[1] = uv[1];\r\n            tuv[2] = uv[2];\r\n            tuv[3] = uv[3];\r\n            tuv[4] = uv[4];\r\n            tuv[5] = uvb;\r\n            tuv[6] = uv[6];\r\n            tuv[7] = uvb;\r\n            this._inner_drawTexture(tex, imgid, x, sty, oriw, left, this._curMat, tuv, 1, false);\r\n        }\r\n    }\r\n    drawTextureWithSizeGrid(tex, tx, ty, width, height, sizeGrid, gx, gy) {\r\n        if (!tex._getSource())\r\n            return;\r\n        tx += gx;\r\n        ty += gy;\r\n        var uv = tex.uv, w = tex.bitmap.width, h = tex.bitmap.height;\r\n        var top = sizeGrid[0];\r\n        var left = sizeGrid[3];\r\n        var right = sizeGrid[1];\r\n        var bottom = sizeGrid[2];\r\n        var repeat = sizeGrid[4];\r\n        var needClip = false;\r\n        if (width == w) {\r\n            left = right = 0;\r\n        }\r\n        if (height == h) {\r\n            top = bottom = 0;\r\n        }\r\n        var d_top = top / h;\r\n        var d_left = left / w;\r\n        var d_right = right / w;\r\n        var d_bottom = bottom / h;\r\n        if (left + right > width) {\r\n            var clipWidth = width;\r\n            needClip = true;\r\n            width = left + right;\r\n            this.save();\r\n            this.clipRect(0 + tx, 0 + ty, clipWidth, height);\r\n        }\r\n        var imgid = tex.bitmap.id;\r\n        var mat = this._curMat;\r\n        var tuv = this._tempUV;\r\n        var uvl = uv[0];\r\n        var uvt = uv[1];\r\n        var uvr = uv[4];\r\n        var uvb = uv[5];\r\n        var uvl_ = uvl;\r\n        var uvt_ = uvt;\r\n        var uvr_ = uvr;\r\n        var uvb_ = uvb;\r\n        if (left && top) {\r\n            uvr_ = uvl + d_left;\r\n            uvb_ = uvt + d_top;\r\n            tuv[0] = uvl, tuv[1] = uvt, tuv[2] = uvr_, tuv[3] = uvt,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl, tuv[7] = uvb_;\r\n            this._inner_drawTexture(tex, imgid, tx, ty, left, top, mat, tuv, 1, false);\r\n        }\r\n        if (right && top) {\r\n            uvl_ = uvr - d_right;\r\n            uvt_ = uvt;\r\n            uvr_ = uvr;\r\n            uvb_ = uvt + d_top;\r\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n            this._inner_drawTexture(tex, imgid, width - right + tx, 0 + ty, right, top, mat, tuv, 1, false);\r\n        }\r\n        if (left && bottom) {\r\n            uvl_ = uvl;\r\n            uvt_ = uvb - d_bottom;\r\n            uvr_ = uvl + d_left;\r\n            uvb_ = uvb;\r\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n            this._inner_drawTexture(tex, imgid, 0 + tx, height - bottom + ty, left, bottom, mat, tuv, 1, false);\r\n        }\r\n        if (right && bottom) {\r\n            uvl_ = uvr - d_right;\r\n            uvt_ = uvb - d_bottom;\r\n            uvr_ = uvr;\r\n            uvb_ = uvb;\r\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n            this._inner_drawTexture(tex, imgid, width - right + tx, height - bottom + ty, right, bottom, mat, tuv, 1, false);\r\n        }\r\n        if (top) {\r\n            uvl_ = uvl + d_left;\r\n            uvt_ = uvt;\r\n            uvr_ = uvr - d_right;\r\n            uvb_ = uvt + d_top;\r\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n            if (repeat) {\r\n                this._fillTexture_h(tex, imgid, tuv, tex.width - left - right, top, left + tx, ty, width - left - right);\r\n            }\r\n            else {\r\n                this._inner_drawTexture(tex, imgid, left + tx, ty, width - left - right, top, mat, tuv, 1, false);\r\n            }\r\n        }\r\n        if (bottom) {\r\n            uvl_ = uvl + d_left;\r\n            uvt_ = uvb - d_bottom;\r\n            uvr_ = uvr - d_right;\r\n            uvb_ = uvb;\r\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n            if (repeat) {\r\n                this._fillTexture_h(tex, imgid, tuv, tex.width - left - right, bottom, left + tx, height - bottom + ty, width - left - right);\r\n            }\r\n            else {\r\n                this._inner_drawTexture(tex, imgid, left + tx, height - bottom + ty, width - left - right, bottom, mat, tuv, 1, false);\r\n            }\r\n        }\r\n        if (left) {\r\n            uvl_ = uvl;\r\n            uvt_ = uvt + d_top;\r\n            uvr_ = uvl + d_left;\r\n            uvb_ = uvb - d_bottom;\r\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n            if (repeat) {\r\n                this._fillTexture_v(tex, imgid, tuv, left, tex.height - top - bottom, tx, top + ty, height - top - bottom);\r\n            }\r\n            else {\r\n                this._inner_drawTexture(tex, imgid, tx, top + ty, left, height - top - bottom, mat, tuv, 1, false);\r\n            }\r\n        }\r\n        if (right) {\r\n            uvl_ = uvr - d_right;\r\n            uvt_ = uvt + d_top;\r\n            uvr_ = uvr;\r\n            uvb_ = uvb - d_bottom;\r\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n            if (repeat) {\r\n                this._fillTexture_v(tex, imgid, tuv, right, tex.height - top - bottom, width - right + tx, top + ty, height - top - bottom);\r\n            }\r\n            else {\r\n                this._inner_drawTexture(tex, imgid, width - right + tx, top + ty, right, height - top - bottom, mat, tuv, 1, false);\r\n            }\r\n        }\r\n        uvl_ = uvl + d_left;\r\n        uvt_ = uvt + d_top;\r\n        uvr_ = uvr - d_right;\r\n        uvb_ = uvb - d_bottom;\r\n        tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n            tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n        if (repeat) {\r\n            var tuvr = Context.tmpUVRect;\r\n            tuvr[0] = uvl_;\r\n            tuvr[1] = uvt_;\r\n            tuvr[2] = uvr_ - uvl_;\r\n            tuvr[3] = uvb_ - uvt_;\r\n            this._fillTexture(tex, tex.width - left - right, tex.height - top - bottom, tuvr, left + tx, top + ty, width - left - right, height - top - bottom, 'repeat', 0, 0);\r\n        }\r\n        else {\r\n            this._inner_drawTexture(tex, imgid, left + tx, top + ty, width - left - right, height - top - bottom, mat, tuv, 1, false);\r\n        }\r\n        if (needClip)\r\n            this.restore();\r\n    }\r\n}\r\nContext.ENUM_TEXTALIGN_DEFAULT = 0;\r\nContext.ENUM_TEXTALIGN_CENTER = 1;\r\nContext.ENUM_TEXTALIGN_RIGHT = 2;\r\nContext._SUBMITVBSIZE = 32000;\r\nContext._MAXSIZE = 99999999;\r\nContext._MAXVERTNUM = 65535;\r\nContext.MAXCLIPRECT = null;\r\nContext._COUNT = 0;\r\nContext.SEGNUM = 32;\r\nContext._contextcount = 0;\r\nContext.PI2 = 2 * Math.PI;\r\nContext._textRender = null;\r\nContext.tmpuv1 = [0, 0, 0, 0, 0, 0, 0, 0];\r\nContext.tmpUV = [0, 0, 0, 0, 0, 0, 0, 0];\r\nContext.tmpUVRect = [0, 0, 0, 0];\r\nclass ContextParams {\r\n    constructor() {\r\n        this.lineWidth = 1;\r\n    }\r\n    clear() {\r\n        this.lineWidth = 1;\r\n        this.textAlign = this.textBaseline = null;\r\n    }\r\n    make() {\r\n        return this === ContextParams.DEFAULT ? new ContextParams() : this;\r\n    }\r\n}\r\n//# sourceMappingURL=Context.js.map",
  "references": [
    "D:/widgets/LayaDataStructuresAlgorithms/libs/ILaya.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/display/Sprite.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/filters/ColorFilter.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/layagl/LayaGL.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/maths/Bezier.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/maths/Matrix.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/maths/Point.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/maths/Rectangle.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/utils/FontInfo.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/utils/HTMLChar.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/utils/Stat.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/utils/WordText.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/canvas/BlendMode.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/canvas/DrawStyle.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/canvas/Path.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/canvas/save/ISaveData.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/canvas/save/SaveBase.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/canvas/save/SaveClipRect.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/canvas/save/SaveMark.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/canvas/save/SaveTransform.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/canvas/save/SaveTranslate.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/canvas/WebGLCacheAsNormalCanvas.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/shader/BaseShader.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/shader/d2/Shader2D.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/shader/d2/ShaderDefines2D.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/shader/d2/skinAnishader/SkinMeshBuffer.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/shader/d2/value/Value2D.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/shader/Shader.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/shapes/BasePoly.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/shapes/Earcut.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/submit/ISubmit.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/submit/Submit.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/submit/SubmitBase.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/submit/SubmitCanvas.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/submit/SubmitCMD.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/submit/SubmitKey.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/submit/SubmitTarget.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/submit/SubmitTexture.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/text/CharRenderInfo.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/text/CharSubmitCache.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/text/TextRender.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/utils/IndexBuffer2D.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/utils/Mesh2D.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/utils/MeshQuadTexture.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/utils/MeshTexture.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/utils/MeshVG.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/utils/RenderState2D.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/utils/VertexBuffer2D.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/WebGLContext.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/resource/Bitmap.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/resource/HTMLCanvas.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/resource/RenderTexture2D.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/resource/RenderTextureFormat.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/resource/Texture.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/resource/Texture2D.ts"
  ],
  "map": "{\"version\":3,\"file\":\"Context.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../libs/laya/resource/Context.ts\"],\"names\":[],\"mappings\":\"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\"}",
  "dts": {
    "name": "D:/widgets/LayaDataStructuresAlgorithms/.rpt2_cache/placeholder/laya/resource/Context.d.ts",
    "writeByteOrderMark": false,
    "text": "import { Sprite } from \"../display/Sprite\";\r\nimport { ColorFilter } from \"../filters/ColorFilter\";\r\nimport { Matrix } from \"../maths/Matrix\";\r\nimport { Point } from \"../maths/Point\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { HTMLChar } from \"../utils/HTMLChar\";\r\nimport { WordText } from \"../utils/WordText\";\r\nimport { SaveMark } from \"../webgl/canvas/save/SaveMark\";\r\nimport { Shader2D } from \"../webgl/shader/d2/Shader2D\";\r\nimport { Value2D } from \"../webgl/shader/d2/value/Value2D\";\r\nimport { Shader } from \"../webgl/shader/Shader\";\r\nimport { ISubmit } from \"../webgl/submit/ISubmit\";\r\nimport { SubmitBase } from \"../webgl/submit/SubmitBase\";\r\nimport { SubmitKey } from \"../webgl/submit/SubmitKey\";\r\nimport { CharSubmitCache } from \"../webgl/text/CharSubmitCache\";\r\nimport { TextRender } from \"../webgl/text/TextRender\";\r\nimport { IndexBuffer2D } from \"../webgl/utils/IndexBuffer2D\";\r\nimport { MeshQuadTexture } from \"../webgl/utils/MeshQuadTexture\";\r\nimport { MeshTexture } from \"../webgl/utils/MeshTexture\";\r\nimport { MeshVG } from \"../webgl/utils/MeshVG\";\r\nimport { VertexBuffer2D } from \"../webgl/utils/VertexBuffer2D\";\r\nimport { HTMLCanvas } from \"./HTMLCanvas\";\r\nimport { RenderTexture2D } from \"./RenderTexture2D\";\r\nimport { Texture } from \"./Texture\";\r\nexport declare class Context {\r\n    _canvas: HTMLCanvas;\r\n    static ENUM_TEXTALIGN_DEFAULT: number;\r\n    static ENUM_TEXTALIGN_CENTER: number;\r\n    static ENUM_TEXTALIGN_RIGHT: number;\r\n    static _SUBMITVBSIZE: number;\r\n    static _MAXSIZE: number;\r\n    private static _MAXVERTNUM;\r\n    static MAXCLIPRECT: Rectangle;\r\n    static _COUNT: number;\r\n    _tmpMatrix: Matrix;\r\n    private static SEGNUM;\r\n    private static _contextcount;\r\n    private _drawTexToDrawTri_Vert;\r\n    private _drawTexToDrawTri_Index;\r\n    private _tempUV;\r\n    private _drawTriUseAbsMatrix;\r\n    static __init__(): void;\r\n    drawImage(...args: any[]): void;\r\n    getImageData(...args: any[]): any;\r\n    measureText(text: string): any;\r\n    setTransform(...args: any[]): void;\r\n    $transform(a: number, b: number, c: number, d: number, tx: number, ty: number): void;\r\n    lineJoin: string;\r\n    lineCap: string;\r\n    miterLimit: string;\r\n    clearRect(x: number, y: number, width: number, height: number): void;\r\n    _drawRect(x: number, y: number, width: number, height: number, style: any): void;\r\n    drawTexture2(x: number, y: number, pivotX: number, pivotY: number, m: Matrix, args2: any[]): void;\r\n    transformByMatrix(matrix: Matrix, tx: number, ty: number): void;\r\n    saveTransform(matrix: Matrix): void;\r\n    restoreTransform(matrix: Matrix): void;\r\n    drawRect(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any, lineWidth: number): void;\r\n    alpha(value: number): void;\r\n    _transform(mat: Matrix, pivotX: number, pivotY: number): void;\r\n    _rotate(angle: number, pivotX: number, pivotY: number): void;\r\n    _scale(scaleX: number, scaleY: number, pivotX: number, pivotY: number): void;\r\n    _drawLine(x: number, y: number, fromX: number, fromY: number, toX: number, toY: number, lineColor: string, lineWidth: number, vid: number): void;\r\n    _drawLines(x: number, y: number, points: any[], lineColor: any, lineWidth: number, vid: number): void;\r\n    drawCurves(x: number, y: number, points: any[], lineColor: any, lineWidth: number): void;\r\n    private _fillAndStroke;\r\n    static PI2: number;\r\n    _drawCircle(x: number, y: number, radius: number, fillColor: any, lineColor: any, lineWidth: number, vid: number): void;\r\n    _drawPie(x: number, y: number, radius: number, startAngle: number, endAngle: number, fillColor: any, lineColor: any, lineWidth: number, vid: number): void;\r\n    _drawPoly(x: number, y: number, points: any[], fillColor: any, lineColor: any, lineWidth: number, isConvexPolygon: boolean, vid: number): void;\r\n    _drawPath(x: number, y: number, paths: any[], brush: any, pen: any): void;\r\n    static set2DRenderConfig(): void;\r\n    _id: number;\r\n    private _other;\r\n    private _renderNextSubmitIndex;\r\n    private _path;\r\n    _drawCount: number;\r\n    private _width;\r\n    private _height;\r\n    private _renderCount;\r\n    _submits: any;\r\n    _curSubmit: any;\r\n    _submitKey: SubmitKey;\r\n    _mesh: MeshQuadTexture | null;\r\n    _pathMesh: MeshVG | null;\r\n    _triangleMesh: MeshTexture | null;\r\n    meshlist: any[];\r\n    private _transedPoints;\r\n    private _temp4Points;\r\n    _clipRect: Rectangle;\r\n    _globalClipMatrix: Matrix;\r\n    _clipInCache: boolean;\r\n    _clipInfoID: number;\r\n    private _clipID_Gen;\r\n    _curMat: Matrix;\r\n    _lastMatScaleX: number;\r\n    _lastMatScaleY: number;\r\n    private _lastMat_a;\r\n    private _lastMat_b;\r\n    private _lastMat_c;\r\n    private _lastMat_d;\r\n    _nBlendType: number;\r\n    _save: any;\r\n    _targets: RenderTexture2D | null;\r\n    _charSubmitCache: CharSubmitCache | null;\r\n    _saveMark: SaveMark | null;\r\n    _shader2D: Shader2D;\r\n    sprite: Sprite | null;\r\n    static _textRender: TextRender | null;\r\n    _italicDeg: number;\r\n    _lastTex: Texture | null;\r\n    private _fillColor;\r\n    private _flushCnt;\r\n    private defTexture;\r\n    _colorFiler: ColorFilter | null;\r\n    drawTexAlign: boolean;\r\n    _incache: boolean;\r\n    isMain: boolean;\r\n    constructor();\r\n    clearBG(r: number, g: number, b: number, a: number): void;\r\n    _getSubmits(): any[];\r\n    private _releaseMem;\r\n    destroy(keepRT?: boolean): void;\r\n    clear(): void;\r\n    size(w: number, h: number): void;\r\n    asBitmap: boolean;\r\n    getMatScaleX(): number;\r\n    getMatScaleY(): number;\r\n    setFillColor(color: number): void;\r\n    getFillColor(): number;\r\n    fillStyle: any;\r\n    globalAlpha: number;\r\n    textAlign: string;\r\n    textBaseline: string;\r\n    globalCompositeOperation: string;\r\n    strokeStyle: any;\r\n    translate(x: number, y: number): void;\r\n    lineWidth: number;\r\n    save(): void;\r\n    restore(): void;\r\n    font: string;\r\n    fillText(txt: string | WordText, x: number, y: number, fontStr: string, color: string, align: string, lineWidth?: number, borderColor?: string): void;\r\n    drawText(text: string | WordText, x: number, y: number, font: string, color: string, textAlign: string): void;\r\n    fillWords(words: HTMLChar[], x: number, y: number, fontStr: string, color: string): void;\r\n    strokeWord(text: string | WordText, x: number, y: number, font: string, color: string, lineWidth: number, textAlign: string): void;\r\n    fillBorderText(txt: string | WordText, x: number, y: number, font: string, color: string, borderColor: string, lineWidth: number, textAlign: string): void;\r\n    fillBorderWords(words: HTMLChar[], x: number, y: number, font: string, color: string, borderColor: string, lineWidth: number): void;\r\n    _fast_filltext(data: string | WordText, x: number, y: number, fontObj: any, color: string, strokeColor: string, lineWidth: number, textAlign: number, underLine?: number): void;\r\n    private _fillRect;\r\n    fillRect(x: number, y: number, width: number, height: number, fillStyle: any): void;\r\n    fillTexture(texture: Texture, x: number, y: number, width: number, height: number, type: string, offset: Point, other: any): void;\r\n    _fillTexture(texture: Texture, texw: number, texh: number, texuvRect: any[], x: number, y: number, width: number, height: number, type: string, offsetx: number, offsety: number): void;\r\n    setColorFilter(filter: ColorFilter): void;\r\n    drawTexture(tex: Texture, x: number, y: number, width: number, height: number): void;\r\n    drawTextures(tex: Texture, pos: any[], tx: number, ty: number): void;\r\n    private _drawTextureAddSubmit;\r\n    _drawTextureM(tex: Texture, x: number, y: number, width: number, height: number, m: Matrix, alpha: number, uv: any[]): boolean;\r\n    _drawRenderTexture(tex: RenderTexture2D, x: number, y: number, width: number, height: number, m: Matrix, alpha: number, uv: any[]): boolean;\r\n    submitDebugger(): void;\r\n    _copyClipInfo(submit: SubmitBase, clipInfo: Matrix): void;\r\n    private isSameClipInfo;\r\n    _useNewTex2DSubmit(tex: Texture, minVertNum: number): void;\r\n    _drawTexRect(x: number, y: number, w: number, h: number, uv: any[]): void;\r\n    drawCallOptimize(enable: boolean): boolean;\r\n    _inner_drawTexture(tex: Texture, imgid: number, x: number, y: number, width: number, height: number, m: Matrix, uv: ArrayLike<number>, alpha: number, lastRender: boolean): boolean;\r\n    transform4Points(a: any[], m: Matrix, out: any[]): void;\r\n    clipedOff(pt: any[]): boolean;\r\n    transformQuad(x: number, y: number, w: number, h: number, italicDeg: number, m: Matrix, out: any[]): void;\r\n    pushRT(): void;\r\n    popRT(): void;\r\n    useRT(rt: RenderTexture2D): void;\r\n    RTRestore(rt: RenderTexture2D): void;\r\n    breakNextMerge(): void;\r\n    private _repaintSprite;\r\n    drawTextureWithTransform(tex: Texture, x: number, y: number, width: number, height: number, transform: Matrix, tx: number, ty: number, alpha: number, blendMode: string, colorfilter?: ColorFilter, uv?: number[]): void;\r\n    private _flushToTarget;\r\n    drawCanvas(canvas: HTMLCanvas, x: number, y: number, width: number, height: number): void;\r\n    drawTarget(rt: RenderTexture2D, x: number, y: number, width: number, height: number, m: Matrix, shaderValue: Value2D, uv?: ArrayLike<number>, blend?: number): boolean;\r\n    drawTriangles(tex: Texture, x: number, y: number, vertices: Float32Array, uvs: Float32Array, indices: Uint16Array, matrix: Matrix, alpha: number, color: ColorFilter, blendMode: string, colorNum?: number): void;\r\n    transform(a: number, b: number, c: number, d: number, tx: number, ty: number): void;\r\n    _transformByMatrix(matrix: Matrix, tx: number, ty: number): void;\r\n    setTransformByMatrix(value: Matrix): void;\r\n    rotate(angle: number): void;\r\n    scale(scaleX: number, scaleY: number): void;\r\n    clipRect(x: number, y: number, width: number, height: number): void;\r\n    drawMesh(x: number, y: number, ib: IndexBuffer2D, vb: VertexBuffer2D, numElement: number, mat: Matrix, shader: Shader, shaderValues: Value2D, startIndex?: number): void;\r\n    addRenderObject(o: ISubmit): void;\r\n    submitElement(start: number, end: number): number;\r\n    flush(): number;\r\n    beginPath(convex?: boolean): void;\r\n    closePath(): void;\r\n    addPath(points: any[], close: boolean, convex: boolean, dx: number, dy: number): void;\r\n    fill(): void;\r\n    private addVGSubmit;\r\n    stroke(): void;\r\n    moveTo(x: number, y: number): void;\r\n    lineTo(x: number, y: number): void;\r\n    arcTo(x1: number, y1: number, x2: number, y2: number, r: number): void;\r\n    arc(cx: number, cy: number, r: number, startAngle: number, endAngle: number, counterclockwise?: boolean, b?: boolean): void;\r\n    quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): void;\r\n    mixRGBandAlpha(color: number): number;\r\n    _mixRGBandAlpha(color: number, alpha: number): number;\r\n    strokeRect(x: number, y: number, width: number, height: number, parameterLineWidth: number): void;\r\n    clip(): void;\r\n    drawParticle(x: number, y: number, pt: any): void;\r\n    private _getPath;\r\n    readonly canvas: HTMLCanvas;\r\n    private static tmpuv1;\r\n    private _fillTexture_h;\r\n    private _fillTexture_v;\r\n    private static tmpUV;\r\n    private static tmpUVRect;\r\n    drawTextureWithSizeGrid(tex: Texture, tx: number, ty: number, width: number, height: number, sizeGrid: any[], gx: number, gy: number): void;\r\n}\r\n"
  }
}
