{
  "code": "import { Point } from \"./Point\";\r\nexport class Bezier {\r\n    constructor() {\r\n        this._controlPoints = [new Point(), new Point(), new Point()];\r\n        this._calFun = this.getPoint2;\r\n    }\r\n    _switchPoint(x, y) {\r\n        var tPoint = this._controlPoints.shift();\r\n        tPoint.setTo(x, y);\r\n        this._controlPoints.push(tPoint);\r\n    }\r\n    getPoint2(t, rst) {\r\n        var p1 = this._controlPoints[0];\r\n        var p2 = this._controlPoints[1];\r\n        var p3 = this._controlPoints[2];\r\n        var lineX = Math.pow((1 - t), 2) * p1.x + 2 * t * (1 - t) * p2.x + Math.pow(t, 2) * p3.x;\r\n        var lineY = Math.pow((1 - t), 2) * p1.y + 2 * t * (1 - t) * p2.y + Math.pow(t, 2) * p3.y;\r\n        rst.push(lineX, lineY);\r\n    }\r\n    getPoint3(t, rst) {\r\n        var p1 = this._controlPoints[0];\r\n        var p2 = this._controlPoints[1];\r\n        var p3 = this._controlPoints[2];\r\n        var p4 = this._controlPoints[3];\r\n        var lineX = Math.pow((1 - t), 3) * p1.x + 3 * p2.x * t * (1 - t) * (1 - t) + 3 * p3.x * t * t * (1 - t) + p4.x * Math.pow(t, 3);\r\n        var lineY = Math.pow((1 - t), 3) * p1.y + 3 * p2.y * t * (1 - t) * (1 - t) + 3 * p3.y * t * t * (1 - t) + p4.y * Math.pow(t, 3);\r\n        rst.push(lineX, lineY);\r\n    }\r\n    insertPoints(count, rst) {\r\n        var i;\r\n        count = count > 0 ? count : 5;\r\n        var dLen;\r\n        dLen = 1 / count;\r\n        for (i = 0; i <= 1; i += dLen) {\r\n            this._calFun(i, rst);\r\n        }\r\n    }\r\n    getBezierPoints(pList, inSertCount = 5, count = 2) {\r\n        var i, len;\r\n        len = pList.length;\r\n        if (len < (count + 1) * 2)\r\n            return [];\r\n        var rst = [];\r\n        switch (count) {\r\n            case 2:\r\n                this._calFun = this.getPoint2;\r\n                break;\r\n            case 3:\r\n                this._calFun = this.getPoint3;\r\n                break;\r\n            default:\r\n                return [];\r\n        }\r\n        while (this._controlPoints.length <= count) {\r\n            this._controlPoints.push(Point.create());\r\n        }\r\n        for (i = 0; i < count * 2; i += 2) {\r\n            this._switchPoint(pList[i], pList[i + 1]);\r\n        }\r\n        for (i = count * 2; i < len; i += 2) {\r\n            this._switchPoint(pList[i], pList[i + 1]);\r\n            if ((i / 2) % count == 0)\r\n                this.insertPoints(inSertCount, rst);\r\n        }\r\n        return rst;\r\n    }\r\n}\r\nBezier.I = new Bezier();\r\n//# sourceMappingURL=Bezier.js.map",
  "references": [
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/maths/Point.ts"
  ],
  "map": "{\"version\":3,\"file\":\"Bezier.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../libs/laya/maths/Bezier.ts\"],\"names\":[],\"mappings\":\"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\"}",
  "dts": {
    "name": "D:/widgets/LayaDataStructuresAlgorithms/.rpt2_cache/placeholder/laya/maths/Bezier.d.ts",
    "writeByteOrderMark": false,
    "text": "export declare class Bezier {\r\n    static I: Bezier;\r\n    private _controlPoints;\r\n    private _calFun;\r\n    private _switchPoint;\r\n    getPoint2(t: number, rst: any[]): void;\r\n    getPoint3(t: number, rst: any[]): void;\r\n    insertPoints(count: number, rst: any[]): void;\r\n    getBezierPoints(pList: any[], inSertCount?: number, count?: number): any[];\r\n}\r\n"
  }
}
