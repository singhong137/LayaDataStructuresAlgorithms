{
  "code": "import { FrameAnimation } from \"../display/FrameAnimation\";\r\nimport { Graphics } from \"../display/Graphics\";\r\nimport { Matrix } from \"../maths/Matrix\";\r\nimport { Loader } from \"../net/Loader\";\r\nexport class GraphicAnimation extends FrameAnimation {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._nodeIDAniDic = {};\r\n    }\r\n    _parseNodeList(uiView) {\r\n        if (!this._nodeList)\r\n            this._nodeList = [];\r\n        this._nodeDefaultProps[uiView.compId] = uiView.props;\r\n        if (uiView.compId)\r\n            this._nodeList.push(uiView.compId);\r\n        var childs = uiView.child;\r\n        if (childs) {\r\n            var i, len = childs.length;\r\n            for (i = 0; i < len; i++) {\r\n                this._parseNodeList(childs[i]);\r\n            }\r\n        }\r\n    }\r\n    _calGraphicData(aniData) {\r\n        this._setUp(null, aniData);\r\n        this._createGraphicData();\r\n        if (this._nodeIDAniDic) {\r\n            var key;\r\n            for (key in this._nodeIDAniDic) {\r\n                this._nodeIDAniDic[key] = null;\r\n            }\r\n        }\r\n    }\r\n    _createGraphicData() {\r\n        var gList = [];\r\n        var i, len = this.count;\r\n        var animationDataNew = this._usedFrames;\r\n        if (!animationDataNew)\r\n            animationDataNew = [];\r\n        var preGraphic;\r\n        for (i = 0; i < len; i++) {\r\n            if (animationDataNew[i] || !preGraphic) {\r\n                preGraphic = this._createFrameGraphic(i);\r\n            }\r\n            gList.push(preGraphic);\r\n        }\r\n        this._gList = gList;\r\n    }\r\n    _createFrameGraphic(frame) {\r\n        var g = new Graphics();\r\n        if (!GraphicAnimation._rootMatrix)\r\n            GraphicAnimation._rootMatrix = new Matrix();\r\n        this._updateNodeGraphic(this._rootNode, frame, GraphicAnimation._rootMatrix, g);\r\n        return g;\r\n    }\r\n    _updateNodeGraphic(node, frame, parentTransfrom, g, alpha = 1) {\r\n        var tNodeG;\r\n        tNodeG = this._nodeGDic[node.compId] = this._getNodeGraphicData(node.compId, frame, this._nodeGDic[node.compId]);\r\n        if (!tNodeG.resultTransform)\r\n            tNodeG.resultTransform = new Matrix();\r\n        var tResultTransform;\r\n        tResultTransform = tNodeG.resultTransform;\r\n        Matrix.mul(tNodeG.transform, parentTransfrom, tResultTransform);\r\n        var tTex;\r\n        var tGraphicAlpha = tNodeG.alpha * alpha;\r\n        if (tGraphicAlpha < 0.01)\r\n            return;\r\n        if (tNodeG.skin) {\r\n            tTex = this._getTextureByUrl(tNodeG.skin);\r\n            if (tTex) {\r\n                if (tResultTransform._checkTransform()) {\r\n                    g.drawTexture(tTex, 0, 0, tNodeG.width, tNodeG.height, tResultTransform, tGraphicAlpha);\r\n                    tNodeG.resultTransform = null;\r\n                }\r\n                else {\r\n                    g.drawTexture(tTex, tResultTransform.tx, tResultTransform.ty, tNodeG.width, tNodeG.height, null, tGraphicAlpha);\r\n                }\r\n            }\r\n        }\r\n        var childs = node.child;\r\n        if (!childs)\r\n            return;\r\n        var i, len;\r\n        len = childs.length;\r\n        for (i = 0; i < len; i++) {\r\n            this._updateNodeGraphic(childs[i], frame, tResultTransform, g, tGraphicAlpha);\r\n        }\r\n    }\r\n    _updateNoChilds(tNodeG, g) {\r\n        if (!tNodeG.skin)\r\n            return;\r\n        var tTex = this._getTextureByUrl(tNodeG.skin);\r\n        if (!tTex)\r\n            return;\r\n        var tTransform = tNodeG.transform;\r\n        tTransform._checkTransform();\r\n        var onlyTranslate;\r\n        onlyTranslate = !tTransform._bTransform;\r\n        if (!onlyTranslate) {\r\n            g.drawTexture(tTex, 0, 0, tNodeG.width, tNodeG.height, tTransform.clone(), tNodeG.alpha);\r\n        }\r\n        else {\r\n            g.drawTexture(tTex, tTransform.tx, tTransform.ty, tNodeG.width, tNodeG.height, null, tNodeG.alpha);\r\n        }\r\n    }\r\n    _updateNodeGraphic2(node, frame, g) {\r\n        var tNodeG;\r\n        tNodeG = this._nodeGDic[node.compId] = this._getNodeGraphicData(node.compId, frame, this._nodeGDic[node.compId]);\r\n        if (!node.child) {\r\n            this._updateNoChilds(tNodeG, g);\r\n            return;\r\n        }\r\n        var tTransform = tNodeG.transform;\r\n        tTransform._checkTransform();\r\n        var onlyTranslate;\r\n        onlyTranslate = !tTransform._bTransform;\r\n        var hasTrans;\r\n        hasTrans = onlyTranslate && (tTransform.tx != 0 || tTransform.ty != 0);\r\n        var ifSave;\r\n        ifSave = (tTransform._bTransform) || tNodeG.alpha != 1;\r\n        if (ifSave)\r\n            g.save();\r\n        if (tNodeG.alpha != 1)\r\n            g.alpha(tNodeG.alpha);\r\n        if (!onlyTranslate)\r\n            g.transform(tTransform.clone());\r\n        else if (hasTrans)\r\n            g.translate(tTransform.tx, tTransform.ty);\r\n        var childs = node.child;\r\n        var tTex;\r\n        if (tNodeG.skin) {\r\n            tTex = this._getTextureByUrl(tNodeG.skin);\r\n            if (tTex) {\r\n                g.drawImage(tTex, 0, 0, tNodeG.width, tNodeG.height);\r\n            }\r\n        }\r\n        if (childs) {\r\n            var i, len;\r\n            len = childs.length;\r\n            for (i = 0; i < len; i++) {\r\n                this._updateNodeGraphic2(childs[i], frame, g);\r\n            }\r\n        }\r\n        if (ifSave) {\r\n            g.restore();\r\n        }\r\n        else {\r\n            if (!onlyTranslate) {\r\n                g.transform(tTransform.clone().invert());\r\n            }\r\n            else if (hasTrans) {\r\n                g.translate(-tTransform.tx, -tTransform.ty);\r\n            }\r\n        }\r\n    }\r\n    _calculateKeyFrames(node) {\r\n        super._calculateKeyFrames(node);\r\n        this._nodeIDAniDic[node.target] = node;\r\n    }\r\n    getNodeDataByID(nodeID) {\r\n        return this._nodeIDAniDic[nodeID];\r\n    }\r\n    _getParams(obj, params, frame, obj2) {\r\n        var rst = GraphicAnimation._temParam;\r\n        rst.length = params.length;\r\n        var i, len = params.length;\r\n        for (i = 0; i < len; i++) {\r\n            rst[i] = this._getObjVar(obj, params[i][0], frame, params[i][1], obj2);\r\n        }\r\n        return rst;\r\n    }\r\n    _getObjVar(obj, key, frame, noValue, obj2) {\r\n        if (key in obj) {\r\n            var vArr = obj[key];\r\n            if (frame >= vArr.length)\r\n                frame = vArr.length - 1;\r\n            return obj[key][frame];\r\n        }\r\n        if (key in obj2) {\r\n            return obj2[key];\r\n        }\r\n        return noValue;\r\n    }\r\n    _getNodeGraphicData(nodeID, frame, rst) {\r\n        if (!rst)\r\n            rst = new GraphicNode();\r\n        if (!rst.transform) {\r\n            rst.transform = new Matrix();\r\n        }\r\n        else {\r\n            rst.transform.identity();\r\n        }\r\n        var node = this.getNodeDataByID(nodeID);\r\n        if (!node)\r\n            return rst;\r\n        var frameData = node.frames;\r\n        var params = this._getParams(frameData, GraphicAnimation._drawTextureCmd, frame, this._nodeDefaultProps[nodeID]);\r\n        var url = params[0];\r\n        var width, height;\r\n        var px = params[5], py = params[6];\r\n        var aX = params[13], aY = params[14];\r\n        var sx = params[7], sy = params[8];\r\n        var rotate = params[9];\r\n        var skewX = params[11], skewY = params[12];\r\n        width = params[3];\r\n        height = params[4];\r\n        if (width == 0 || height == 0)\r\n            url = null;\r\n        if (width == -1)\r\n            width = 0;\r\n        if (height == -1)\r\n            height = 0;\r\n        var tex;\r\n        rst.skin = url;\r\n        rst.width = width;\r\n        rst.height = height;\r\n        if (url) {\r\n            tex = this._getTextureByUrl(url);\r\n            if (tex) {\r\n                if (!width)\r\n                    width = tex.sourceWidth;\r\n                if (!height)\r\n                    height = tex.sourceHeight;\r\n            }\r\n            else {\r\n                console.warn(\"lost skin:\", url, \",you may load pics first\");\r\n            }\r\n        }\r\n        rst.alpha = params[10];\r\n        var m = rst.transform;\r\n        if (aX != 0) {\r\n            px = aX * width;\r\n        }\r\n        if (aY != 0) {\r\n            py = aY * height;\r\n        }\r\n        if (px != 0 || py != 0) {\r\n            m.translate(-px, -py);\r\n        }\r\n        var tm = null;\r\n        if (rotate || sx !== 1 || sy !== 1 || skewX || skewY) {\r\n            tm = GraphicAnimation._tempMt;\r\n            tm.identity();\r\n            tm._bTransform = true;\r\n            var skx = (rotate - skewX) * 0.0174532922222222;\r\n            var sky = (rotate + skewY) * 0.0174532922222222;\r\n            var cx = Math.cos(sky);\r\n            var ssx = Math.sin(sky);\r\n            var cy = Math.sin(skx);\r\n            var ssy = Math.cos(skx);\r\n            tm.a = sx * cx;\r\n            tm.b = sx * ssx;\r\n            tm.c = -sy * cy;\r\n            tm.d = sy * ssy;\r\n            tm.tx = tm.ty = 0;\r\n        }\r\n        if (tm) {\r\n            m = Matrix.mul(m, tm, m);\r\n        }\r\n        m.translate(params[1], params[2]);\r\n        return rst;\r\n    }\r\n    _getTextureByUrl(url) {\r\n        return Loader.getRes(url);\r\n    }\r\n    setAniData(uiView, aniName = null) {\r\n        if (uiView.animations) {\r\n            this._nodeDefaultProps = {};\r\n            this._nodeGDic = {};\r\n            if (this._nodeList)\r\n                this._nodeList.length = 0;\r\n            this._rootNode = uiView;\r\n            this._parseNodeList(uiView);\r\n            var aniDic = {};\r\n            var anilist = [];\r\n            var animations = uiView.animations;\r\n            var i, len = animations.length;\r\n            var tAniO;\r\n            for (i = 0; i < len; i++) {\r\n                tAniO = animations[i];\r\n                this._labels = null;\r\n                if (aniName && aniName != tAniO.name) {\r\n                    continue;\r\n                }\r\n                if (!tAniO)\r\n                    continue;\r\n                try {\r\n                    this._calGraphicData(tAniO);\r\n                }\r\n                catch (e) {\r\n                    console.warn(\"parse animation fail:\" + tAniO.name + \",empty animation created\");\r\n                    this._gList = [];\r\n                }\r\n                var frameO = {};\r\n                frameO.interval = 1000 / tAniO[\"frameRate\"];\r\n                frameO.frames = this._gList;\r\n                frameO.labels = this._labels;\r\n                frameO.name = tAniO.name;\r\n                anilist.push(frameO);\r\n                aniDic[tAniO.name] = frameO;\r\n            }\r\n            this.animationList = anilist;\r\n            this.animationDic = aniDic;\r\n        }\r\n        GraphicAnimation._temParam.length = 0;\r\n    }\r\n    parseByData(aniData) {\r\n        var rootNode, aniO;\r\n        rootNode = aniData.nodeRoot;\r\n        aniO = aniData.aniO;\r\n        delete aniData.nodeRoot;\r\n        delete aniData.aniO;\r\n        this._nodeDefaultProps = {};\r\n        this._nodeGDic = {};\r\n        if (this._nodeList)\r\n            this._nodeList.length = 0;\r\n        this._rootNode = rootNode;\r\n        this._parseNodeList(rootNode);\r\n        this._labels = null;\r\n        try {\r\n            this._calGraphicData(aniO);\r\n        }\r\n        catch (e) {\r\n            console.warn(\"parse animation fail:\" + aniO.name + \",empty animation created\");\r\n            this._gList = [];\r\n        }\r\n        var frameO = aniData;\r\n        frameO.interval = 1000 / aniO[\"frameRate\"];\r\n        frameO.frames = this._gList;\r\n        frameO.labels = this._labels;\r\n        frameO.name = aniO.name;\r\n        return frameO;\r\n    }\r\n    setUpAniData(uiView) {\r\n        if (uiView.animations) {\r\n            var aniDic = {};\r\n            var anilist = [];\r\n            var animations = uiView.animations;\r\n            var i, len = animations.length;\r\n            var tAniO;\r\n            for (i = 0; i < len; i++) {\r\n                tAniO = animations[i];\r\n                if (!tAniO)\r\n                    continue;\r\n                var frameO = {};\r\n                frameO.name = tAniO.name;\r\n                frameO.aniO = tAniO;\r\n                frameO.nodeRoot = uiView;\r\n                anilist.push(frameO);\r\n                aniDic[tAniO.name] = frameO;\r\n            }\r\n            this.animationList = anilist;\r\n            this.animationDic = aniDic;\r\n        }\r\n    }\r\n    _clear() {\r\n        this.animationList = null;\r\n        this.animationDic = null;\r\n        this._gList = null;\r\n        this._nodeGDic = null;\r\n    }\r\n    static parseAnimationByData(animationObject) {\r\n        if (!GraphicAnimation._I)\r\n            GraphicAnimation._I = new GraphicAnimation();\r\n        var rst;\r\n        rst = GraphicAnimation._I.parseByData(animationObject);\r\n        GraphicAnimation._I._clear();\r\n        return rst;\r\n    }\r\n    static parseAnimationData(aniData) {\r\n        if (!GraphicAnimation._I)\r\n            GraphicAnimation._I = new GraphicAnimation();\r\n        GraphicAnimation._I.setUpAniData(aniData);\r\n        var rst;\r\n        rst = {};\r\n        rst.animationList = GraphicAnimation._I.animationList;\r\n        rst.animationDic = GraphicAnimation._I.animationDic;\r\n        GraphicAnimation._I._clear();\r\n        return rst;\r\n    }\r\n}\r\nGraphicAnimation._drawTextureCmd = [[\"skin\", null], [\"x\", 0], [\"y\", 0], [\"width\", -1], [\"height\", -1], [\"pivotX\", 0], [\"pivotY\", 0], [\"scaleX\", 1], [\"scaleY\", 1], [\"rotation\", 0], [\"alpha\", 1], [\"skewX\", 0], [\"skewY\", 0], [\"anchorX\", 0], [\"anchorY\", 0]];\r\nGraphicAnimation._temParam = [];\r\nGraphicAnimation._tempMt = new Matrix();\r\nclass GraphicNode {\r\n    constructor() {\r\n        this.alpha = 1;\r\n    }\r\n}\r\n//# sourceMappingURL=GraphicAnimation.js.map",
  "references": [
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/display/FrameAnimation.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/display/Graphics.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/maths/Matrix.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/net/Loader.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/resource/Texture.ts"
  ],
  "map": "{\"version\":3,\"file\":\"GraphicAnimation.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../libs/laya/utils/GraphicAnimation.ts\"],\"names\":[],\"mappings\":\"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\"}",
  "dts": {
    "name": "D:/widgets/LayaDataStructuresAlgorithms/.rpt2_cache/placeholder/laya/utils/GraphicAnimation.d.ts",
    "writeByteOrderMark": false,
    "text": "import { FrameAnimation } from \"../display/FrameAnimation\";\r\nimport { Graphics } from \"../display/Graphics\";\r\nimport { Matrix } from \"../maths/Matrix\";\r\nexport declare class GraphicAnimation extends FrameAnimation {\r\n    animationList: any[];\r\n    animationDic: any;\r\n    protected _nodeList: any[];\r\n    protected _nodeDefaultProps: any;\r\n    protected _gList: any[];\r\n    protected _nodeIDAniDic: any;\r\n    protected static _drawTextureCmd: any[];\r\n    protected static _temParam: any[];\r\n    private static _I;\r\n    private static _rootMatrix;\r\n    private _rootNode;\r\n    protected _nodeGDic: any;\r\n    private _parseNodeList;\r\n    private _calGraphicData;\r\n    private _createGraphicData;\r\n    protected _createFrameGraphic(frame: number): any;\r\n    protected _updateNodeGraphic(node: any, frame: number, parentTransfrom: Matrix, g: Graphics, alpha?: number): void;\r\n    protected _updateNoChilds(tNodeG: GraphicNode, g: Graphics): void;\r\n    protected _updateNodeGraphic2(node: any, frame: number, g: Graphics): void;\r\n    protected _calculateKeyFrames(node: any): void;\r\n    protected getNodeDataByID(nodeID: number): any;\r\n    protected _getParams(obj: any, params: any[], frame: number, obj2: any): any[];\r\n    private _getObjVar;\r\n    protected _getNodeGraphicData(nodeID: number, frame: number, rst: GraphicNode): GraphicNode;\r\n    private static _tempMt;\r\n    protected _getTextureByUrl(url: string): any;\r\n    setAniData(uiView: any, aniName?: string): void;\r\n    parseByData(aniData: any): any;\r\n    setUpAniData(uiView: any): void;\r\n    protected _clear(): void;\r\n    static parseAnimationByData(animationObject: any): any;\r\n    static parseAnimationData(aniData: any): any;\r\n}\r\ndeclare class GraphicNode {\r\n    skin: string;\r\n    transform: Matrix;\r\n    resultTransform: Matrix;\r\n    width: number;\r\n    height: number;\r\n    alpha: number;\r\n}\r\nexport {};\r\n"
  }
}
