{
  "code": "import { Event } from \"./Event\";\r\nimport { ILaya } from \"../../ILaya\";\r\nexport class KeyBoardManager {\r\n    static __init__() {\r\n        KeyBoardManager._addEvent(\"keydown\");\r\n        KeyBoardManager._addEvent(\"keypress\");\r\n        KeyBoardManager._addEvent(\"keyup\");\r\n    }\r\n    static _addEvent(type) {\r\n        ILaya.Browser.document.addEventListener(type, function (e) {\r\n            KeyBoardManager._dispatch(e, type);\r\n        }, true);\r\n    }\r\n    static _dispatch(e, type) {\r\n        if (!KeyBoardManager.enabled)\r\n            return;\r\n        KeyBoardManager._event._stoped = false;\r\n        KeyBoardManager._event.nativeEvent = e;\r\n        KeyBoardManager._event.keyCode = e.keyCode || e.which || e.charCode;\r\n        if (type === \"keydown\")\r\n            KeyBoardManager._pressKeys[KeyBoardManager._event.keyCode] = true;\r\n        else if (type === \"keyup\")\r\n            KeyBoardManager._pressKeys[KeyBoardManager._event.keyCode] = null;\r\n        var target = (ILaya.stage.focus && (ILaya.stage.focus.event != null) && ILaya.stage.focus.displayedInStage) ? ILaya.stage.focus : ILaya.stage;\r\n        var ct = target;\r\n        while (ct) {\r\n            ct.event(type, KeyBoardManager._event.setTo(type, ct, target));\r\n            ct = ct.parent;\r\n        }\r\n    }\r\n    static hasKeyDown(key) {\r\n        return KeyBoardManager._pressKeys[key];\r\n    }\r\n}\r\nKeyBoardManager._pressKeys = {};\r\nKeyBoardManager.enabled = true;\r\nKeyBoardManager._event = new Event();\r\n//# sourceMappingURL=KeyBoardManager.js.map",
  "references": [
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/events/Event.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/ILaya.ts"
  ],
  "map": "{\"version\":3,\"file\":\"KeyBoardManager.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../libs/laya/events/KeyBoardManager.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,SAAS,CAAC;AAChC,OAAO,EAAE,KAAK,EAAE,MAAM,aAAa,CAAC;AAQpC,MAAM,OAAO,eAAe;IASxB,MAAM,CAAC,QAAQ;QACX,eAAe,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QACrC,eAAe,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QACtC,eAAe,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;IACvC,CAAC;IAEO,MAAM,CAAC,SAAS,CAAC,IAAY;QACjC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,EAAE,UAAU,CAAM;YAC1D,eAAe,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;QACvC,CAAC,EAAE,IAAI,CAAC,CAAC;IACb,CAAC;IAEO,MAAM,CAAC,SAAS,CAAC,CAAM,EAAE,IAAY;QACzC,IAAI,CAAC,eAAe,CAAC,OAAO;YAAE,OAAO;QACrC,eAAe,CAAC,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;QACvC,eAAe,CAAC,MAAM,CAAC,WAAW,GAAG,CAAC,CAAC;QACvC,eAAe,CAAC,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,QAAQ,CAAC;QAEpE,IAAI,IAAI,KAAK,SAAS;YAAE,eAAe,CAAC,UAAU,CAAC,eAAe,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC;aACrF,IAAI,IAAI,KAAK,OAAO;YAAE,eAAe,CAAC,UAAU,CAAC,eAAe,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC;QAE7F,IAAI,MAAM,GAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC;QACnJ,IAAI,EAAE,GAAQ,MAAM,CAAC;QACrB,OAAO,EAAE,EAAE;YACP,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,eAAe,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC;YAC/D,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC;SAClB;IACL,CAAC;IAOD,MAAM,CAAC,UAAU,CAAC,GAAW;QACzB,OAAO,eAAe,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IAC3C,CAAC;;AA5Cc,0BAAU,GAAQ,EAAE,CAAC;AAG7B,uBAAO,GAAY,IAAI,CAAC;AAExB,sBAAM,GAAU,IAAI,KAAK,EAAE,CAAC\"}",
  "dts": {
    "name": "D:/widgets/LayaDataStructuresAlgorithms/.rpt2_cache/placeholder/laya/events/KeyBoardManager.d.ts",
    "writeByteOrderMark": false,
    "text": "import { Event } from \"./Event\";\r\nexport declare class KeyBoardManager {\r\n    private static _pressKeys;\r\n    static enabled: boolean;\r\n    static _event: Event;\r\n    static __init__(): void;\r\n    private static _addEvent;\r\n    private static _dispatch;\r\n    static hasKeyDown(key: number): boolean;\r\n}\r\n"
  }
}
