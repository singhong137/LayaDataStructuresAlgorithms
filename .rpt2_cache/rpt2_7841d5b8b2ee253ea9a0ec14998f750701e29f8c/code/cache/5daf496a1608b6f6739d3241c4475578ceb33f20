{
  "code": "import { LayaGL } from \"../../layagl/LayaGL\";\r\nimport { Shader } from \"../shader/Shader\";\r\nimport { InlcudeFile } from \"./InlcudeFile\";\r\nimport { ShaderNode } from \"./ShaderNode\";\r\nexport class ShaderCompile {\r\n    constructor(vs, ps, nameMap) {\r\n        this.defs = {};\r\n        let _this = this;\r\n        function _compile(script) {\r\n            script = script.replace(ShaderCompile._clearCR, \"\");\r\n            var includefiles = [];\r\n            var top = new ShaderNode(includefiles);\r\n            _this._compileToTree(top, script.split('\\n'), 0, includefiles, _this.defs);\r\n            return top;\r\n        }\r\n        var startTime = Date.now();\r\n        this._VS = _compile(vs);\r\n        this._PS = _compile(ps);\r\n        this._nameMap = nameMap;\r\n        if ((Date.now() - startTime) > 2)\r\n            console.log(\"ShaderCompile use time:\" + (Date.now() - startTime) + \"  size:\" + vs.length + \"/\" + ps.length);\r\n    }\r\n    static __init__() {\r\n        var gl = LayaGL.instance;\r\n        ShaderCompile.shaderParamsMap = { \"float\": gl.FLOAT, \"int\": gl.INT, \"bool\": gl.BOOL, \"vec2\": gl.FLOAT_VEC2, \"vec3\": gl.FLOAT_VEC3, \"vec4\": gl.FLOAT_VEC4, \"ivec2\": gl.INT_VEC2, \"ivec3\": gl.INT_VEC3, \"ivec4\": gl.INT_VEC4, \"bvec2\": gl.BOOL_VEC2, \"bvec3\": gl.BOOL_VEC3, \"bvec4\": gl.BOOL_VEC4, \"mat2\": gl.FLOAT_MAT2, \"mat3\": gl.FLOAT_MAT3, \"mat4\": gl.FLOAT_MAT4, \"sampler2D\": gl.SAMPLER_2D, \"samplerCube\": gl.SAMPLER_CUBE };\r\n    }\r\n    static _parseOne(attributes, uniforms, words, i, word, b) {\r\n        var one = { type: ShaderCompile.shaderParamsMap[words[i + 1]], name: words[i + 2], size: isNaN(parseInt(words[i + 3])) ? 1 : parseInt(words[i + 3]) };\r\n        if (b) {\r\n            if (word == \"attribute\") {\r\n                attributes.push(one);\r\n            }\r\n            else {\r\n                uniforms.push(one);\r\n            }\r\n        }\r\n        if (words[i + 3] == ':') {\r\n            one.type = words[i + 4];\r\n            i += 2;\r\n        }\r\n        i += 2;\r\n        return i;\r\n    }\r\n    static addInclude(fileName, txt) {\r\n        if (!txt || txt.length === 0)\r\n            throw new Error(\"add shader include file err:\" + fileName);\r\n        if (ShaderCompile.includes[fileName])\r\n            throw new Error(\"add shader include file err, has add:\" + fileName);\r\n        ShaderCompile.includes[fileName] = new InlcudeFile(txt);\r\n    }\r\n    static preGetParams(vs, ps) {\r\n        var text = [vs, ps];\r\n        var result = {};\r\n        var attributes = [];\r\n        var uniforms = [];\r\n        var definesInfo = {};\r\n        var definesName = [];\r\n        result.attributes = attributes;\r\n        result.uniforms = uniforms;\r\n        result.defines = definesInfo;\r\n        var i, n, one;\r\n        for (var s = 0; s < 2; s++) {\r\n            text[s] = text[s].replace(ShaderCompile._removeAnnotation, \"\");\r\n            var words = text[s].match(ShaderCompile._reg);\r\n            var tempelse;\r\n            for (i = 0, n = words.length; i < n; i++) {\r\n                var word = words[i];\r\n                if (word != \"attribute\" && word != \"uniform\") {\r\n                    if (word == \"#define\") {\r\n                        word = words[++i];\r\n                        definesName[word] = 1;\r\n                        continue;\r\n                    }\r\n                    else if (word == \"#ifdef\") {\r\n                        tempelse = words[++i];\r\n                        var def = definesInfo[tempelse] = definesInfo[tempelse] || [];\r\n                        for (i++; i < n; i++) {\r\n                            word = words[i];\r\n                            if (word != \"attribute\" && word != \"uniform\") {\r\n                                if (word == \"#else\") {\r\n                                    for (i++; i < n; i++) {\r\n                                        word = words[i];\r\n                                        if (word != \"attribute\" && word != \"uniform\") {\r\n                                            if (word == \"#endif\") {\r\n                                                break;\r\n                                            }\r\n                                            continue;\r\n                                        }\r\n                                        i = ShaderCompile._parseOne(attributes, uniforms, words, i, word, !definesName[tempelse]);\r\n                                    }\r\n                                }\r\n                                continue;\r\n                            }\r\n                            i = ShaderCompile._parseOne(attributes, uniforms, words, i, word, definesName[tempelse]);\r\n                        }\r\n                    }\r\n                    continue;\r\n                }\r\n                i = ShaderCompile._parseOne(attributes, uniforms, words, i, word, true);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    static splitToWords(str, block) {\r\n        var out = [];\r\n        var c;\r\n        var ofs = -1;\r\n        var word;\r\n        for (var i = 0, n = str.length; i < n; i++) {\r\n            c = str.charAt(i);\r\n            if (\" \\t=+-*/&%!<>()'\\\",;\".indexOf(c) >= 0) {\r\n                if (ofs >= 0 && (i - ofs) > 1) {\r\n                    word = str.substr(ofs, i - ofs);\r\n                    out.push(word);\r\n                }\r\n                if (c == '\"' || c == \"'\") {\r\n                    var ofs2 = str.indexOf(c, i + 1);\r\n                    if (ofs2 < 0) {\r\n                        throw \"Sharder err:\" + str;\r\n                    }\r\n                    out.push(str.substr(i + 1, ofs2 - i - 1));\r\n                    i = ofs2;\r\n                    ofs = -1;\r\n                    continue;\r\n                }\r\n                if (c == '(' && block && out.length > 0) {\r\n                    word = out[out.length - 1] + \";\";\r\n                    if (\"vec4;main;\".indexOf(word) < 0)\r\n                        block.useFuns += word;\r\n                }\r\n                ofs = -1;\r\n                continue;\r\n            }\r\n            if (ofs < 0)\r\n                ofs = i;\r\n        }\r\n        if (ofs < n && (n - ofs) > 1) {\r\n            word = str.substr(ofs, n - ofs);\r\n            out.push(word);\r\n        }\r\n        return out;\r\n    }\r\n    _compileToTree(parent, lines, start, includefiles, defs) {\r\n        var node, preNode;\r\n        var text, name, fname;\r\n        var ofs, words, noUseNode;\r\n        var i, n, j;\r\n        for (i = start; i < lines.length; i++) {\r\n            text = lines[i];\r\n            if (text.length < 1)\r\n                continue;\r\n            ofs = text.indexOf(\"//\");\r\n            if (ofs === 0)\r\n                continue;\r\n            if (ofs >= 0)\r\n                text = text.substr(0, ofs);\r\n            node = noUseNode || new ShaderNode(includefiles);\r\n            noUseNode = null;\r\n            node.text = text;\r\n            node.noCompile = true;\r\n            if ((ofs = text.indexOf(\"#\")) >= 0) {\r\n                name = \"#\";\r\n                for (j = ofs + 1, n = text.length; j < n; j++) {\r\n                    var c = text.charAt(j);\r\n                    if (c === ' ' || c === '\\t' || c === '?')\r\n                        break;\r\n                    name += c;\r\n                }\r\n                node.name = name;\r\n                switch (name) {\r\n                    case \"#ifdef\":\r\n                    case \"#ifndef\":\r\n                        node.src = text;\r\n                        node.noCompile = text.match(/[!&|()=<>]/) != null;\r\n                        if (!node.noCompile) {\r\n                            words = text.replace(/^\\s*/, '').split(/\\s+/);\r\n                            node.setCondition(words[1], name === \"#ifdef\" ? ShaderCompile.IFDEF_YES : ShaderCompile.IFDEF_ELSE);\r\n                            node.text = \"//\" + node.text;\r\n                        }\r\n                        else {\r\n                            console.log(\"function():Boolean{return \" + text.substr(ofs + node.name.length) + \"}\");\r\n                        }\r\n                        node.setParent(parent);\r\n                        parent = node;\r\n                        if (defs) {\r\n                            words = text.substr(j).split(ShaderCompile._splitToWordExps3);\r\n                            for (j = 0; j < words.length; j++) {\r\n                                text = words[j];\r\n                                text.length && (defs[text] = true);\r\n                            }\r\n                        }\r\n                        continue;\r\n                    case \"#if\":\r\n                        node.src = text;\r\n                        node.noCompile = true;\r\n                        node.setParent(parent);\r\n                        parent = node;\r\n                        if (defs) {\r\n                            words = text.substr(j).split(ShaderCompile._splitToWordExps3);\r\n                            for (j = 0; j < words.length; j++) {\r\n                                text = words[j];\r\n                                text.length && text != \"defined\" && (defs[text] = true);\r\n                            }\r\n                        }\r\n                        continue;\r\n                    case \"#else\":\r\n                        node.src = text;\r\n                        parent = parent.parent;\r\n                        preNode = parent.childs[parent.childs.length - 1];\r\n                        node.noCompile = preNode.noCompile;\r\n                        if (!node.noCompile) {\r\n                            node.condition = preNode.condition;\r\n                            node.conditionType = preNode.conditionType == ShaderCompile.IFDEF_YES ? ShaderCompile.IFDEF_ELSE : ShaderCompile.IFDEF_YES;\r\n                            node.text = \"//\" + node.text + \" \" + preNode.text + \" \" + node.conditionType;\r\n                        }\r\n                        node.setParent(parent);\r\n                        parent = node;\r\n                        continue;\r\n                    case \"#endif\":\r\n                        parent = parent.parent;\r\n                        preNode = parent.childs[parent.childs.length - 1];\r\n                        node.noCompile = preNode.noCompile;\r\n                        if (!node.noCompile) {\r\n                            node.text = \"//\" + node.text;\r\n                        }\r\n                        node.setParent(parent);\r\n                        continue;\r\n                    case \"#include\":\r\n                        words = ShaderCompile.splitToWords(text, null);\r\n                        var inlcudeFile = ShaderCompile.includes[words[1]];\r\n                        if (!inlcudeFile) {\r\n                            throw \"ShaderCompile error no this include file:\" + words[1];\r\n                        }\r\n                        if ((ofs = words[0].indexOf(\"?\")) < 0) {\r\n                            node.setParent(parent);\r\n                            text = inlcudeFile.getWith(words[2] == 'with' ? words[3] : null);\r\n                            this._compileToTree(node, text.split('\\n'), 0, includefiles, defs);\r\n                            node.text = \"\";\r\n                            continue;\r\n                        }\r\n                        node.setCondition(words[0].substr(ofs + 1), ShaderCompile.IFDEF_YES);\r\n                        node.text = inlcudeFile.getWith(words[2] == 'with' ? words[3] : null);\r\n                        break;\r\n                    case \"#import\":\r\n                        words = ShaderCompile.splitToWords(text, null);\r\n                        fname = words[1];\r\n                        includefiles.push({ node: node, file: ShaderCompile.includes[fname], ofs: node.text.length });\r\n                        continue;\r\n                }\r\n            }\r\n            else {\r\n                preNode = parent.childs[parent.childs.length - 1];\r\n                if (preNode && !preNode.name) {\r\n                    includefiles.length > 0 && ShaderCompile.splitToWords(text, preNode);\r\n                    noUseNode = node;\r\n                    preNode.text += \"\\n\" + text;\r\n                    continue;\r\n                }\r\n                includefiles.length > 0 && ShaderCompile.splitToWords(text, node);\r\n            }\r\n            node.setParent(parent);\r\n        }\r\n    }\r\n    createShader(define, shaderName, createShader, bindAttrib) {\r\n        var defMap = {};\r\n        var defineStr = \"\";\r\n        if (define) {\r\n            for (var i in define) {\r\n                defineStr += \"#define \" + i + \"\\n\";\r\n                defMap[i] = true;\r\n            }\r\n        }\r\n        var vs = this._VS.toscript(defMap, []);\r\n        var ps = this._PS.toscript(defMap, []);\r\n        return (createShader || Shader.create)(defineStr + vs.join('\\n'), defineStr + ps.join('\\n'), shaderName, this._nameMap, bindAttrib);\r\n    }\r\n}\r\nShaderCompile.IFDEF_NO = 0;\r\nShaderCompile.IFDEF_YES = 1;\r\nShaderCompile.IFDEF_ELSE = 2;\r\nShaderCompile.IFDEF_PARENT = 3;\r\nShaderCompile._removeAnnotation = new RegExp(\"(/\\\\*([^*]|[\\\\r\\\\\\n]|(\\\\*+([^*/]|[\\\\r\\\\n])))*\\\\*+/)|(//.*)\", \"g\");\r\nShaderCompile._reg = new RegExp(\"(\\\".*\\\")|('.*')|([#\\\\w\\\\*-\\\\.+/()=<>{}\\\\\\\\]+)|([,;:\\\\\\\\])\", \"g\");\r\nShaderCompile._splitToWordExps = new RegExp(\"[(\\\".*\\\")]+|[('.*')]+|([ \\\\t=\\\\+\\\\-*/&%!<>!%\\(\\),;])\", \"g\");\r\nShaderCompile.includes = {};\r\nShaderCompile._clearCR = new RegExp(\"\\r\", \"g\");\r\nShaderCompile._splitToWordExps3 = new RegExp(\"[ \\\\t=\\\\+\\\\-*/&%!<>!%\\(\\),;\\\\|]\", \"g\");\r\n//# sourceMappingURL=ShaderCompile.js.map",
  "references": [
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/layagl/LayaGL.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/shader/Shader.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/utils/InlcudeFile.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/utils/ShaderNode.ts"
  ],
  "map": "{\"version\":3,\"file\":\"ShaderCompile.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../libs/laya/webgl/utils/ShaderCompile.ts\"],\"names\":[],\"mappings\":\"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\"}",
  "dts": {
    "name": "D:/widgets/LayaDataStructuresAlgorithms/.rpt2_cache/placeholder/laya/webgl/utils/ShaderCompile.d.ts",
    "writeByteOrderMark": false,
    "text": "import { Shader } from \"../shader/Shader\";\r\nimport { ShaderNode } from \"./ShaderNode\";\r\nexport declare class ShaderCompile {\r\n    static IFDEF_NO: number;\r\n    static IFDEF_YES: number;\r\n    static IFDEF_ELSE: number;\r\n    static IFDEF_PARENT: number;\r\n    static _removeAnnotation: RegExp;\r\n    static _reg: RegExp;\r\n    static _splitToWordExps: RegExp;\r\n    static includes: any;\r\n    static shaderParamsMap: any;\r\n    private _nameMap;\r\n    protected _VS: ShaderNode;\r\n    protected _PS: ShaderNode;\r\n    static __init__(): void;\r\n    private static _parseOne;\r\n    static addInclude(fileName: string, txt: string): void;\r\n    static preGetParams(vs: string, ps: string): any;\r\n    static splitToWords(str: string, block: ShaderNode): any[];\r\n    static _clearCR: RegExp;\r\n    defs: Object;\r\n    constructor(vs: string, ps: string, nameMap: any);\r\n    static _splitToWordExps3: RegExp;\r\n    protected _compileToTree(parent: ShaderNode, lines: any[], start: number, includefiles: any[], defs: any): void;\r\n    createShader(define: any, shaderName: any, createShader: Function, bindAttrib: any[]): Shader;\r\n}\r\n"
  }
}
