{
  "code": "import { ILaya } from \"../../ILaya\";\r\nimport { Prefab } from \"../components/Prefab\";\r\nimport { Text } from \"../display/Text\";\r\nimport { Event } from \"../events/Event\";\r\nimport { EventDispatcher } from \"../events/EventDispatcher\";\r\nimport { SoundManager } from \"../media/SoundManager\";\r\nimport { BaseTexture } from \"../resource/BaseTexture\";\r\nimport { Texture } from \"../resource/Texture\";\r\nimport { Texture2D } from \"../resource/Texture2D\";\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { Byte } from \"../utils/Byte\";\r\nimport { Handler } from \"../utils/Handler\";\r\nimport { Utils } from \"../utils/Utils\";\r\nimport { BitmapFont } from \"./../display/BitmapFont\";\r\nimport { HttpRequest } from \"./HttpRequest\";\r\nimport { URL } from \"./URL\";\r\nimport { TextureFormat } from \"../resource/TextureFormat\";\r\nimport { WarpMode } from \"../resource/WrapMode\";\r\nexport class Loader extends EventDispatcher {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._customParse = false;\r\n    }\r\n    static getTypeFromUrl(url) {\r\n        var type = Utils.getFileExtension(url);\r\n        if (type)\r\n            return Loader.typeMap[type];\r\n        console.warn(\"Not recognize the resources suffix\", url);\r\n        return \"text\";\r\n    }\r\n    load(url, type = null, cache = true, group = null, ignoreCache = false, useWorkerLoader = ILaya.WorkerLoader.enable) {\r\n        if (!url) {\r\n            this.onLoaded(null);\r\n            return;\r\n        }\r\n        Loader.setGroup(url, \"666\");\r\n        this._url = url;\r\n        if (url.indexOf(\"data:image\") === 0)\r\n            type = Loader.IMAGE;\r\n        else\r\n            url = URL.formatURL(url);\r\n        this._type = type || (type = Loader.getTypeFromUrl(this._url));\r\n        this._cache = cache;\r\n        this._useWorkerLoader = useWorkerLoader;\r\n        this._data = null;\r\n        if (useWorkerLoader)\r\n            ILaya.WorkerLoader.enableWorkerLoader();\r\n        var cacheRes;\r\n        if (type == Loader.IMAGE)\r\n            cacheRes = Loader.textureMap[url];\r\n        else\r\n            cacheRes = Loader.loadedMap[url];\r\n        if (!ignoreCache && cacheRes) {\r\n            this._data = cacheRes;\r\n            this.event(Event.PROGRESS, 1);\r\n            this.event(Event.COMPLETE, this._data);\r\n            return;\r\n        }\r\n        if (group)\r\n            Loader.setGroup(url, group);\r\n        if (Loader.parserMap[type] != null) {\r\n            this._customParse = true;\r\n            if (Loader.parserMap[type] instanceof Handler)\r\n                Loader.parserMap[type].runWith(this);\r\n            else\r\n                Loader.parserMap[type].call(null, this);\r\n            return;\r\n        }\r\n        this._loadResourceFilter(type, url);\r\n    }\r\n    _loadResourceFilter(type, url) {\r\n        this._loadResource(type, url);\r\n    }\r\n    _loadResource(type, url) {\r\n        switch (type) {\r\n            case Loader.IMAGE:\r\n            case \"htmlimage\":\r\n            case \"nativeimage\":\r\n                this._loadImage(url);\r\n                break;\r\n            case Loader.SOUND:\r\n                this._loadSound(url);\r\n                break;\r\n            case Loader.TTF:\r\n                this._loadTTF(url);\r\n                break;\r\n            case Loader.ATLAS:\r\n            case Loader.PREFAB:\r\n            case Loader.PLF:\r\n                this._loadHttpRequestWhat(url, Loader.JSON);\r\n                break;\r\n            case Loader.FONT:\r\n                this._loadHttpRequestWhat(url, Loader.XML);\r\n                break;\r\n            case Loader.PLFB:\r\n                this._loadHttpRequestWhat(url, Loader.BUFFER);\r\n                break;\r\n            default:\r\n                this._loadHttpRequestWhat(url, type);\r\n        }\r\n    }\r\n    _loadHttpRequest(url, contentType, onLoadCaller, onLoad, onProcessCaller, onProcess, onErrorCaller, onError) {\r\n        if (Browser.onVVMiniGame) {\r\n            this._http = new HttpRequest();\r\n        }\r\n        else {\r\n            if (!this._http)\r\n                this._http = new HttpRequest();\r\n        }\r\n        onProcess && this._http.on(Event.PROGRESS, onProcessCaller, onProcess);\r\n        onLoad && this._http.on(Event.COMPLETE, onLoadCaller, onLoad);\r\n        this._http.on(Event.ERROR, onErrorCaller, onError);\r\n        this._http.send(url, null, \"get\", contentType);\r\n    }\r\n    _loadHtmlImage(url, onLoadCaller, onLoad, onErrorCaller, onError) {\r\n        var image;\r\n        function clear() {\r\n            var img = image;\r\n            img.onload = null;\r\n            img.onerror = null;\r\n            delete Loader._imgCache[url];\r\n        }\r\n        var onerror = function () {\r\n            clear();\r\n            onError.call(onErrorCaller);\r\n        };\r\n        var onload = function () {\r\n            clear();\r\n            onLoad.call(onLoadCaller, image);\r\n        };\r\n        image = new Browser.window.Image();\r\n        image.crossOrigin = \"\";\r\n        image.onload = onload;\r\n        image.onerror = onerror;\r\n        image.src = url;\r\n        Loader._imgCache[url] = image;\r\n    }\r\n    _loadHttpRequestWhat(url, contentType) {\r\n        if (Loader.preLoadedMap[url])\r\n            this.onLoaded(Loader.preLoadedMap[url]);\r\n        else\r\n            this._loadHttpRequest(url, contentType, this, this.onLoaded, this, this.onProgress, this, this.onError);\r\n    }\r\n    _loadTTF(url) {\r\n        url = URL.formatURL(url);\r\n        var ttfLoader = new ILaya.TTFLoader();\r\n        ttfLoader.complete = Handler.create(this, this.onLoaded);\r\n        ttfLoader.load(url);\r\n    }\r\n    _loadImage(url, isformatURL = true) {\r\n        var _this = this;\r\n        if (isformatURL)\r\n            url = URL.formatURL(url);\r\n        var onError = function () {\r\n            _this.event(Event.ERROR, \"Load image failed\");\r\n        };\r\n        if (this._type === \"nativeimage\") {\r\n            this._loadHtmlImage(url, this, this.onLoaded, this, onError);\r\n        }\r\n        else {\r\n            var ext = Utils.getFileExtension(url);\r\n            if (ext === \"ktx\" || ext === \"pvr\")\r\n                this._loadHttpRequest(url, Loader.BUFFER, this, this.onLoaded, this, this.onProgress, this, this.onError);\r\n            else\r\n                this._loadHtmlImage(url, this, this.onLoaded, this, onError);\r\n        }\r\n    }\r\n    _loadSound(url) {\r\n        var sound = (new SoundManager._soundClass());\r\n        var _this = this;\r\n        sound.on(Event.COMPLETE, this, soundOnload);\r\n        sound.on(Event.ERROR, this, soundOnErr);\r\n        sound.load(url);\r\n        function soundOnload() {\r\n            clear();\r\n            _this.onLoaded(sound);\r\n        }\r\n        function soundOnErr() {\r\n            clear();\r\n            sound.dispose();\r\n            _this.event(Event.ERROR, \"Load sound failed\");\r\n        }\r\n        function clear() {\r\n            sound.offAll();\r\n        }\r\n    }\r\n    onProgress(value) {\r\n        if (this._type === Loader.ATLAS)\r\n            this.event(Event.PROGRESS, value * 0.3);\r\n        else\r\n            this.event(Event.PROGRESS, value);\r\n    }\r\n    onError(message) {\r\n        this.event(Event.ERROR, message);\r\n    }\r\n    onLoaded(data = null) {\r\n        var type = this._type;\r\n        if (type == Loader.PLFB) {\r\n            this.parsePLFBData(data);\r\n            this.complete(data);\r\n        }\r\n        else if (type == Loader.PLF) {\r\n            this.parsePLFData(data);\r\n            this.complete(data);\r\n        }\r\n        else if (type === Loader.IMAGE) {\r\n            if (data instanceof ArrayBuffer) {\r\n                var ext = Utils.getFileExtension(this._url);\r\n                let format;\r\n                switch (ext) {\r\n                    case \"ktx\":\r\n                        format = TextureFormat.ETC1RGB;\r\n                        break;\r\n                    case \"pvr\":\r\n                        format = TextureFormat.PVRTCRGBA_4BPPV;\r\n                        break;\r\n                    default: {\r\n                        console.error('unknown format', ext);\r\n                        return;\r\n                    }\r\n                }\r\n                var tex = new Texture2D(0, 0, format, false, false);\r\n                tex.wrapModeU = WarpMode.Clamp;\r\n                tex.wrapModeV = WarpMode.Clamp;\r\n                tex.setCompressData(data);\r\n                tex._setCreateURL(this.url);\r\n            }\r\n            else if (!(data instanceof Texture2D)) {\r\n                var tex = new Texture2D(data.width, data.height, 1, false, false);\r\n                tex.wrapModeU = WarpMode.Clamp;\r\n                tex.wrapModeV = WarpMode.Clamp;\r\n                tex.loadImageSource(data, true);\r\n                tex._setCreateURL(data.src);\r\n            }\r\n            var texture = new Texture(tex);\r\n            texture.url = this._url;\r\n            this.complete(texture);\r\n        }\r\n        else if (type === Loader.SOUND || type === \"nativeimage\") {\r\n            this.complete(data);\r\n        }\r\n        else if (type === \"htmlimage\") {\r\n            var tex = new Texture2D(data.width, data.height, 1, false, false);\r\n            tex.wrapModeU = WarpMode.Clamp;\r\n            tex.wrapModeV = WarpMode.Clamp;\r\n            tex.loadImageSource(data, true);\r\n            tex._setCreateURL(data.src);\r\n            this.complete(tex);\r\n        }\r\n        else if (type === Loader.ATLAS) {\r\n            if (data.frames) {\r\n                var toloadPics = [];\r\n                if (!this._data) {\r\n                    this._data = data;\r\n                    if (data.meta && data.meta.image) {\r\n                        toloadPics = data.meta.image.split(\",\");\r\n                        var split = this._url.indexOf(\"/\") >= 0 ? \"/\" : \"\\\\\";\r\n                        var idx = this._url.lastIndexOf(split);\r\n                        var folderPath = idx >= 0 ? this._url.substr(0, idx + 1) : \"\";\r\n                        var changeType = null;\r\n                        if (Browser.onAndroid && data.meta.compressTextureAndroid) {\r\n                            changeType = \".ktx\";\r\n                        }\r\n                        if (Browser.onIOS && data.meta.compressTextureIOS) {\r\n                            changeType = \".pvr\";\r\n                        }\r\n                        for (var i = 0, len = toloadPics.length; i < len; i++) {\r\n                            if (changeType) {\r\n                                toloadPics[i] = folderPath + toloadPics[i].replace(\".png\", changeType);\r\n                            }\r\n                            else {\r\n                                toloadPics[i] = folderPath + toloadPics[i];\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        toloadPics = [this._url.replace(\".json\", \".png\")];\r\n                    }\r\n                    toloadPics.reverse();\r\n                    data.toLoads = toloadPics;\r\n                    data.pics = [];\r\n                }\r\n                this.event(Event.PROGRESS, 0.3 + 1 / toloadPics.length * 0.6);\r\n                return this._loadResourceFilter(Loader.IMAGE, toloadPics.pop());\r\n            }\r\n            else {\r\n                if (!(data instanceof Texture2D)) {\r\n                    var tex = new Texture2D(data.width, data.height, 1, false, false);\r\n                    tex.wrapModeU = BaseTexture.WARPMODE_CLAMP;\r\n                    tex.wrapModeV = BaseTexture.WARPMODE_CLAMP;\r\n                    tex.loadImageSource(data, true);\r\n                    tex._setCreateURL(data.src);\r\n                    data = tex;\r\n                }\r\n                this._data.pics.push(data);\r\n                if (this._data.toLoads.length > 0) {\r\n                    this.event(Event.PROGRESS, 0.3 + 1 / this._data.toLoads.length * 0.6);\r\n                    return this._loadResourceFilter(Loader.IMAGE, this._data.toLoads.pop());\r\n                }\r\n                var frames = this._data.frames;\r\n                var cleanUrl = this._url.split(\"?\")[0];\r\n                var directory = (this._data.meta && this._data.meta.prefix) ? this._data.meta.prefix : cleanUrl.substring(0, cleanUrl.lastIndexOf(\".\")) + \"/\";\r\n                var pics = this._data.pics;\r\n                var atlasURL = URL.formatURL(this._url);\r\n                var map = Loader.atlasMap[atlasURL] || (Loader.atlasMap[atlasURL] = []);\r\n                map.dir = directory;\r\n                var scaleRate = 1;\r\n                if (this._data.meta && this._data.meta.scale && this._data.meta.scale != 1) {\r\n                    scaleRate = parseFloat(this._data.meta.scale);\r\n                    for (var name in frames) {\r\n                        var obj = frames[name];\r\n                        var tPic = pics[obj.frame.idx ? obj.frame.idx : 0];\r\n                        var url = URL.formatURL(directory + name);\r\n                        tPic.scaleRate = scaleRate;\r\n                        var tTexture;\r\n                        tTexture = Texture._create(tPic, obj.frame.x, obj.frame.y, obj.frame.w, obj.frame.h, obj.spriteSourceSize.x, obj.spriteSourceSize.y, obj.sourceSize.w, obj.sourceSize.h, Loader.getRes(url));\r\n                        Loader.cacheTexture(url, tTexture);\r\n                        tTexture.url = url;\r\n                        map.push(url);\r\n                    }\r\n                }\r\n                else {\r\n                    for (name in frames) {\r\n                        obj = frames[name];\r\n                        tPic = pics[obj.frame.idx ? obj.frame.idx : 0];\r\n                        url = URL.formatURL(directory + name);\r\n                        tTexture = Texture._create(tPic, obj.frame.x, obj.frame.y, obj.frame.w, obj.frame.h, obj.spriteSourceSize.x, obj.spriteSourceSize.y, obj.sourceSize.w, obj.sourceSize.h, Loader.getRes(url));\r\n                        Loader.cacheTexture(url, tTexture);\r\n                        tTexture.url = url;\r\n                        map.push(url);\r\n                    }\r\n                }\r\n                delete this._data.pics;\r\n                this.complete(this._data);\r\n            }\r\n        }\r\n        else if (type === Loader.FONT) {\r\n            if (!data._source) {\r\n                this._data = data;\r\n                this.event(Event.PROGRESS, 0.5);\r\n                return this._loadResourceFilter(Loader.IMAGE, this._url.replace(\".fnt\", \".png\"));\r\n            }\r\n            else {\r\n                var bFont = new BitmapFont();\r\n                bFont.parseFont(this._data, new Texture(data));\r\n                var tArr = this._url.split(\".fnt\")[0].split(\"/\");\r\n                var fontName = tArr[tArr.length - 1];\r\n                Text.registerBitmapFont(fontName, bFont);\r\n                this._data = bFont;\r\n                this.complete(this._data);\r\n            }\r\n        }\r\n        else if (type === Loader.PREFAB) {\r\n            var prefab = new Prefab();\r\n            prefab.json = data;\r\n            this.complete(prefab);\r\n        }\r\n        else {\r\n            this.complete(data);\r\n        }\r\n    }\r\n    parsePLFData(plfData) {\r\n        var type;\r\n        var filePath;\r\n        var fileDic;\r\n        for (type in plfData) {\r\n            fileDic = plfData[type];\r\n            switch (type) {\r\n                case \"json\":\r\n                case \"text\":\r\n                    for (filePath in fileDic) {\r\n                        Loader.preLoadedMap[URL.formatURL(filePath)] = fileDic[filePath];\r\n                    }\r\n                    break;\r\n                default:\r\n                    for (filePath in fileDic) {\r\n                        Loader.preLoadedMap[URL.formatURL(filePath)] = fileDic[filePath];\r\n                    }\r\n            }\r\n        }\r\n    }\r\n    parsePLFBData(plfData) {\r\n        var byte;\r\n        byte = new Byte(plfData);\r\n        var i, len;\r\n        len = byte.getInt32();\r\n        for (i = 0; i < len; i++) {\r\n            this.parseOnePLFBFile(byte);\r\n        }\r\n    }\r\n    parseOnePLFBFile(byte) {\r\n        var fileLen;\r\n        var fileName;\r\n        var fileData;\r\n        fileName = byte.getUTFString();\r\n        fileLen = byte.getInt32();\r\n        fileData = byte.readArrayBuffer(fileLen);\r\n        Loader.preLoadedMap[URL.formatURL(fileName)] = fileData;\r\n    }\r\n    complete(data) {\r\n        this._data = data;\r\n        if (this._customParse) {\r\n            this.event(Event.LOADED, data instanceof Array ? [data] : data);\r\n        }\r\n        else {\r\n            Loader._loaders.push(this);\r\n            if (!Loader._isWorking)\r\n                Loader.checkNext();\r\n        }\r\n    }\r\n    static checkNext() {\r\n        Loader._isWorking = true;\r\n        var startTimer = Browser.now();\r\n        while (Loader._startIndex < Loader._loaders.length) {\r\n            Loader._loaders[Loader._startIndex].endLoad();\r\n            Loader._startIndex++;\r\n            if (Browser.now() - startTimer > Loader.maxTimeOut) {\r\n                console.warn(\"loader callback cost a long time:\" + (Browser.now() - startTimer) + \" url=\" + Loader._loaders[Loader._startIndex - 1].url);\r\n                ILaya.systemTimer.frameOnce(1, null, Loader.checkNext);\r\n                return;\r\n            }\r\n        }\r\n        Loader._loaders.length = 0;\r\n        Loader._startIndex = 0;\r\n        Loader._isWorking = false;\r\n    }\r\n    endLoad(content = null) {\r\n        content && (this._data = content);\r\n        if (this._cache)\r\n            Loader.cacheRes(this._url, this._data);\r\n        this.event(Event.PROGRESS, 1);\r\n        this.event(Event.COMPLETE, this.data instanceof Array ? [this.data] : this.data);\r\n    }\r\n    get url() {\r\n        return this._url;\r\n    }\r\n    get type() {\r\n        return this._type;\r\n    }\r\n    get cache() {\r\n        return this._cache;\r\n    }\r\n    get data() {\r\n        return this._data;\r\n    }\r\n    static clearRes(url) {\r\n        url = URL.formatURL(url);\r\n        var arr = Loader.getAtlas(url);\r\n        if (arr) {\r\n            for (var i = 0, n = arr.length; i < n; i++) {\r\n                var resUrl = arr[i];\r\n                var tex = Loader.getRes(resUrl);\r\n                delete Loader.textureMap[resUrl];\r\n                if (tex)\r\n                    tex.destroy();\r\n            }\r\n            arr.length = 0;\r\n            delete Loader.atlasMap[url];\r\n        }\r\n        var texture = Loader.textureMap[url];\r\n        if (texture) {\r\n            texture.destroy();\r\n            delete Loader.textureMap[url];\r\n        }\r\n        var res = Loader.loadedMap[url];\r\n        (res) && (delete Loader.loadedMap[url]);\r\n    }\r\n    static clearTextureRes(url) {\r\n        url = URL.formatURL(url);\r\n        var arr = Loader.getAtlas(url);\r\n        if (arr && arr.length > 0) {\r\n            arr.forEach(function (t) {\r\n                var tex = Loader.getRes(t);\r\n                if (tex instanceof Texture) {\r\n                    tex.disposeBitmap();\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            var t = Loader.getRes(url);\r\n            if (t instanceof Texture) {\r\n                t.disposeBitmap();\r\n            }\r\n        }\r\n    }\r\n    static getRes(url) {\r\n        var res = Loader.textureMap[URL.formatURL(url)];\r\n        if (res)\r\n            return res;\r\n        else\r\n            return Loader.loadedMap[URL.formatURL(url)];\r\n    }\r\n    static getAtlas(url) {\r\n        return Loader.atlasMap[URL.formatURL(url)];\r\n    }\r\n    static cacheRes(url, data) {\r\n        url = URL.formatURL(url);\r\n        if (Loader.loadedMap[url] != null) {\r\n            console.warn(\"Resources already exist,is repeated loading:\", url);\r\n        }\r\n        else {\r\n            if (data instanceof Texture) {\r\n                Loader.loadedMap[url] = data.bitmap;\r\n                Loader.textureMap[url] = data;\r\n            }\r\n            else {\r\n                Loader.loadedMap[url] = data;\r\n            }\r\n        }\r\n    }\r\n    static cacheTexture(url, data) {\r\n        url = URL.formatURL(url);\r\n        if (Loader.textureMap[url] != null) {\r\n            console.warn(\"Resources already exist,is repeated loading:\", url);\r\n        }\r\n        else {\r\n            Loader.textureMap[url] = data;\r\n        }\r\n    }\r\n    static setGroup(url, group) {\r\n        if (!Loader.groupMap[group])\r\n            Loader.groupMap[group] = [];\r\n        Loader.groupMap[group].push(url);\r\n    }\r\n    static clearResByGroup(group) {\r\n        if (!Loader.groupMap[group])\r\n            return;\r\n        var arr = Loader.groupMap[group], i, len = arr.length;\r\n        for (i = 0; i < len; i++) {\r\n            Loader.clearRes(arr[i]);\r\n        }\r\n        arr.length = 0;\r\n    }\r\n}\r\nLoader.TEXT = \"text\";\r\nLoader.JSON = \"json\";\r\nLoader.PREFAB = \"prefab\";\r\nLoader.XML = \"xml\";\r\nLoader.BUFFER = \"arraybuffer\";\r\nLoader.IMAGE = \"image\";\r\nLoader.SOUND = \"sound\";\r\nLoader.ATLAS = \"atlas\";\r\nLoader.FONT = \"font\";\r\nLoader.TTF = \"ttf\";\r\nLoader.PLF = \"plf\";\r\nLoader.PLFB = \"plfb\";\r\nLoader.HIERARCHY = \"HIERARCHY\";\r\nLoader.MESH = \"MESH\";\r\nLoader.MATERIAL = \"MATERIAL\";\r\nLoader.TEXTURE2D = \"TEXTURE2D\";\r\nLoader.TEXTURECUBE = \"TEXTURECUBE\";\r\nLoader.ANIMATIONCLIP = \"ANIMATIONCLIP\";\r\nLoader.AVATAR = \"AVATAR\";\r\nLoader.TERRAINHEIGHTDATA = \"TERRAINHEIGHTDATA\";\r\nLoader.TERRAINRES = \"TERRAIN\";\r\nLoader.typeMap = { \"ttf\": \"ttf\", \"png\": \"image\", \"jpg\": \"image\", \"jpeg\": \"image\", \"ktx\": \"image\", \"pvr\": \"image\", \"txt\": \"text\", \"json\": \"json\", \"prefab\": \"prefab\", \"xml\": \"xml\", \"als\": \"atlas\", \"atlas\": \"atlas\", \"mp3\": \"sound\", \"ogg\": \"sound\", \"wav\": \"sound\", \"part\": \"json\", \"fnt\": \"font\", \"plf\": \"plf\", \"plfb\": \"plfb\", \"scene\": \"json\", \"ani\": \"json\", \"sk\": \"arraybuffer\" };\r\nLoader.parserMap = {};\r\nLoader.maxTimeOut = 100;\r\nLoader.groupMap = {};\r\nLoader.loadedMap = {};\r\nLoader.atlasMap = {};\r\nLoader.textureMap = {};\r\nLoader.preLoadedMap = {};\r\nLoader._imgCache = {};\r\nLoader._loaders = [];\r\nLoader._isWorking = false;\r\nLoader._startIndex = 0;\r\n//# sourceMappingURL=Loader.js.map",
  "references": [
    "D:/widgets/LayaDataStructuresAlgorithms/libs/ILaya.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/components/Prefab.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/display/Text.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/events/Event.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/events/EventDispatcher.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/media/Sound.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/media/SoundManager.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/resource/BaseTexture.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/resource/Texture.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/resource/Texture2D.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/utils/Browser.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/utils/Byte.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/utils/Handler.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/utils/Utils.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/display/BitmapFont.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/net/HttpRequest.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/net/TTFLoader.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/net/URL.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/resource/TextureFormat.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/resource/WrapMode.ts"
  ],
  "map": "{\"version\":3,\"file\":\"Loader.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../libs/laya/net/Loader.ts\"],\"names\":[],\"mappings\":\"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\"}",
  "dts": {
    "name": "D:/widgets/LayaDataStructuresAlgorithms/.rpt2_cache/placeholder/laya/net/Loader.d.ts",
    "writeByteOrderMark": false,
    "text": "import { EventDispatcher } from \"../events/EventDispatcher\";\r\nimport { Texture } from \"../resource/Texture\";\r\nimport { HttpRequest } from \"./HttpRequest\";\r\nexport declare class Loader extends EventDispatcher {\r\n    static TEXT: string;\r\n    static JSON: string;\r\n    static PREFAB: string;\r\n    static XML: string;\r\n    static BUFFER: string;\r\n    static IMAGE: string;\r\n    static SOUND: string;\r\n    static ATLAS: string;\r\n    static FONT: string;\r\n    static TTF: string;\r\n    static PLF: string;\r\n    static PLFB: string;\r\n    static HIERARCHY: string;\r\n    static MESH: string;\r\n    static MATERIAL: string;\r\n    static TEXTURE2D: string;\r\n    static TEXTURECUBE: string;\r\n    static ANIMATIONCLIP: string;\r\n    static AVATAR: string;\r\n    static TERRAINHEIGHTDATA: string;\r\n    static TERRAINRES: string;\r\n    static typeMap: {\r\n        [key: string]: string;\r\n    };\r\n    static parserMap: any;\r\n    static maxTimeOut: number;\r\n    static groupMap: {\r\n        [key: string]: string[];\r\n    };\r\n    static loadedMap: {\r\n        [key: string]: any;\r\n    };\r\n    static atlasMap: {\r\n        [key: string]: any[];\r\n    };\r\n    static textureMap: {\r\n        [key: string]: Texture;\r\n    };\r\n    static preLoadedMap: {\r\n        [key: string]: ArrayBuffer;\r\n    };\r\n    protected static _imgCache: {\r\n        [key: string]: HTMLImageElement;\r\n    };\r\n    protected static _loaders: Loader[];\r\n    protected static _isWorking: boolean;\r\n    protected static _startIndex: number;\r\n    static getTypeFromUrl(url: string): string;\r\n    _data: any;\r\n    protected _url: string;\r\n    protected _type: string;\r\n    _cache: boolean;\r\n    protected _http: HttpRequest;\r\n    protected _useWorkerLoader: boolean;\r\n    _customParse: boolean;\r\n    _constructParams: any[] | null;\r\n    _propertyParams: any;\r\n    _createCache: boolean;\r\n    load(url: string, type?: string | null, cache?: boolean, group?: string | null, ignoreCache?: boolean, useWorkerLoader?: boolean): void;\r\n    _loadResourceFilter(type: string, url: string): void;\r\n    private _loadResource;\r\n    private _loadHttpRequest;\r\n    private _loadHtmlImage;\r\n    _loadHttpRequestWhat(url: string, contentType: string): void;\r\n    protected _loadTTF(url: string): void;\r\n    protected _loadImage(url: string, isformatURL?: boolean): void;\r\n    _loadSound(url: string): void;\r\n    protected onProgress(value: number): void;\r\n    protected onError(message: string): void;\r\n    protected onLoaded(data?: any): void;\r\n    private parsePLFData;\r\n    private parsePLFBData;\r\n    private parseOnePLFBFile;\r\n    protected complete(data: any): void;\r\n    private static checkNext;\r\n    endLoad(content?: any): void;\r\n    readonly url: string;\r\n    readonly type: string;\r\n    readonly cache: boolean;\r\n    readonly data: any;\r\n    static clearRes(url: string): void;\r\n    static clearTextureRes(url: string): void;\r\n    static getRes(url: string): any;\r\n    static getAtlas(url: string): any[];\r\n    static cacheRes(url: string, data: any): void;\r\n    static cacheTexture(url: string, data: Texture): void;\r\n    static setGroup(url: string, group: string): void;\r\n    static clearResByGroup(group: string): void;\r\n}\r\n"
  }
}
