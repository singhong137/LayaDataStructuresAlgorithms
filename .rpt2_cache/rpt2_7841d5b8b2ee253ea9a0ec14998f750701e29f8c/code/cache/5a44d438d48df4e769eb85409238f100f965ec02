{
  "code": "import { ILaya } from \"../../../ILaya\";\r\nexport class ShaderNode {\r\n    constructor(includefiles) {\r\n        this.childs = [];\r\n        this.text = \"\";\r\n        this.useFuns = \"\";\r\n        this.z = 0;\r\n        this.includefiles = includefiles;\r\n    }\r\n    setParent(parent) {\r\n        parent.childs.push(this);\r\n        this.z = parent.z + 1;\r\n        this.parent = parent;\r\n    }\r\n    setCondition(condition, type) {\r\n        if (condition) {\r\n            this.conditionType = type;\r\n            condition = condition.replace(/(\\s*$)/g, \"\");\r\n            this.condition = function () {\r\n                return this[condition];\r\n            };\r\n            this.condition.__condition = condition;\r\n        }\r\n    }\r\n    toscript(def, out) {\r\n        return this._toscript(def, out, ++ShaderNode.__id);\r\n    }\r\n    _toscript(def, out, id) {\r\n        if (this.childs.length < 1 && !this.text)\r\n            return out;\r\n        var outIndex = out.length;\r\n        if (this.condition) {\r\n            var ifdef = !!this.condition.call(def);\r\n            this.conditionType === ILaya.ShaderCompile.IFDEF_ELSE && (ifdef = !ifdef);\r\n            if (!ifdef)\r\n                return out;\r\n        }\r\n        this.text && out.push(this.text);\r\n        this.childs.length > 0 && this.childs.forEach(function (o, index, arr) {\r\n            o._toscript(def, out, id);\r\n        });\r\n        if (this.includefiles.length > 0 && this.useFuns.length > 0) {\r\n            var funsCode;\r\n            for (var i = 0, n = this.includefiles.length; i < n; i++) {\r\n                if (this.includefiles[i].curUseID == id) {\r\n                    continue;\r\n                }\r\n                funsCode = this.includefiles[i].file.getFunsScript(this.useFuns);\r\n                if (funsCode.length > 0) {\r\n                    this.includefiles[i].curUseID = id;\r\n                    out[0] = funsCode + out[0];\r\n                }\r\n            }\r\n        }\r\n        return out;\r\n    }\r\n}\r\nShaderNode.__id = 1;\r\n//# sourceMappingURL=ShaderNode.js.map",
  "references": [
    "D:/widgets/LayaDataStructuresAlgorithms/libs/ILaya.ts"
  ],
  "map": "{\"version\":3,\"file\":\"ShaderNode.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../libs/laya/webgl/utils/ShaderNode.ts\"],\"names\":[],\"mappings\":\"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\"}",
  "dts": {
    "name": "D:/widgets/LayaDataStructuresAlgorithms/.rpt2_cache/placeholder/laya/webgl/utils/ShaderNode.d.ts",
    "writeByteOrderMark": false,
    "text": "export declare class ShaderNode {\r\n    private static __id;\r\n    childs: any[];\r\n    text: string;\r\n    parent: ShaderNode;\r\n    name: string;\r\n    noCompile: boolean;\r\n    includefiles: any[];\r\n    condition: any;\r\n    conditionType: number;\r\n    useFuns: string;\r\n    z: number;\r\n    src: string;\r\n    constructor(includefiles: any[]);\r\n    setParent(parent: ShaderNode): void;\r\n    setCondition(condition: string, type: number): void;\r\n    toscript(def: any, out: any[]): any[];\r\n    private _toscript;\r\n}\r\n"
  }
}
