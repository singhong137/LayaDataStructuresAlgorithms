{
  "code": "export class FontInfo {\r\n    constructor(font) {\r\n        this._font = \"14px Arial\";\r\n        this._family = \"Arial\";\r\n        this._size = 14;\r\n        this._italic = false;\r\n        this._bold = false;\r\n        this._id = FontInfo._gfontID++;\r\n        this.setFont(font || this._font);\r\n    }\r\n    static Parse(font) {\r\n        if (font === FontInfo._lastFont) {\r\n            return FontInfo._lastFontInfo;\r\n        }\r\n        var r = FontInfo._cache[font];\r\n        if (!r) {\r\n            r = FontInfo._cache[font] = new FontInfo(font);\r\n        }\r\n        FontInfo._lastFont = font;\r\n        FontInfo._lastFontInfo = r;\r\n        return r;\r\n    }\r\n    setFont(value) {\r\n        this._font = value;\r\n        var _words = value.split(' ');\r\n        var l = _words.length;\r\n        if (l < 2) {\r\n            if (l == 1) {\r\n                if (_words[0].indexOf('px') > 0) {\r\n                    this._size = parseInt(_words[0]);\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        var szpos = -1;\r\n        for (var i = 0; i < l; i++) {\r\n            if (_words[i].indexOf('px') > 0 || _words[i].indexOf('pt') > 0) {\r\n                szpos = i;\r\n                this._size = parseInt(_words[i]);\r\n                if (this._size <= 0) {\r\n                    console.error('font parse error:' + value);\r\n                    this._size = 14;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        var fpos = szpos + 1;\r\n        var familys = _words[fpos];\r\n        fpos++;\r\n        for (; fpos < l; fpos++) {\r\n            familys += ' ' + _words[fpos];\r\n        }\r\n        this._family = (familys.split(','))[0];\r\n        this._italic = _words.indexOf('italic') >= 0;\r\n        this._bold = _words.indexOf('bold') >= 0;\r\n    }\r\n}\r\nFontInfo.EMPTY = new FontInfo(null);\r\nFontInfo._cache = {};\r\nFontInfo._gfontID = 0;\r\nFontInfo._lastFont = '';\r\n//# sourceMappingURL=FontInfo.js.map",
  "references": [],
  "map": "{\"version\":3,\"file\":\"FontInfo.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../libs/laya/utils/FontInfo.ts\"],\"names\":[],\"mappings\":\"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\"}",
  "dts": {
    "name": "D:/widgets/LayaDataStructuresAlgorithms/.rpt2_cache/placeholder/laya/utils/FontInfo.d.ts",
    "writeByteOrderMark": false,
    "text": "export declare class FontInfo {\r\n    static EMPTY: FontInfo;\r\n    private static _cache;\r\n    private static _gfontID;\r\n    private static _lastFont;\r\n    private static _lastFontInfo;\r\n    static Parse(font: string): FontInfo;\r\n    _id: number;\r\n    _font: string;\r\n    _family: string;\r\n    _size: number;\r\n    _italic: boolean;\r\n    _bold: boolean;\r\n    constructor(font: string);\r\n    setFont(value: string): void;\r\n}\r\n"
  }
}
