{
  "code": "export class BasePoly {\r\n    static createLine2(p, indices, lineWidth, indexBase, outVertex, loop) {\r\n        if (p.length < 4)\r\n            return null;\r\n        var points = BasePoly.tempData.length > (p.length + 2) ? BasePoly.tempData : new Array(p.length + 2);\r\n        points[0] = p[0];\r\n        points[1] = p[1];\r\n        var newlen = 2;\r\n        var i = 0;\r\n        var length = p.length;\r\n        for (i = 2; i < length; i += 2) {\r\n            if (Math.abs(p[i] - p[i - 2]) + Math.abs(p[i + 1] - p[i - 1]) > 0.01) {\r\n                points[newlen++] = p[i];\r\n                points[newlen++] = p[i + 1];\r\n            }\r\n        }\r\n        if (loop && Math.abs(p[0] - points[newlen - 2]) + Math.abs(p[1] - points[newlen - 1]) > 0.01) {\r\n            points[newlen++] = p[0];\r\n            points[newlen++] = p[1];\r\n        }\r\n        var result = outVertex;\r\n        length = newlen / 2;\r\n        var w = lineWidth / 2;\r\n        var px, py, p1x, p1y, p2x, p2y, p3x, p3y;\r\n        var perpx, perpy, perp2x, perp2y, perp3x, perp3y;\r\n        var a1, b1, c1, a2, b2, c2;\r\n        var denom, pdist, dist;\r\n        p1x = points[0];\r\n        p1y = points[1];\r\n        p2x = points[2];\r\n        p2y = points[3];\r\n        perpx = -(p1y - p2y);\r\n        perpy = p1x - p2x;\r\n        dist = Math.sqrt(perpx * perpx + perpy * perpy);\r\n        perpx = perpx / dist * w;\r\n        perpy = perpy / dist * w;\r\n        result.push(p1x - perpx, p1y - perpy, p1x + perpx, p1y + perpy);\r\n        for (i = 1; i < length - 1; i++) {\r\n            p1x = points[(i - 1) * 2];\r\n            p1y = points[(i - 1) * 2 + 1];\r\n            p2x = points[(i) * 2];\r\n            p2y = points[(i) * 2 + 1];\r\n            p3x = points[(i + 1) * 2];\r\n            p3y = points[(i + 1) * 2 + 1];\r\n            perpx = -(p1y - p2y);\r\n            perpy = p1x - p2x;\r\n            dist = Math.sqrt(perpx * perpx + perpy * perpy);\r\n            perpx = perpx / dist * w;\r\n            perpy = perpy / dist * w;\r\n            perp2x = -(p2y - p3y);\r\n            perp2y = p2x - p3x;\r\n            dist = Math.sqrt(perp2x * perp2x + perp2y * perp2y);\r\n            perp2x = perp2x / dist * w;\r\n            perp2y = perp2y / dist * w;\r\n            a1 = (-perpy + p1y) - (-perpy + p2y);\r\n            b1 = (-perpx + p2x) - (-perpx + p1x);\r\n            c1 = (-perpx + p1x) * (-perpy + p2y) - (-perpx + p2x) * (-perpy + p1y);\r\n            a2 = (-perp2y + p3y) - (-perp2y + p2y);\r\n            b2 = (-perp2x + p2x) - (-perp2x + p3x);\r\n            c2 = (-perp2x + p3x) * (-perp2y + p2y) - (-perp2x + p2x) * (-perp2y + p3y);\r\n            denom = a1 * b2 - a2 * b1;\r\n            if (Math.abs(denom) < 0.1) {\r\n                denom += 10.1;\r\n                result.push(p2x - perpx, p2y - perpy, p2x + perpx, p2y + perpy);\r\n                continue;\r\n            }\r\n            px = (b1 * c2 - b2 * c1) / denom;\r\n            py = (a2 * c1 - a1 * c2) / denom;\r\n            pdist = (px - p2x) * (px - p2x) + (py - p2y) + (py - p2y);\r\n            result.push(px, py, p2x - (px - p2x), p2y - (py - p2y));\r\n        }\r\n        p1x = points[newlen - 4];\r\n        p1y = points[newlen - 3];\r\n        p2x = points[newlen - 2];\r\n        p2y = points[newlen - 1];\r\n        perpx = -(p1y - p2y);\r\n        perpy = p1x - p2x;\r\n        dist = Math.sqrt(perpx * perpx + perpy * perpy);\r\n        perpx = perpx / dist * w;\r\n        perpy = perpy / dist * w;\r\n        result.push(p2x - perpx, p2y - perpy, p2x + perpx, p2y + perpy);\r\n        for (i = 1; i < length; i++) {\r\n            indices.push(indexBase + (i - 1) * 2, indexBase + (i - 1) * 2 + 1, indexBase + i * 2 + 1, indexBase + i * 2 + 1, indexBase + i * 2, indexBase + (i - 1) * 2);\r\n        }\r\n        return result;\r\n    }\r\n    static createLineTriangle(path, color, width, loop, outvb, vbstride, outib) {\r\n        var points = path.slice();\r\n        var ptlen = points.length;\r\n        var p1x = points[0], p1y = points[1];\r\n        var p2x = points[2], p2y = points[2];\r\n        var len = 0;\r\n        var rp = 0;\r\n        var dx = 0, dy = 0;\r\n        var pointnum = ptlen / 2;\r\n        if (pointnum <= 1)\r\n            return;\r\n        if (pointnum == 2) {\r\n            return;\r\n        }\r\n        var tmpData = new Array(pointnum * 4);\r\n        var realPtNum = 0;\r\n        var ci = 0;\r\n        for (var i = 0; i < pointnum - 1; i++) {\r\n            p1x = points[ci++], p1y = points[ci++];\r\n            p2x = points[ci++], p2y = points[ci++];\r\n            dx = p2x - p1x, dy = p2y - p1y;\r\n            if (dx != 0 && dy != 0) {\r\n                len = Math.sqrt(dx * dx + dy * dy);\r\n                if (len > 1e-3) {\r\n                    rp = realPtNum * 4;\r\n                    tmpData[rp] = p1x;\r\n                    tmpData[rp + 1] = p1y;\r\n                    tmpData[rp + 2] = dx / len;\r\n                    tmpData[rp + 3] = dy / len;\r\n                    realPtNum++;\r\n                }\r\n            }\r\n        }\r\n        if (loop) {\r\n            p1x = points[ptlen - 2], p1y = points[ptlen - 1];\r\n            p2x = points[0], p2y = points[1];\r\n            dx = p2x - p1x, dy = p2y - p1y;\r\n            if (dx != 0 && dy != 0) {\r\n                len = Math.sqrt(dx * dx + dy * dy);\r\n                if (len > 1e-3) {\r\n                    rp = realPtNum * 4;\r\n                    tmpData[rp] = p1x;\r\n                    tmpData[rp + 1] = p1y;\r\n                    tmpData[rp + 2] = dx / len;\r\n                    tmpData[rp + 3] = dy / len;\r\n                    realPtNum++;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            rp = realPtNum * 4;\r\n            tmpData[rp] = p1x;\r\n            tmpData[rp + 1] = p1y;\r\n            tmpData[rp + 2] = dx / len;\r\n            tmpData[rp + 3] = dy / len;\r\n            realPtNum++;\r\n        }\r\n        ci = 0;\r\n        for (i = 0; i < pointnum; i++) {\r\n            p1x = points[ci], p1y = points[ci + 1];\r\n            p2x = points[ci + 2], p2y = points[ci + 3];\r\n        }\r\n        if (loop) {\r\n        }\r\n    }\r\n}\r\nBasePoly.tempData = new Array(256);\r\n//# sourceMappingURL=BasePoly.js.map",
  "references": [],
  "map": "{\"version\":3,\"file\":\"BasePoly.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../libs/laya/webgl/shapes/BasePoly.ts\"],\"names\":[],\"mappings\":\"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\"}",
  "dts": {
    "name": "D:/widgets/LayaDataStructuresAlgorithms/.rpt2_cache/placeholder/laya/webgl/shapes/BasePoly.d.ts",
    "writeByteOrderMark": false,
    "text": "export declare class BasePoly {\r\n    private static tempData;\r\n    static createLine2(p: any[], indices: any[], lineWidth: number, indexBase: number, outVertex: any[], loop: boolean): any[];\r\n    static createLineTriangle(path: any[], color: number, width: number, loop: boolean, outvb: Float32Array, vbstride: number, outib: Uint16Array): void;\r\n}\r\n"
  }
}
