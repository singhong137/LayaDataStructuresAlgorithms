{
  "code": "import { LayaGL } from \"../../layagl/LayaGL\";\r\nimport { RenderInfo } from \"../../renders/RenderInfo\";\r\nimport { BaseShader } from \"../shader/BaseShader\";\r\nimport { Buffer } from \"./Buffer\";\r\nexport class Buffer2D extends Buffer {\r\n    constructor() {\r\n        super();\r\n        this._maxsize = 0;\r\n        this._upload = true;\r\n        this._uploadSize = 0;\r\n        this._bufferSize = 0;\r\n        this._u8Array = null;\r\n    }\r\n    static __int__(gl) {\r\n    }\r\n    get bufferLength() {\r\n        return this._buffer.byteLength;\r\n    }\r\n    set byteLength(value) {\r\n        this.setByteLength(value);\r\n    }\r\n    setByteLength(value) {\r\n        if (this._byteLength !== value) {\r\n            value <= this._bufferSize || (this._resizeBuffer(value * 2 + 256, true));\r\n            this._byteLength = value;\r\n        }\r\n    }\r\n    needSize(sz) {\r\n        var old = this._byteLength;\r\n        if (sz) {\r\n            var needsz = this._byteLength + sz;\r\n            needsz <= this._bufferSize || (this._resizeBuffer(needsz << 1, true));\r\n            this._byteLength = needsz;\r\n        }\r\n        return old;\r\n    }\r\n    _bufferData() {\r\n        this._maxsize = Math.max(this._maxsize, this._byteLength);\r\n        if (RenderInfo.loopCount % 30 == 0) {\r\n            if (this._buffer.byteLength > (this._maxsize + 64)) {\r\n                this._buffer = this._buffer.slice(0, this._maxsize + 64);\r\n                this._bufferSize = this._buffer.byteLength;\r\n                this._checkArrayUse();\r\n            }\r\n            this._maxsize = this._byteLength;\r\n        }\r\n        if (this._uploadSize < this._buffer.byteLength) {\r\n            this._uploadSize = this._buffer.byteLength;\r\n            LayaGL.instance.bufferData(this._bufferType, this._uploadSize, this._bufferUsage);\r\n        }\r\n        LayaGL.instance.bufferSubData(this._bufferType, 0, new Uint8Array(this._buffer, 0, this._byteLength));\r\n    }\r\n    _bufferSubData(offset = 0, dataStart = 0, dataLength = 0) {\r\n        this._maxsize = Math.max(this._maxsize, this._byteLength);\r\n        if (RenderInfo.loopCount % 30 == 0) {\r\n            if (this._buffer.byteLength > (this._maxsize + 64)) {\r\n                this._buffer = this._buffer.slice(0, this._maxsize + 64);\r\n                this._bufferSize = this._buffer.byteLength;\r\n                this._checkArrayUse();\r\n            }\r\n            this._maxsize = this._byteLength;\r\n        }\r\n        if (this._uploadSize < this._buffer.byteLength) {\r\n            this._uploadSize = this._buffer.byteLength;\r\n            LayaGL.instance.bufferData(this._bufferType, this._uploadSize, this._bufferUsage);\r\n        }\r\n        if (dataStart || dataLength) {\r\n            var subBuffer = this._buffer.slice(dataStart, dataLength);\r\n            LayaGL.instance.bufferSubData(this._bufferType, offset, subBuffer);\r\n        }\r\n        else {\r\n            LayaGL.instance.bufferSubData(this._bufferType, offset, this._buffer);\r\n        }\r\n    }\r\n    _checkArrayUse() {\r\n    }\r\n    _bind_uploadForVAO() {\r\n        if (!this._upload)\r\n            return false;\r\n        this._upload = false;\r\n        this._bindForVAO();\r\n        this._bufferData();\r\n        return true;\r\n    }\r\n    _bind_upload() {\r\n        if (!this._upload)\r\n            return false;\r\n        this._upload = false;\r\n        this.bind();\r\n        this._bufferData();\r\n        return true;\r\n    }\r\n    _bind_subUpload(offset = 0, dataStart = 0, dataLength = 0) {\r\n        if (!this._upload)\r\n            return false;\r\n        this._upload = false;\r\n        this.bind();\r\n        this._bufferSubData(offset, dataStart, dataLength);\r\n        return true;\r\n    }\r\n    _resizeBuffer(nsz, copy) {\r\n        var buff = this._buffer;\r\n        if (nsz <= buff.byteLength)\r\n            return this;\r\n        var u8buf = this._u8Array;\r\n        if (copy && buff && buff.byteLength > 0) {\r\n            var newbuffer = new ArrayBuffer(nsz);\r\n            var oldU8Arr = (u8buf && u8buf.buffer == buff) ? u8buf : new Uint8Array(buff);\r\n            u8buf = this._u8Array = new Uint8Array(newbuffer);\r\n            u8buf.set(oldU8Arr, 0);\r\n            buff = this._buffer = newbuffer;\r\n        }\r\n        else {\r\n            buff = this._buffer = new ArrayBuffer(nsz);\r\n            this._u8Array = null;\r\n        }\r\n        this._checkArrayUse();\r\n        this._upload = true;\r\n        this._bufferSize = buff.byteLength;\r\n        return this;\r\n    }\r\n    append(data) {\r\n        this._upload = true;\r\n        var byteLen, n;\r\n        byteLen = data.byteLength;\r\n        if (data instanceof Uint8Array) {\r\n            this._resizeBuffer(this._byteLength + byteLen, true);\r\n            n = new Uint8Array(this._buffer, this._byteLength);\r\n        }\r\n        else if (data instanceof Uint16Array) {\r\n            this._resizeBuffer(this._byteLength + byteLen, true);\r\n            n = new Uint16Array(this._buffer, this._byteLength);\r\n        }\r\n        else if (data instanceof Float32Array) {\r\n            this._resizeBuffer(this._byteLength + byteLen, true);\r\n            n = new Float32Array(this._buffer, this._byteLength);\r\n        }\r\n        n.set(data, 0);\r\n        this._byteLength += byteLen;\r\n        this._checkArrayUse();\r\n    }\r\n    appendU16Array(data, len) {\r\n        this._resizeBuffer(this._byteLength + len * 2, true);\r\n        var u = new Uint16Array(this._buffer, this._byteLength, len);\r\n        if (len == 6) {\r\n            u[0] = data[0];\r\n            u[1] = data[1];\r\n            u[2] = data[2];\r\n            u[3] = data[3];\r\n            u[4] = data[4];\r\n            u[5] = data[5];\r\n        }\r\n        else if (len >= 100) {\r\n            u.set(new Uint16Array(data.buffer, 0, len));\r\n        }\r\n        else {\r\n            for (var i = 0; i < len; i++) {\r\n                u[i] = data[i];\r\n            }\r\n        }\r\n        this._byteLength += len * 2;\r\n        this._checkArrayUse();\r\n    }\r\n    appendEx(data, type) {\r\n        this._upload = true;\r\n        var byteLen, n;\r\n        byteLen = data.byteLength;\r\n        this._resizeBuffer(this._byteLength + byteLen, true);\r\n        n = new type(this._buffer, this._byteLength);\r\n        n.set(data, 0);\r\n        this._byteLength += byteLen;\r\n        this._checkArrayUse();\r\n    }\r\n    appendEx2(data, type, dataLen, perDataLen = 1) {\r\n        this._upload = true;\r\n        var byteLen, n;\r\n        byteLen = dataLen * perDataLen;\r\n        this._resizeBuffer(this._byteLength + byteLen, true);\r\n        n = new type(this._buffer, this._byteLength);\r\n        var i;\r\n        for (i = 0; i < dataLen; i++) {\r\n            n[i] = data[i];\r\n        }\r\n        this._byteLength += byteLen;\r\n        this._checkArrayUse();\r\n    }\r\n    getBuffer() {\r\n        return this._buffer;\r\n    }\r\n    setNeedUpload() {\r\n        this._upload = true;\r\n    }\r\n    getNeedUpload() {\r\n        return this._upload;\r\n    }\r\n    upload() {\r\n        var gl = LayaGL.instance;\r\n        var scuess = this._bind_upload();\r\n        gl.bindBuffer(this._bufferType, null);\r\n        if (this._bufferType == gl.ARRAY_BUFFER)\r\n            Buffer._bindedVertexBuffer = null;\r\n        if (this._bufferType == gl.ELEMENT_ARRAY_BUFFER)\r\n            Buffer._bindedIndexBuffer = null;\r\n        BaseShader.activeShader = null;\r\n        return scuess;\r\n    }\r\n    subUpload(offset = 0, dataStart = 0, dataLength = 0) {\r\n        var gl = LayaGL.instance;\r\n        var scuess = this._bind_subUpload();\r\n        gl.bindBuffer(this._bufferType, null);\r\n        if (this._bufferType == gl.ARRAY_BUFFER)\r\n            Buffer._bindedVertexBuffer = null;\r\n        if (this._bufferType == gl.ELEMENT_ARRAY_BUFFER)\r\n            Buffer._bindedIndexBuffer = null;\r\n        BaseShader.activeShader = null;\r\n        return scuess;\r\n    }\r\n    _disposeResource() {\r\n        this._upload = true;\r\n        this._uploadSize = 0;\r\n    }\r\n    clear() {\r\n        this._byteLength = 0;\r\n        this._upload = true;\r\n    }\r\n}\r\nBuffer2D.FLOAT32 = 4;\r\nBuffer2D.SHORT = 2;\r\n//# sourceMappingURL=Buffer2D.js.map",
  "references": [
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/layagl/LayaGL.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/renders/RenderInfo.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/shader/BaseShader.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/WebGLContext.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/utils/Buffer.ts"
  ],
  "map": "{\"version\":3,\"file\":\"Buffer2D.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../libs/laya/webgl/utils/Buffer2D.ts\"],\"names\":[],\"mappings\":\"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\"}",
  "dts": {
    "name": "D:/widgets/LayaDataStructuresAlgorithms/.rpt2_cache/placeholder/laya/webgl/utils/Buffer2D.d.ts",
    "writeByteOrderMark": false,
    "text": "import { WebGLContext } from \"../WebGLContext\";\r\nimport { Buffer } from \"./Buffer\";\r\nexport declare class Buffer2D extends Buffer {\r\n    static FLOAT32: number;\r\n    static SHORT: number;\r\n    static __int__(gl: WebGLContext): void;\r\n    protected _maxsize: number;\r\n    _upload: boolean;\r\n    protected _uploadSize: number;\r\n    protected _bufferSize: number;\r\n    protected _u8Array: Uint8Array;\r\n    readonly bufferLength: number;\r\n    byteLength: number;\r\n    setByteLength(value: number): void;\r\n    needSize(sz: number): number;\r\n    constructor();\r\n    protected _bufferData(): void;\r\n    protected _bufferSubData(offset?: number, dataStart?: number, dataLength?: number): void;\r\n    protected _checkArrayUse(): void;\r\n    _bind_uploadForVAO(): boolean;\r\n    _bind_upload(): boolean;\r\n    _bind_subUpload(offset?: number, dataStart?: number, dataLength?: number): boolean;\r\n    _resizeBuffer(nsz: number, copy: boolean): Buffer2D;\r\n    append(data: any): void;\r\n    appendU16Array(data: Uint16Array, len: number): void;\r\n    appendEx(data: any, type: new (buf: any, len: any) => any): void;\r\n    appendEx2(data: any, type: new (buff: any, len: any) => any, dataLen: number, perDataLen?: number): void;\r\n    getBuffer(): ArrayBuffer;\r\n    setNeedUpload(): void;\r\n    getNeedUpload(): boolean;\r\n    upload(): boolean;\r\n    subUpload(offset?: number, dataStart?: number, dataLength?: number): boolean;\r\n    protected _disposeResource(): void;\r\n    clear(): void;\r\n}\r\n"
  }
}
