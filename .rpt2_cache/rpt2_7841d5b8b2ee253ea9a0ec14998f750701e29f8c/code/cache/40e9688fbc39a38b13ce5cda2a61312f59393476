{
  "code": "import { Pool } from \"../utils/Pool\";\r\nexport class Point {\r\n    constructor(x = 0, y = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    static create() {\r\n        return Pool.getItemByClass(\"Point\", Point);\r\n    }\r\n    setTo(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n        return this;\r\n    }\r\n    reset() {\r\n        this.x = this.y = 0;\r\n        return this;\r\n    }\r\n    recover() {\r\n        Pool.recover(\"Point\", this.reset());\r\n    }\r\n    distance(x, y) {\r\n        return Math.sqrt((this.x - x) * (this.x - x) + (this.y - y) * (this.y - y));\r\n    }\r\n    toString() {\r\n        return this.x + \",\" + this.y;\r\n    }\r\n    normalize() {\r\n        var d = Math.sqrt(this.x * this.x + this.y * this.y);\r\n        if (d > 0) {\r\n            var id = 1.0 / d;\r\n            this.x *= id;\r\n            this.y *= id;\r\n        }\r\n    }\r\n    copy(point) {\r\n        return this.setTo(point.x, point.y);\r\n    }\r\n}\r\nPoint.TEMP = new Point();\r\nPoint.EMPTY = new Point();\r\n//# sourceMappingURL=Point.js.map",
  "references": [
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/utils/Pool.ts"
  ],
  "map": "{\"version\":3,\"file\":\"Point.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../libs/laya/maths/Point.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,eAAe,CAAA;AAKpC,MAAM,OAAO,KAAK;IAiBd,YAAY,IAAY,CAAC,EAAE,IAAY,CAAC;QACpC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACf,CAAC;IAKD,MAAM,CAAC,MAAM;QACT,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAC/C,CAAC;IAQD,KAAK,CAAC,CAAS,EAAE,CAAS;QACtB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,OAAO,IAAI,CAAC;IAChB,CAAC;IAKD,KAAK;QACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACpB,OAAO,IAAI,CAAC;IAChB,CAAC;IAKD,OAAO;QACH,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;IACxC,CAAC;IAQD,QAAQ,CAAC,CAAS,EAAE,CAAS;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAChF,CAAC;IAGD,QAAQ;QACJ,OAAO,IAAI,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;IACjC,CAAC;IAKD,SAAS;QACL,IAAI,CAAC,GAAW,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QAC7D,IAAI,CAAC,GAAG,CAAC,EAAE;YACP,IAAI,EAAE,GAAW,GAAG,GAAG,CAAC,CAAC;YACzB,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;YACb,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;SAChB;IACL,CAAC;IAMD,IAAI,CAAC,KAAY;QACb,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IACxC,CAAC;;AAtFM,UAAI,GAAU,IAAI,KAAK,EAAE,CAAC;AAE1B,WAAK,GAAU,IAAI,KAAK,EAAE,CAAC\"}",
  "dts": {
    "name": "D:/widgets/LayaDataStructuresAlgorithms/.rpt2_cache/placeholder/laya/maths/Point.d.ts",
    "writeByteOrderMark": false,
    "text": "export declare class Point {\r\n    static TEMP: Point;\r\n    static EMPTY: Point;\r\n    x: number;\r\n    y: number;\r\n    constructor(x?: number, y?: number);\r\n    static create(): Point;\r\n    setTo(x: number, y: number): Point;\r\n    reset(): Point;\r\n    recover(): void;\r\n    distance(x: number, y: number): number;\r\n    toString(): string;\r\n    normalize(): void;\r\n    copy(point: Point): Point;\r\n}\r\n"
  }
}
