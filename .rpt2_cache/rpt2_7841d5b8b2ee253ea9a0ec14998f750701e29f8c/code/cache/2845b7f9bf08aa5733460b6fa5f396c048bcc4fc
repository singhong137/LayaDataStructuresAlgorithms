{
  "code": "import { ILaya } from \"../../ILaya\";\r\nexport class URL {\r\n    constructor(url) {\r\n        this._url = URL.formatURL(url);\r\n        this._path = URL.getPath(url);\r\n    }\r\n    get url() {\r\n        return this._url;\r\n    }\r\n    get path() {\r\n        return this._path;\r\n    }\r\n    static set basePath(value) {\r\n        URL._basePath = ILaya.Laya._getUrlPath();\r\n        URL._basePath = URL.formatURL(value);\r\n    }\r\n    static get basePath() {\r\n        return URL._basePath;\r\n    }\r\n    static formatURL(url) {\r\n        if (!url)\r\n            return \"null path\";\r\n        if (url.indexOf(\":\") > 0)\r\n            return url;\r\n        if (URL.customFormat != null)\r\n            url = URL.customFormat(url);\r\n        if (url.indexOf(\":\") > 0)\r\n            return url;\r\n        var char1 = url.charAt(0);\r\n        if (char1 === \".\") {\r\n            return URL._formatRelativePath(URL._basePath + url);\r\n        }\r\n        else if (char1 === '~') {\r\n            return URL.rootPath + url.substring(1);\r\n        }\r\n        else if (char1 === \"d\") {\r\n            if (url.indexOf(\"data:image\") === 0)\r\n                return url;\r\n        }\r\n        else if (char1 === \"/\") {\r\n            return url;\r\n        }\r\n        return URL._basePath + url;\r\n    }\r\n    static _formatRelativePath(value) {\r\n        var parts = value.split(\"/\");\r\n        for (var i = 0, len = parts.length; i < len; i++) {\r\n            if (parts[i] == '..') {\r\n                parts.splice(i - 1, 2);\r\n                i -= 2;\r\n            }\r\n        }\r\n        return parts.join('/');\r\n    }\r\n    static getPath(url) {\r\n        var ofs = url.lastIndexOf('/');\r\n        return ofs > 0 ? url.substr(0, ofs + 1) : \"\";\r\n    }\r\n    static getFileName(url) {\r\n        var ofs = url.lastIndexOf('/');\r\n        return ofs > 0 ? url.substr(ofs + 1) : url;\r\n    }\r\n    static getAdptedFilePath(url) {\r\n        if (!URL.exportSceneToJson || !url)\r\n            return url;\r\n        var i, len;\r\n        len = URL._adpteTypeList.length;\r\n        var tArr;\r\n        for (i = 0; i < len; i++) {\r\n            tArr = URL._adpteTypeList[i];\r\n            url = url.replace(tArr[0], tArr[1]);\r\n        }\r\n        return url;\r\n    }\r\n}\r\nURL.version = {};\r\nURL.exportSceneToJson = false;\r\nURL._basePath = \"\";\r\nURL.rootPath = \"\";\r\nURL.customFormat = function (url) {\r\n    var newUrl = URL.version[url];\r\n    if (!window.conch && newUrl)\r\n        url += \"?v=\" + newUrl;\r\n    return url;\r\n};\r\nURL._adpteTypeList = [[\".scene3d\", \".json\"], [\".scene\", \".json\"], [\".taa\", \".json\"], [\".prefab\", \".json\"]];\r\n//# sourceMappingURL=URL.js.map",
  "references": [
    "D:/widgets/LayaDataStructuresAlgorithms/libs/ILaya.ts"
  ],
  "map": "{\"version\":3,\"file\":\"URL.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../libs/laya/net/URL.ts\"],\"names\":[],\"mappings\":\"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\"}",
  "dts": {
    "name": "D:/widgets/LayaDataStructuresAlgorithms/.rpt2_cache/placeholder/laya/net/URL.d.ts",
    "writeByteOrderMark": false,
    "text": "export declare class URL {\r\n    static version: any;\r\n    private _url;\r\n    private _path;\r\n    static exportSceneToJson: boolean;\r\n    constructor(url: string);\r\n    readonly url: string;\r\n    readonly path: string;\r\n    static _basePath: string;\r\n    static rootPath: string;\r\n    static basePath: string;\r\n    static customFormat: Function;\r\n    static formatURL(url: string): string;\r\n    static _formatRelativePath(value: string): string;\r\n    static getPath(url: string): string;\r\n    static getFileName(url: string): string;\r\n    private static _adpteTypeList;\r\n    static getAdptedFilePath(url: string): string;\r\n}\r\n"
  }
}
