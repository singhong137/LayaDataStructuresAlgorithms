{
  "code": "import { CallLater } from \"./CallLater\";\r\nimport { ILaya } from \"../../ILaya\";\r\nexport class Timer {\r\n    constructor(autoActive = true) {\r\n        this.scale = 1;\r\n        this.currTimer = Date.now();\r\n        this.currFrame = 0;\r\n        this._delta = 0;\r\n        this._lastTimer = Date.now();\r\n        this._map = [];\r\n        this._handlers = [];\r\n        this._temp = [];\r\n        this._count = 0;\r\n        autoActive && Timer.gSysTimer && Timer.gSysTimer.frameLoop(1, this, this._update);\r\n    }\r\n    get delta() {\r\n        return this._delta;\r\n    }\r\n    _update() {\r\n        if (this.scale <= 0) {\r\n            this._lastTimer = Date.now();\r\n            this._delta = 0;\r\n            return;\r\n        }\r\n        var frame = this.currFrame = this.currFrame + this.scale;\r\n        var now = Date.now();\r\n        var awake = (now - this._lastTimer) > 30000;\r\n        this._delta = (now - this._lastTimer) * this.scale;\r\n        var timer = this.currTimer = this.currTimer + this._delta;\r\n        this._lastTimer = now;\r\n        var handlers = this._handlers;\r\n        this._count = 0;\r\n        for (var i = 0, n = handlers.length; i < n; i++) {\r\n            var handler = handlers[i];\r\n            if (handler.method !== null) {\r\n                var t = handler.userFrame ? frame : timer;\r\n                if (t >= handler.exeTime) {\r\n                    if (handler.repeat) {\r\n                        if (!handler.jumpFrame || awake) {\r\n                            handler.exeTime += handler.delay;\r\n                            handler.run(false);\r\n                            if (t > handler.exeTime) {\r\n                                handler.exeTime += Math.ceil((t - handler.exeTime) / handler.delay) * handler.delay;\r\n                            }\r\n                        }\r\n                        else {\r\n                            while (t >= handler.exeTime) {\r\n                                handler.exeTime += handler.delay;\r\n                                handler.run(false);\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        handler.run(true);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this._count++;\r\n            }\r\n        }\r\n        if (this._count > 30 || frame % 200 === 0)\r\n            this._clearHandlers();\r\n    }\r\n    _clearHandlers() {\r\n        var handlers = this._handlers;\r\n        for (var i = 0, n = handlers.length; i < n; i++) {\r\n            var handler = handlers[i];\r\n            if (handler.method !== null)\r\n                this._temp.push(handler);\r\n            else\r\n                this._recoverHandler(handler);\r\n        }\r\n        this._handlers = this._temp;\r\n        handlers.length = 0;\r\n        this._temp = handlers;\r\n    }\r\n    _recoverHandler(handler) {\r\n        if (this._map[handler.key] == handler)\r\n            this._map[handler.key] = null;\r\n        handler.clear();\r\n        Timer._pool.push(handler);\r\n    }\r\n    _create(useFrame, repeat, delay, caller, method, args, coverBefore) {\r\n        if (!delay) {\r\n            method.apply(caller, args);\r\n            return null;\r\n        }\r\n        if (coverBefore) {\r\n            var handler = this._getHandler(caller, method);\r\n            if (handler) {\r\n                handler.repeat = repeat;\r\n                handler.userFrame = useFrame;\r\n                handler.delay = delay;\r\n                handler.caller = caller;\r\n                handler.method = method;\r\n                handler.args = args;\r\n                handler.exeTime = delay + (useFrame ? this.currFrame : this.currTimer + Date.now() - this._lastTimer);\r\n                return handler;\r\n            }\r\n        }\r\n        handler = Timer._pool.length > 0 ? Timer._pool.pop() : new TimerHandler();\r\n        handler.repeat = repeat;\r\n        handler.userFrame = useFrame;\r\n        handler.delay = delay;\r\n        handler.caller = caller;\r\n        handler.method = method;\r\n        handler.args = args;\r\n        handler.exeTime = delay + (useFrame ? this.currFrame : this.currTimer + Date.now() - this._lastTimer);\r\n        this._indexHandler(handler);\r\n        this._handlers.push(handler);\r\n        return handler;\r\n    }\r\n    _indexHandler(handler) {\r\n        var caller = handler.caller;\r\n        var method = handler.method;\r\n        var cid = caller ? caller.$_GID || (caller.$_GID = ILaya.Utils.getGID()) : 0;\r\n        var mid = method.$_TID || (method.$_TID = (Timer._mid++) * 100000);\r\n        handler.key = cid + mid;\r\n        this._map[handler.key] = handler;\r\n    }\r\n    once(delay, caller, method, args = null, coverBefore = true) {\r\n        this._create(false, false, delay, caller, method, args, coverBefore);\r\n    }\r\n    loop(delay, caller, method, args = null, coverBefore = true, jumpFrame = false) {\r\n        var handler = this._create(false, true, delay, caller, method, args, coverBefore);\r\n        if (handler)\r\n            handler.jumpFrame = jumpFrame;\r\n    }\r\n    frameOnce(delay, caller, method, args = null, coverBefore = true) {\r\n        this._create(true, false, delay, caller, method, args, coverBefore);\r\n    }\r\n    frameLoop(delay, caller, method, args = null, coverBefore = true) {\r\n        this._create(true, true, delay, caller, method, args, coverBefore);\r\n    }\r\n    toString() {\r\n        return \" handlers:\" + this._handlers.length + \" pool:\" + Timer._pool.length;\r\n    }\r\n    clear(caller, method) {\r\n        var handler = this._getHandler(caller, method);\r\n        if (handler) {\r\n            this._map[handler.key] = null;\r\n            handler.key = 0;\r\n            handler.clear();\r\n        }\r\n    }\r\n    clearAll(caller) {\r\n        if (!caller)\r\n            return;\r\n        for (var i = 0, n = this._handlers.length; i < n; i++) {\r\n            var handler = this._handlers[i];\r\n            if (handler.caller === caller) {\r\n                this._map[handler.key] = null;\r\n                handler.key = 0;\r\n                handler.clear();\r\n            }\r\n        }\r\n    }\r\n    _getHandler(caller, method) {\r\n        var cid = caller ? caller.$_GID || (caller.$_GID = ILaya.Utils.getGID()) : 0;\r\n        var mid = method.$_TID || (method.$_TID = (Timer._mid++) * 100000);\r\n        return this._map[cid + mid];\r\n    }\r\n    callLater(caller, method, args = null) {\r\n        CallLater.I.callLater(caller, method, args);\r\n    }\r\n    runCallLater(caller, method) {\r\n        CallLater.I.runCallLater(caller, method);\r\n    }\r\n    runTimer(caller, method) {\r\n        var handler = this._getHandler(caller, method);\r\n        if (handler && handler.method != null) {\r\n            this._map[handler.key] = null;\r\n            handler.run(true);\r\n        }\r\n    }\r\n    pause() {\r\n        this.scale = 0;\r\n    }\r\n    resume() {\r\n        this.scale = 1;\r\n    }\r\n}\r\nTimer.gSysTimer = null;\r\nTimer._pool = [];\r\nTimer._mid = 1;\r\nclass TimerHandler {\r\n    clear() {\r\n        this.caller = null;\r\n        this.method = null;\r\n        this.args = null;\r\n    }\r\n    run(withClear) {\r\n        var caller = this.caller;\r\n        if (caller && caller.destroyed)\r\n            return this.clear();\r\n        var method = this.method;\r\n        var args = this.args;\r\n        withClear && this.clear();\r\n        if (method == null)\r\n            return;\r\n        args ? method.apply(caller, args) : method.call(caller);\r\n    }\r\n}\r\n//# sourceMappingURL=Timer.js.map",
  "references": [
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/utils/CallLater.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/ILaya.ts"
  ],
  "map": "{\"version\":3,\"file\":\"Timer.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../libs/laya/utils/Timer.ts\"],\"names\":[],\"mappings\":\"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\"}",
  "dts": {
    "name": "D:/widgets/LayaDataStructuresAlgorithms/.rpt2_cache/placeholder/laya/utils/Timer.d.ts",
    "writeByteOrderMark": false,
    "text": "export declare class Timer {\r\n    static gSysTimer: Timer;\r\n    private static _pool;\r\n    static _mid: number;\r\n    scale: number;\r\n    currTimer: number;\r\n    currFrame: number;\r\n    _delta: number;\r\n    _lastTimer: number;\r\n    private _map;\r\n    private _handlers;\r\n    private _temp;\r\n    private _count;\r\n    constructor(autoActive?: boolean);\r\n    readonly delta: number;\r\n    _update(): void;\r\n    private _clearHandlers;\r\n    private _recoverHandler;\r\n    _create(useFrame: boolean, repeat: boolean, delay: number, caller: any, method: Function, args: any[], coverBefore: boolean): TimerHandler;\r\n    private _indexHandler;\r\n    once(delay: number, caller: any, method: Function, args?: any[], coverBefore?: boolean): void;\r\n    loop(delay: number, caller: any, method: Function, args?: any[], coverBefore?: boolean, jumpFrame?: boolean): void;\r\n    frameOnce(delay: number, caller: any, method: Function, args?: any[], coverBefore?: boolean): void;\r\n    frameLoop(delay: number, caller: any, method: Function, args?: any[], coverBefore?: boolean): void;\r\n    toString(): string;\r\n    clear(caller: any, method: Function): void;\r\n    clearAll(caller: any): void;\r\n    private _getHandler;\r\n    callLater(caller: any, method: Function, args?: any[]): void;\r\n    runCallLater(caller: any, method: Function): void;\r\n    runTimer(caller: any, method: Function): void;\r\n    pause(): void;\r\n    resume(): void;\r\n}\r\ndeclare class TimerHandler {\r\n    key: number;\r\n    repeat: boolean;\r\n    delay: number;\r\n    userFrame: boolean;\r\n    exeTime: number;\r\n    caller: any;\r\n    method: Function;\r\n    args: any[];\r\n    jumpFrame: boolean;\r\n    clear(): void;\r\n    run(withClear: boolean): void;\r\n}\r\nexport {};\r\n"
  }
}
