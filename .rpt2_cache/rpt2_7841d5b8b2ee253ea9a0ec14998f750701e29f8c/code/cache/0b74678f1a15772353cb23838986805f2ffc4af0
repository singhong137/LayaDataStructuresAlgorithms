{
  "code": "import { Rectangle } from \"../maths/Rectangle\";\r\nimport { Texture } from \"../resource/Texture\";\r\nimport { Handler } from \"../utils/Handler\";\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\";\r\nexport class BitmapFont {\r\n    constructor() {\r\n        this._fontCharDic = {};\r\n        this._fontWidthMap = {};\r\n        this._maxWidth = 0;\r\n        this._spaceWidth = 10;\r\n        this.fontSize = 12;\r\n        this.autoScaleSize = false;\r\n        this.letterSpacing = 0;\r\n    }\r\n    loadFont(path, complete) {\r\n        this._path = path;\r\n        this._complete = complete;\r\n        if (!path || path.indexOf(\".fnt\") === -1) {\r\n            console.error('Bitmap font configuration information must be a \".fnt\" file');\r\n            return;\r\n        }\r\n        ILaya.loader.load([{ url: path, type: ILaya.Loader.XML }, { url: path.replace(\".fnt\", \".png\"), type: ILaya.Loader.IMAGE }], Handler.create(this, this._onLoaded));\r\n    }\r\n    _onLoaded() {\r\n        this.parseFont(ILaya.Loader.getRes(this._path), ILaya.Loader.getRes(this._path.replace(\".fnt\", \".png\")));\r\n        this._complete && this._complete.run();\r\n    }\r\n    parseFont(xml, texture) {\r\n        if (xml == null || texture == null)\r\n            return;\r\n        this._texture = texture;\r\n        var tX = 0;\r\n        var tScale = 1;\r\n        var tInfo = xml.getElementsByTagName(\"info\");\r\n        if (!tInfo[0].getAttributeNode) {\r\n            return this.parseFont2(xml, texture);\r\n        }\r\n        this.fontSize = parseInt(tInfo[0].getAttributeNode(\"size\").nodeValue);\r\n        var tPadding = tInfo[0].getAttributeNode(\"padding\").nodeValue;\r\n        var tPaddingArray = tPadding.split(\",\");\r\n        this._padding = [parseInt(tPaddingArray[0]), parseInt(tPaddingArray[1]), parseInt(tPaddingArray[2]), parseInt(tPaddingArray[3])];\r\n        var chars = xml.getElementsByTagName(\"char\");\r\n        var i = 0;\r\n        for (i = 0; i < chars.length; i++) {\r\n            var tAttribute = chars[i];\r\n            var tId = parseInt(tAttribute.getAttributeNode(\"id\").nodeValue);\r\n            var xOffset = parseInt(tAttribute.getAttributeNode(\"xoffset\").nodeValue) / tScale;\r\n            var yOffset = parseInt(tAttribute.getAttributeNode(\"yoffset\").nodeValue) / tScale;\r\n            var xAdvance = parseInt(tAttribute.getAttributeNode(\"xadvance\").nodeValue) / tScale;\r\n            var region = new Rectangle();\r\n            region.x = parseInt(tAttribute.getAttributeNode(\"x\").nodeValue);\r\n            region.y = parseInt(tAttribute.getAttributeNode(\"y\").nodeValue);\r\n            region.width = parseInt(tAttribute.getAttributeNode(\"width\").nodeValue);\r\n            region.height = parseInt(tAttribute.getAttributeNode(\"height\").nodeValue);\r\n            var tTexture = Texture.create(texture, region.x, region.y, region.width, region.height, xOffset, yOffset);\r\n            this._maxWidth = Math.max(this._maxWidth, xAdvance + this.letterSpacing);\r\n            this._fontCharDic[tId] = tTexture;\r\n            this._fontWidthMap[tId] = xAdvance;\r\n        }\r\n    }\r\n    parseFont2(xml, texture) {\r\n        if (xml == null || texture == null)\r\n            return;\r\n        this._texture = texture;\r\n        var tX = 0;\r\n        var tScale = 1;\r\n        var tInfo = xml.getElementsByTagName(\"info\");\r\n        this.fontSize = parseInt(tInfo[0].attributes[\"size\"].nodeValue);\r\n        var tPadding = tInfo[0].attributes[\"padding\"].nodeValue;\r\n        var tPaddingArray = tPadding.split(\",\");\r\n        this._padding = [parseInt(tPaddingArray[0]), parseInt(tPaddingArray[1]), parseInt(tPaddingArray[2]), parseInt(tPaddingArray[3])];\r\n        var chars = xml.getElementsByTagName(\"char\");\r\n        var i = 0;\r\n        for (i = 0; i < chars.length; i++) {\r\n            var tAttribute = chars[i].attributes;\r\n            var tId = parseInt(tAttribute[\"id\"].nodeValue);\r\n            var xOffset = parseInt(tAttribute[\"xoffset\"].nodeValue) / tScale;\r\n            var yOffset = parseInt(tAttribute[\"yoffset\"].nodeValue) / tScale;\r\n            var xAdvance = parseInt(tAttribute[\"xadvance\"].nodeValue) / tScale;\r\n            var region = new Rectangle();\r\n            region.x = parseInt(tAttribute[\"x\"].nodeValue);\r\n            region.y = parseInt(tAttribute[\"y\"].nodeValue);\r\n            region.width = parseInt(tAttribute[\"width\"].nodeValue);\r\n            region.height = parseInt(tAttribute[\"height\"].nodeValue);\r\n            var tTexture = Texture.create(texture, region.x, region.y, region.width, region.height, xOffset, yOffset);\r\n            this._maxWidth = Math.max(this._maxWidth, xAdvance + this.letterSpacing);\r\n            this._fontCharDic[tId] = tTexture;\r\n            this._fontWidthMap[tId] = xAdvance;\r\n        }\r\n    }\r\n    getCharTexture(char) {\r\n        return this._fontCharDic[char.charCodeAt(0)];\r\n    }\r\n    destroy() {\r\n        if (this._texture) {\r\n            for (var p in this._fontCharDic) {\r\n                var tTexture = this._fontCharDic[p];\r\n                if (tTexture)\r\n                    tTexture.destroy();\r\n            }\r\n            this._texture.destroy();\r\n            this._fontCharDic = null;\r\n            this._fontWidthMap = null;\r\n            this._texture = null;\r\n            this._complete = null;\r\n            this._padding = null;\r\n        }\r\n    }\r\n    setSpaceWidth(spaceWidth) {\r\n        this._spaceWidth = spaceWidth;\r\n    }\r\n    getCharWidth(char) {\r\n        var code = char.charCodeAt(0);\r\n        if (this._fontWidthMap[code])\r\n            return this._fontWidthMap[code] + this.letterSpacing;\r\n        if (char === \" \")\r\n            return this._spaceWidth + this.letterSpacing;\r\n        return 0;\r\n    }\r\n    getTextWidth(text) {\r\n        var tWidth = 0;\r\n        for (var i = 0, n = text.length; i < n; i++) {\r\n            tWidth += this.getCharWidth(text.charAt(i));\r\n        }\r\n        return tWidth;\r\n    }\r\n    getMaxWidth() {\r\n        return this._maxWidth;\r\n    }\r\n    getMaxHeight() {\r\n        return this.fontSize;\r\n    }\r\n    _drawText(text, sprite, drawX, drawY, align, width) {\r\n        var tWidth = this.getTextWidth(text);\r\n        var tTexture;\r\n        var dx = 0;\r\n        align === \"center\" && (dx = (width - tWidth) / 2);\r\n        align === \"right\" && (dx = (width - tWidth));\r\n        var tx = 0;\r\n        for (var i = 0, n = text.length; i < n; i++) {\r\n            tTexture = this.getCharTexture(text.charAt(i));\r\n            if (tTexture) {\r\n                sprite.graphics.drawImage(tTexture, drawX + tx + dx, drawY);\r\n                tx += this.getCharWidth(text.charAt(i));\r\n            }\r\n        }\r\n    }\r\n}\r\nClassUtils.regClass(\"laya.display.BitmapFont\", BitmapFont);\r\nClassUtils.regClass(\"Laya.BitmapFont\", BitmapFont);\r\n//# sourceMappingURL=BitmapFont.js.map",
  "references": [
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/display/Sprite.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/maths/Rectangle.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/resource/Texture.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/utils/Handler.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/ILaya.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/utils/ClassUtils.ts"
  ],
  "map": "{\"version\":3,\"file\":\"BitmapFont.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../libs/laya/display/BitmapFont.ts\"],\"names\":[],\"mappings\":\"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\"}",
  "dts": {
    "name": "D:/widgets/LayaDataStructuresAlgorithms/.rpt2_cache/placeholder/laya/display/BitmapFont.d.ts",
    "writeByteOrderMark": false,
    "text": "import { Sprite } from \"./Sprite\";\r\nimport { Texture } from \"../resource/Texture\";\r\nimport { Handler } from \"../utils/Handler\";\r\nexport declare class BitmapFont {\r\n    private _texture;\r\n    private _fontCharDic;\r\n    private _fontWidthMap;\r\n    private _complete;\r\n    private _path;\r\n    private _maxWidth;\r\n    private _spaceWidth;\r\n    private _padding;\r\n    fontSize: number;\r\n    autoScaleSize: boolean;\r\n    letterSpacing: number;\r\n    loadFont(path: string, complete: Handler): void;\r\n    private _onLoaded;\r\n    parseFont(xml: XMLDocument, texture: Texture): void;\r\n    parseFont2(xml: XMLDocument, texture: Texture): void;\r\n    getCharTexture(char: string): Texture;\r\n    destroy(): void;\r\n    setSpaceWidth(spaceWidth: number): void;\r\n    getCharWidth(char: string): number;\r\n    getTextWidth(text: string): number;\r\n    getMaxWidth(): number;\r\n    getMaxHeight(): number;\r\n    _drawText(text: string, sprite: Sprite, drawX: number, drawY: number, align: string, width: number): void;\r\n}\r\n"
  }
}
