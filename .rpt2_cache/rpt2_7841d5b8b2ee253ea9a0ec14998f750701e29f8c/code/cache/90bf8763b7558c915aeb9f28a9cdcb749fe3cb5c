{
  "code": "import { Sprite } from \"./Sprite\";\r\nimport { SpriteConst } from \"./SpriteConst\";\r\nimport { TextStyle } from \"./css/TextStyle\";\r\nimport { Event } from \"../events/Event\";\r\nimport { Point } from \"../maths/Point\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { WordText } from \"../utils/WordText\";\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\";\r\nexport class Text extends Sprite {\r\n    constructor() {\r\n        super();\r\n        this._textWidth = 0;\r\n        this._textHeight = 0;\r\n        this._lines = [];\r\n        this._lineWidths = [];\r\n        this._startX = 0;\r\n        this._startY = 0;\r\n        this._charSize = {};\r\n        this._valign = \"top\";\r\n        this._fontSize = Text.defaultFontSize;\r\n        this._font = Text.defaultFont;\r\n        this._color = \"#000000\";\r\n        this._singleCharRender = false;\r\n        this.overflow = Text.VISIBLE;\r\n        this._style = TextStyle.EMPTY;\r\n    }\r\n    static defaultFontStr() {\r\n        return Text.defaultFontSize + \"px \" + Text.defaultFont;\r\n    }\r\n    getStyle() {\r\n        this._style === TextStyle.EMPTY && (this._style = TextStyle.create());\r\n        return this._style;\r\n    }\r\n    _getTextStyle() {\r\n        if (this._style === TextStyle.EMPTY) {\r\n            this._style = TextStyle.create();\r\n        }\r\n        return this._style;\r\n    }\r\n    static registerBitmapFont(name, bitmapFont) {\r\n        Text._bitmapFonts || (Text._bitmapFonts = {});\r\n        Text._bitmapFonts[name] = bitmapFont;\r\n    }\r\n    static unregisterBitmapFont(name, destroy = true) {\r\n        if (Text._bitmapFonts && Text._bitmapFonts[name]) {\r\n            var tBitmapFont = Text._bitmapFonts[name];\r\n            if (destroy)\r\n                tBitmapFont.destroy();\r\n            delete Text._bitmapFonts[name];\r\n        }\r\n    }\r\n    destroy(destroyChild = true) {\r\n        super.destroy(destroyChild);\r\n        this._clipPoint = null;\r\n        this._lines = null;\r\n        this._lineWidths = null;\r\n        this._words && this._words.forEach(function (w) {\r\n            w.cleanCache();\r\n        });\r\n        this._words = null;\r\n        this._charSize = null;\r\n    }\r\n    _getBoundPointsM(ifRotate = false) {\r\n        var rec = Rectangle.TEMP;\r\n        rec.setTo(0, 0, this.width, this.height);\r\n        return rec._getBoundPoints();\r\n    }\r\n    getGraphicBounds(realSize = false) {\r\n        var rec = Rectangle.TEMP;\r\n        rec.setTo(0, 0, this.width, this.height);\r\n        return rec;\r\n    }\r\n    get width() {\r\n        if (this._width)\r\n            return this._width;\r\n        return this.textWidth + this.padding[1] + this.padding[3];\r\n    }\r\n    set width(value) {\r\n        if (value != this._width) {\r\n            super.set_width(value);\r\n            this.isChanged = true;\r\n            if (this.borderColor) {\r\n                this._setBorderStyleColor(0, 0, this.width, this.height, this.borderColor, 1);\r\n            }\r\n        }\r\n    }\r\n    _getCSSStyle() {\r\n        return this._style;\r\n    }\r\n    get height() {\r\n        if (this._height)\r\n            return this._height;\r\n        return this.textHeight;\r\n    }\r\n    set height(value) {\r\n        if (value != this._height) {\r\n            super.set_height(value);\r\n            this.isChanged = true;\r\n            if (this.borderColor) {\r\n                this._setBorderStyleColor(0, 0, this.width, this.height, this.borderColor, 1);\r\n            }\r\n        }\r\n    }\r\n    get textWidth() {\r\n        this._isChanged && ILaya.systemTimer.runCallLater(this, this.typeset);\r\n        return this._textWidth;\r\n    }\r\n    get textHeight() {\r\n        this._isChanged && ILaya.systemTimer.runCallLater(this, this.typeset);\r\n        return this._textHeight;\r\n    }\r\n    get text() {\r\n        return this._text || \"\";\r\n    }\r\n    get_text() {\r\n        return this._text || \"\";\r\n    }\r\n    set_text(value) {\r\n        if (this._text !== value) {\r\n            this.lang(value + \"\");\r\n            this.isChanged = true;\r\n            this.event(Event.CHANGE);\r\n            if (this.borderColor) {\r\n                this._setBorderStyleColor(0, 0, this.width, this.height, this.borderColor, 1);\r\n            }\r\n        }\r\n    }\r\n    set text(value) {\r\n        this.set_text(value);\r\n    }\r\n    lang(text, arg1 = null, arg2 = null, arg3 = null, arg4 = null, arg5 = null, arg6 = null, arg7 = null, arg8 = null, arg9 = null, arg10 = null) {\r\n        text = Text.langPacks && Text.langPacks[text] ? Text.langPacks[text] : text;\r\n        if (arguments.length < 2) {\r\n            this._text = text;\r\n        }\r\n        else {\r\n            for (var i = 0, n = arguments.length; i < n; i++) {\r\n                text = text.replace(\"{\" + i + \"}\", arguments[i + 1]);\r\n            }\r\n            this._text = text;\r\n        }\r\n    }\r\n    get font() {\r\n        return this._font;\r\n    }\r\n    set font(value) {\r\n        if (this._style.currBitmapFont) {\r\n            this._getTextStyle().currBitmapFont = null;\r\n            this.scale(1, 1);\r\n        }\r\n        if (Text._bitmapFonts && Text._bitmapFonts[value]) {\r\n            this._getTextStyle().currBitmapFont = Text._bitmapFonts[value];\r\n        }\r\n        this._font = value;\r\n        this.isChanged = true;\r\n    }\r\n    get fontSize() {\r\n        return this._fontSize;\r\n    }\r\n    set fontSize(value) {\r\n        if (this._fontSize != value) {\r\n            this._fontSize = value;\r\n            this.isChanged = true;\r\n        }\r\n    }\r\n    get bold() {\r\n        return this._style.bold;\r\n    }\r\n    set bold(value) {\r\n        this._getTextStyle().bold = value;\r\n        this.isChanged = true;\r\n    }\r\n    get color() {\r\n        return this._color;\r\n    }\r\n    set color(value) {\r\n        this.set_color(value);\r\n    }\r\n    get_color() {\r\n        return this._color;\r\n    }\r\n    set_color(value) {\r\n        if (this._color != value) {\r\n            this._color = value;\r\n            if (!this._isChanged && this._graphics) {\r\n                this._graphics.replaceTextColor(this.color);\r\n            }\r\n            else {\r\n                this.isChanged = true;\r\n            }\r\n        }\r\n    }\r\n    get italic() {\r\n        return this._style.italic;\r\n    }\r\n    set italic(value) {\r\n        this._getTextStyle().italic = value;\r\n        this.isChanged = true;\r\n    }\r\n    get align() {\r\n        return this._style.align;\r\n    }\r\n    set align(value) {\r\n        this._getTextStyle().align = value;\r\n        this.isChanged = true;\r\n    }\r\n    get valign() {\r\n        return this._valign;\r\n    }\r\n    set valign(value) {\r\n        this._valign = value;\r\n        this.isChanged = true;\r\n    }\r\n    get wordWrap() {\r\n        return this._style.wordWrap;\r\n    }\r\n    set wordWrap(value) {\r\n        this._getTextStyle().wordWrap = value;\r\n        this.isChanged = true;\r\n    }\r\n    get leading() {\r\n        return this._style.leading;\r\n    }\r\n    set leading(value) {\r\n        this._getTextStyle().leading = value;\r\n        this.isChanged = true;\r\n    }\r\n    get padding() {\r\n        return this._style.padding;\r\n    }\r\n    set padding(value) {\r\n        if (typeof (value) == 'string') {\r\n            var arr;\r\n            arr = value.split(\",\");\r\n            var i, len;\r\n            len = arr.length;\r\n            while (arr.length < 4) {\r\n                arr.push(0);\r\n            }\r\n            for (i = 0; i < len; i++) {\r\n                arr[i] = parseFloat(arr[i]) || 0;\r\n            }\r\n            value = arr;\r\n        }\r\n        this._getTextStyle().padding = value;\r\n        this.isChanged = true;\r\n    }\r\n    get bgColor() {\r\n        return this._style.bgColor;\r\n    }\r\n    set bgColor(value) {\r\n        this.set_bgColor(value);\r\n    }\r\n    set_bgColor(value) {\r\n        this._getTextStyle().bgColor = value;\r\n        this._renderType |= SpriteConst.STYLE;\r\n        this._setBgStyleColor(0, 0, this.width, this.height, value);\r\n        this._setRenderType(this._renderType);\r\n        this.isChanged = true;\r\n    }\r\n    get_bgColor() {\r\n        return this._style.bgColor;\r\n    }\r\n    get borderColor() {\r\n        return this._style.borderColor;\r\n    }\r\n    set borderColor(value) {\r\n        this._getTextStyle().borderColor = value;\r\n        this._renderType |= SpriteConst.STYLE;\r\n        this._setBorderStyleColor(0, 0, this.width, this.height, value, 1);\r\n        this._setRenderType(this._renderType);\r\n        this.isChanged = true;\r\n    }\r\n    get stroke() {\r\n        return this._style.stroke;\r\n    }\r\n    set stroke(value) {\r\n        this._getTextStyle().stroke = value;\r\n        this.isChanged = true;\r\n    }\r\n    get strokeColor() {\r\n        return this._style.strokeColor;\r\n    }\r\n    set strokeColor(value) {\r\n        this._getTextStyle().strokeColor = value;\r\n        this.isChanged = true;\r\n    }\r\n    set isChanged(value) {\r\n        if (this._isChanged !== value) {\r\n            this._isChanged = value;\r\n            value && ILaya.systemTimer.callLater(this, this.typeset);\r\n        }\r\n    }\r\n    _getContextFont() {\r\n        return (this.italic ? \"italic \" : \"\") + (this.bold ? \"bold \" : \"\") + this.fontSize + \"px \" + (ILaya.Browser.onIPhone ? (Text.fontFamilyMap[this.font] || this.font) : this.font);\r\n    }\r\n    _isPassWordMode() {\r\n        var style = this._style;\r\n        var password = style.asPassword;\r\n        if ((\"prompt\" in this) && this['prompt'] == this._text)\r\n            password = false;\r\n        return password;\r\n    }\r\n    _getPassWordTxt(txt) {\r\n        var len = txt.length;\r\n        var word;\r\n        word = \"\";\r\n        for (var j = len; j > 0; j--) {\r\n            word += \"●\";\r\n        }\r\n        return word;\r\n    }\r\n    _renderText() {\r\n        var padding = this.padding;\r\n        var visibleLineCount = this._lines.length;\r\n        if (this.overflow != Text.VISIBLE) {\r\n            visibleLineCount = Math.min(visibleLineCount, Math.floor((this.height - padding[0] - padding[2]) / (this.leading + this._charSize.height)) + 1);\r\n        }\r\n        var beginLine = this.scrollY / (this._charSize.height + this.leading) | 0;\r\n        var graphics = this.graphics;\r\n        graphics.clear(true);\r\n        var ctxFont = this._getContextFont();\r\n        ILaya.Browser.context.font = ctxFont;\r\n        var startX = padding[3];\r\n        var textAlgin = \"left\";\r\n        var lines = this._lines;\r\n        var lineHeight = this.leading + this._charSize.height;\r\n        var tCurrBitmapFont = this._style.currBitmapFont;\r\n        if (tCurrBitmapFont) {\r\n            lineHeight = this.leading + tCurrBitmapFont.getMaxHeight();\r\n        }\r\n        var startY = padding[0];\r\n        if ((!tCurrBitmapFont) && this._width > 0 && this._textWidth <= this._width) {\r\n            if (this.align == \"right\") {\r\n                textAlgin = \"right\";\r\n                startX = this._width - padding[1];\r\n            }\r\n            else if (this.align == \"center\") {\r\n                textAlgin = \"center\";\r\n                startX = this._width * 0.5 + padding[3] - padding[1];\r\n            }\r\n        }\r\n        if (this._height > 0) {\r\n            var tempVAlign = (this._textHeight > this._height) ? \"top\" : this.valign;\r\n            if (tempVAlign === \"middle\")\r\n                startY = (this._height - visibleLineCount * lineHeight) * 0.5 + padding[0] - padding[2];\r\n            else if (tempVAlign === \"bottom\")\r\n                startY = this._height - visibleLineCount * lineHeight - padding[2];\r\n        }\r\n        var style = this._style;\r\n        if (tCurrBitmapFont && tCurrBitmapFont.autoScaleSize) {\r\n            var bitmapScale = tCurrBitmapFont.fontSize / this.fontSize;\r\n        }\r\n        if (this._clipPoint) {\r\n            graphics.save();\r\n            if (tCurrBitmapFont && tCurrBitmapFont.autoScaleSize) {\r\n                var tClipWidth;\r\n                var tClipHeight;\r\n                this._width ? tClipWidth = (this._width - padding[3] - padding[1]) : tClipWidth = this._textWidth;\r\n                this._height ? tClipHeight = (this._height - padding[0] - padding[2]) : tClipHeight = this._textHeight;\r\n                tClipWidth *= bitmapScale;\r\n                tClipHeight *= bitmapScale;\r\n                graphics.clipRect(padding[3], padding[0], tClipWidth, tClipHeight);\r\n            }\r\n            else {\r\n                graphics.clipRect(padding[3], padding[0], this._width ? (this._width - padding[3] - padding[1]) : this._textWidth, this._height ? (this._height - padding[0] - padding[2]) : this._textHeight);\r\n            }\r\n            this.repaint();\r\n        }\r\n        var password = style.asPassword;\r\n        if ((\"prompt\" in this) && this['prompt'] == this._text)\r\n            password = false;\r\n        var x = 0, y = 0;\r\n        var end = Math.min(this._lines.length, visibleLineCount + beginLine) || 1;\r\n        for (var i = beginLine; i < end; i++) {\r\n            var word = lines[i];\r\n            var _word;\r\n            if (password) {\r\n                var len = word.length;\r\n                word = \"\";\r\n                for (var j = len; j > 0; j--) {\r\n                    word += \"●\";\r\n                }\r\n            }\r\n            if (word == null)\r\n                word = \"\";\r\n            x = startX - (this._clipPoint ? this._clipPoint.x : 0);\r\n            y = startY + lineHeight * i - (this._clipPoint ? this._clipPoint.y : 0);\r\n            this.underline && this._drawUnderline(textAlgin, x, y, i);\r\n            if (tCurrBitmapFont) {\r\n                var tWidth = this.width;\r\n                if (tCurrBitmapFont.autoScaleSize) {\r\n                    tWidth = this.width * bitmapScale;\r\n                }\r\n                tCurrBitmapFont._drawText(word, this, x, y, this.align, tWidth);\r\n            }\r\n            else {\r\n                this._words || (this._words = []);\r\n                if (this._words.length > (i - beginLine)) {\r\n                    _word = this._words[i - beginLine];\r\n                }\r\n                else {\r\n                    _word = new WordText();\r\n                    this._words.push(_word);\r\n                }\r\n                _word.setText(word);\r\n                _word.splitRender = this._singleCharRender;\r\n                style.stroke ? graphics.fillBorderText(_word, x, y, ctxFont, this.color, style.strokeColor, style.stroke, textAlgin) : graphics.fillText(_word, x, y, ctxFont, this.color, textAlgin);\r\n            }\r\n        }\r\n        if (tCurrBitmapFont && tCurrBitmapFont.autoScaleSize) {\r\n            var tScale = 1 / bitmapScale;\r\n            this.scale(tScale, tScale);\r\n        }\r\n        if (this._clipPoint)\r\n            graphics.restore();\r\n        this._startX = startX;\r\n        this._startY = startY;\r\n    }\r\n    _drawUnderline(align, x, y, lineIndex) {\r\n        var lineWidth = this._lineWidths[lineIndex];\r\n        switch (align) {\r\n            case 'center':\r\n                x -= lineWidth / 2;\r\n                break;\r\n            case 'right':\r\n                x -= lineWidth;\r\n                break;\r\n            case 'left':\r\n            default:\r\n                break;\r\n        }\r\n        y += this._charSize.height;\r\n        this._graphics.drawLine(x, y, x + lineWidth, y, this.underlineColor || this.color, 1);\r\n    }\r\n    typeset() {\r\n        this._isChanged = false;\r\n        if (!this._text) {\r\n            this._clipPoint = null;\r\n            this._textWidth = this._textHeight = 0;\r\n            this.graphics.clear(true);\r\n            return;\r\n        }\r\n        if (ILaya.Render.isConchApp) {\r\n            window.conchTextCanvas.font = this._getContextFont();\r\n            ;\r\n        }\r\n        else {\r\n            ILaya.Browser.context.font = this._getContextFont();\r\n        }\r\n        this._lines.length = 0;\r\n        this._lineWidths.length = 0;\r\n        if (this._isPassWordMode()) {\r\n            this._parseLines(this._getPassWordTxt(this._text));\r\n        }\r\n        else\r\n            this._parseLines(this._text);\r\n        this._evalTextSize();\r\n        if (this._checkEnabledViewportOrNot())\r\n            this._clipPoint || (this._clipPoint = new Point(0, 0));\r\n        else\r\n            this._clipPoint = null;\r\n        this._renderText();\r\n    }\r\n    _evalTextSize() {\r\n        var nw, nh;\r\n        nw = Math.max.apply(this, this._lineWidths);\r\n        if (this._style.currBitmapFont)\r\n            nh = this._lines.length * (this._style.currBitmapFont.getMaxHeight() + this.leading) + this.padding[0] + this.padding[2];\r\n        else\r\n            nh = this._lines.length * (this._charSize.height + this.leading) + this.padding[0] + this.padding[2];\r\n        if (nw != this._textWidth || nh != this._textHeight) {\r\n            this._textWidth = nw;\r\n            this._textHeight = nh;\r\n        }\r\n    }\r\n    _checkEnabledViewportOrNot() {\r\n        return this.overflow == Text.SCROLL && ((this._width > 0 && this._textWidth > this._width) || (this._height > 0 && this._textHeight > this._height));\r\n    }\r\n    changeText(text) {\r\n        if (this._text !== text) {\r\n            this.lang(text + \"\");\r\n            if (this._graphics && this._graphics.replaceText(this._text)) {\r\n            }\r\n            else {\r\n                this.typeset();\r\n            }\r\n        }\r\n    }\r\n    _parseLines(text) {\r\n        var needWordWrapOrTruncate = this.wordWrap || this.overflow == Text.HIDDEN;\r\n        if (needWordWrapOrTruncate) {\r\n            var wordWrapWidth = this._getWordWrapWidth();\r\n        }\r\n        var bitmapFont = this._style.currBitmapFont;\r\n        if (bitmapFont) {\r\n            this._charSize.width = bitmapFont.getMaxWidth();\r\n            this._charSize.height = bitmapFont.getMaxHeight();\r\n        }\r\n        else {\r\n            var measureResult = null;\r\n            if (ILaya.Render.isConchApp) {\r\n                measureResult = window.conchTextCanvas.measureText(Text._testWord);\r\n            }\r\n            else {\r\n                measureResult = ILaya.Browser.context.measureText(Text._testWord);\r\n            }\r\n            if (!measureResult)\r\n                measureResult = { width: 100 };\r\n            this._charSize.width = measureResult.width;\r\n            this._charSize.height = (measureResult.height || this.fontSize);\r\n        }\r\n        var lines = text.replace(/\\r\\n/g, \"\\n\").split(\"\\n\");\r\n        for (var i = 0, n = lines.length; i < n; i++) {\r\n            var line = lines[i];\r\n            if (needWordWrapOrTruncate)\r\n                this._parseLine(line, wordWrapWidth);\r\n            else {\r\n                this._lineWidths.push(this._getTextWidth(line));\r\n                this._lines.push(line);\r\n            }\r\n        }\r\n    }\r\n    _parseLine(line, wordWrapWidth) {\r\n        var lines = this._lines;\r\n        var maybeIndex = 0;\r\n        var charsWidth = 0;\r\n        var wordWidth = 0;\r\n        var startIndex = 0;\r\n        charsWidth = this._getTextWidth(line);\r\n        if (charsWidth <= wordWrapWidth) {\r\n            lines.push(line);\r\n            this._lineWidths.push(charsWidth);\r\n            return;\r\n        }\r\n        charsWidth = this._charSize.width;\r\n        maybeIndex = Math.floor(wordWrapWidth / charsWidth);\r\n        (maybeIndex == 0) && (maybeIndex = 1);\r\n        charsWidth = this._getTextWidth(line.substring(0, maybeIndex));\r\n        wordWidth = charsWidth;\r\n        for (var j = maybeIndex, m = line.length; j < m; j++) {\r\n            charsWidth = this._getTextWidth(line.charAt(j));\r\n            wordWidth += charsWidth;\r\n            if (wordWidth > wordWrapWidth) {\r\n                if (this.wordWrap) {\r\n                    var newLine = line.substring(startIndex, j);\r\n                    if (newLine.charCodeAt(newLine.length - 1) < 255) {\r\n                        var execResult = /(?:\\w|-)+$/.exec(newLine);\r\n                        if (execResult) {\r\n                            j = execResult.index + startIndex;\r\n                            if (execResult.index == 0)\r\n                                j += newLine.length;\r\n                            else\r\n                                newLine = line.substring(startIndex, j);\r\n                        }\r\n                    }\r\n                    lines.push(newLine);\r\n                    this._lineWidths.push(wordWidth - charsWidth);\r\n                    startIndex = j;\r\n                    if (j + maybeIndex < m) {\r\n                        j += maybeIndex;\r\n                        charsWidth = this._getTextWidth(line.substring(startIndex, j));\r\n                        wordWidth = charsWidth;\r\n                        j--;\r\n                    }\r\n                    else {\r\n                        lines.push(line.substring(startIndex, m));\r\n                        this._lineWidths.push(this._getTextWidth(lines[lines.length - 1]));\r\n                        startIndex = -1;\r\n                        break;\r\n                    }\r\n                }\r\n                else if (this.overflow == Text.HIDDEN) {\r\n                    lines.push(line.substring(0, j));\r\n                    this._lineWidths.push(this._getTextWidth(lines[lines.length - 1]));\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        if (this.wordWrap && startIndex != -1) {\r\n            lines.push(line.substring(startIndex, m));\r\n            this._lineWidths.push(this._getTextWidth(lines[lines.length - 1]));\r\n        }\r\n    }\r\n    _getTextWidth(text) {\r\n        var bitmapFont = this._style.currBitmapFont;\r\n        if (bitmapFont)\r\n            return bitmapFont.getTextWidth(text);\r\n        else {\r\n            if (ILaya.Render.isConchApp) {\r\n                return window.conchTextCanvas.measureText(text).width;\r\n                ;\r\n            }\r\n            else {\r\n                let ret = ILaya.Browser.context.measureText(text) || { width: 100 };\r\n                return ret.width;\r\n            }\r\n        }\r\n    }\r\n    _getWordWrapWidth() {\r\n        var p = this.padding;\r\n        var w;\r\n        var bitmapFont = this._style.currBitmapFont;\r\n        if (bitmapFont && bitmapFont.autoScaleSize)\r\n            w = this._width * (bitmapFont.fontSize / this.fontSize);\r\n        else\r\n            w = this._width;\r\n        if (w <= 0) {\r\n            w = this.wordWrap ? 100 : ILaya.Browser.width;\r\n        }\r\n        w <= 0 && (w = 100);\r\n        return w - p[3] - p[1];\r\n    }\r\n    getCharPoint(charIndex, out = null) {\r\n        this._isChanged && ILaya.systemTimer.runCallLater(this, this.typeset);\r\n        var len = 0, lines = this._lines, startIndex = 0;\r\n        for (var i = 0, n = lines.length; i < n; i++) {\r\n            len += lines[i].length;\r\n            if (charIndex < len) {\r\n                var line = i;\r\n                break;\r\n            }\r\n            startIndex = len;\r\n        }\r\n        var ctxFont = (this.italic ? \"italic \" : \"\") + (this.bold ? \"bold \" : \"\") + this.fontSize + \"px \" + this.font;\r\n        ILaya.Browser.context.font = ctxFont;\r\n        var width = this._getTextWidth(this._text.substring(startIndex, charIndex));\r\n        var point = out || new Point();\r\n        return point.setTo(this._startX + width - (this._clipPoint ? this._clipPoint.x : 0), this._startY + line * (this._charSize.height + this.leading) - (this._clipPoint ? this._clipPoint.y : 0));\r\n    }\r\n    set scrollX(value) {\r\n        if (this.overflow != Text.SCROLL || (this.textWidth < this._width || !this._clipPoint))\r\n            return;\r\n        value = value < this.padding[3] ? this.padding[3] : value;\r\n        var maxScrollX = this._textWidth - this._width;\r\n        value = value > maxScrollX ? maxScrollX : value;\r\n        this._clipPoint.x = value;\r\n        this._renderText();\r\n    }\r\n    get scrollX() {\r\n        if (!this._clipPoint)\r\n            return 0;\r\n        return this._clipPoint.x;\r\n    }\r\n    set scrollY(value) {\r\n        if (this.overflow != Text.SCROLL || (this.textHeight < this._height || !this._clipPoint))\r\n            return;\r\n        value = value < this.padding[0] ? this.padding[0] : value;\r\n        var maxScrollY = this._textHeight - this._height;\r\n        value = value > maxScrollY ? maxScrollY : value;\r\n        this._clipPoint.y = value;\r\n        this._renderText();\r\n    }\r\n    get scrollY() {\r\n        if (!this._clipPoint)\r\n            return 0;\r\n        return this._clipPoint.y;\r\n    }\r\n    get maxScrollX() {\r\n        return (this.textWidth < this._width) ? 0 : this._textWidth - this._width;\r\n    }\r\n    get maxScrollY() {\r\n        return (this.textHeight < this._height) ? 0 : this._textHeight - this._height;\r\n    }\r\n    get lines() {\r\n        if (this._isChanged)\r\n            this.typeset();\r\n        return this._lines;\r\n    }\r\n    get underlineColor() {\r\n        return this._style.underlineColor;\r\n    }\r\n    set underlineColor(value) {\r\n        this._getTextStyle().underlineColor = value;\r\n        if (!this._isChanged)\r\n            this._renderText();\r\n    }\r\n    get underline() {\r\n        return this._style.underline;\r\n    }\r\n    set underline(value) {\r\n        this._getTextStyle().underline = value;\r\n    }\r\n    set singleCharRender(value) {\r\n        this._singleCharRender = value;\r\n    }\r\n    get singleCharRender() {\r\n        return this._singleCharRender;\r\n    }\r\n}\r\nText.VISIBLE = \"visible\";\r\nText.SCROLL = \"scroll\";\r\nText.HIDDEN = \"hidden\";\r\nText.defaultFontSize = 12;\r\nText.defaultFont = \"Arial\";\r\nText.isComplexText = false;\r\nText.fontFamilyMap = { \"报隶\": \"报隶-简\", \"黑体\": \"黑体-简\", \"楷体\": \"楷体-简\", \"兰亭黑\": \"兰亭黑-简\", \"隶变\": \"隶变-简\", \"凌慧体\": \"凌慧体-简\", \"翩翩体\": \"翩翩体-简\", \"苹方\": \"苹方-简\", \"手札体\": \"手札体-简\", \"宋体\": \"宋体-简\", \"娃娃体\": \"娃娃体-简\", \"魏碑\": \"魏碑-简\", \"行楷\": \"行楷-简\", \"雅痞\": \"雅痞-简\", \"圆体\": \"圆体-简\" };\r\nText._testWord = \"游\";\r\nText.CharacterCache = true;\r\nText.RightToLeft = false;\r\nILaya.regClass(Text);\r\nClassUtils.regClass(\"laya.display.Text\", Text);\r\nClassUtils.regClass(\"Laya.Text\", Text);\r\n//# sourceMappingURL=Text.js.map",
  "references": [
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/display/Sprite.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/display/BitmapFont.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/display/SpriteConst.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/display/Graphics.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/display/css/SpriteStyle.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/display/css/TextStyle.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/events/Event.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/maths/Point.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/maths/Rectangle.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/utils/WordText.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/utils/Timer.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/ILaya.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/utils/ClassUtils.ts"
  ],
  "map": "{\"version\":3,\"file\":\"Text.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../libs/laya/display/Text.ts\"],\"names\":[],\"mappings\":\"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\"}",
  "dts": {
    "name": "D:/widgets/LayaDataStructuresAlgorithms/.rpt2_cache/placeholder/laya/display/Text.d.ts",
    "writeByteOrderMark": false,
    "text": "import { Sprite } from \"./Sprite\";\r\nimport { BitmapFont } from \"./BitmapFont\";\r\nimport { SpriteStyle } from \"./css/SpriteStyle\";\r\nimport { TextStyle } from \"./css/TextStyle\";\r\nimport { Point } from \"../maths/Point\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { WordText } from \"../utils/WordText\";\r\nexport declare class Text extends Sprite {\r\n    static VISIBLE: string;\r\n    static SCROLL: string;\r\n    static HIDDEN: string;\r\n    static defaultFontSize: number;\r\n    static defaultFont: string;\r\n    static defaultFontStr(): string;\r\n    static langPacks: any;\r\n    static isComplexText: boolean;\r\n    static fontFamilyMap: any;\r\n    static _testWord: string;\r\n    private static _bitmapFonts;\r\n    static CharacterCache: boolean;\r\n    static RightToLeft: boolean;\r\n    private _clipPoint;\r\n    protected _text: string;\r\n    protected _isChanged: boolean;\r\n    protected _textWidth: number;\r\n    protected _textHeight: number;\r\n    protected _lines: any[] | null;\r\n    protected _lineWidths: number[] | null;\r\n    protected _startX: number;\r\n    protected _startY: number;\r\n    protected _words: WordText[] | null;\r\n    protected _charSize: any;\r\n    protected _valign: string;\r\n    _fontSize: number;\r\n    _font: string;\r\n    _color: string;\r\n    private _singleCharRender;\r\n    overflow: string;\r\n    constructor();\r\n    getStyle(): SpriteStyle;\r\n    protected _getTextStyle(): TextStyle;\r\n    static registerBitmapFont(name: string, bitmapFont: BitmapFont): void;\r\n    static unregisterBitmapFont(name: string, destroy?: boolean): void;\r\n    destroy(destroyChild?: boolean): void;\r\n    _getBoundPointsM(ifRotate?: boolean): any[];\r\n    getGraphicBounds(realSize?: boolean): Rectangle;\r\n    width: number;\r\n    _getCSSStyle(): TextStyle;\r\n    height: number;\r\n    readonly textWidth: number;\r\n    readonly textHeight: number;\r\n    text: string;\r\n    get_text(): string;\r\n    set_text(value: string): void;\r\n    lang(text: string, arg1?: any, arg2?: any, arg3?: any, arg4?: any, arg5?: any, arg6?: any, arg7?: any, arg8?: any, arg9?: any, arg10?: any): void;\r\n    font: string;\r\n    fontSize: number;\r\n    bold: boolean;\r\n    color: string;\r\n    get_color(): string;\r\n    set_color(value: string): void;\r\n    italic: boolean;\r\n    align: string;\r\n    valign: string;\r\n    wordWrap: boolean;\r\n    leading: number;\r\n    padding: any[];\r\n    bgColor: string;\r\n    set_bgColor(value: string): void;\r\n    get_bgColor(): string;\r\n    borderColor: string;\r\n    stroke: number;\r\n    strokeColor: string;\r\n    protected isChanged: boolean;\r\n    protected _getContextFont(): string;\r\n    protected _isPassWordMode(): boolean;\r\n    protected _getPassWordTxt(txt: string): string;\r\n    protected _renderText(): void;\r\n    private _drawUnderline;\r\n    typeset(): void;\r\n    private _evalTextSize;\r\n    private _checkEnabledViewportOrNot;\r\n    changeText(text: string): void;\r\n    protected _parseLines(text: string): void;\r\n    protected _parseLine(line: string, wordWrapWidth: number): void;\r\n    private _getTextWidth;\r\n    private _getWordWrapWidth;\r\n    getCharPoint(charIndex: number, out?: Point): Point;\r\n    scrollX: number;\r\n    scrollY: number;\r\n    readonly maxScrollX: number;\r\n    readonly maxScrollY: number;\r\n    readonly lines: any[];\r\n    underlineColor: string;\r\n    underline: boolean;\r\n    singleCharRender: boolean;\r\n}\r\n"
  }
}
