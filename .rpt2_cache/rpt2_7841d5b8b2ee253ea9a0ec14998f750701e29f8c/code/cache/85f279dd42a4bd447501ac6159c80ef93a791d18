{
  "code": "import { LayaGL } from \"../../layagl/LayaGL\";\r\nimport { Mesh2D } from \"./Mesh2D\";\r\nexport class MeshVG extends Mesh2D {\r\n    constructor() {\r\n        super(MeshVG.const_stride, 4, 4);\r\n        this.canReuse = true;\r\n        this.setAttributes(MeshVG._fixattriInfo);\r\n    }\r\n    static __init__() {\r\n        var gl = LayaGL.instance;\r\n        MeshVG._fixattriInfo = [5126, 2, 0,\r\n            5121, 4, 8];\r\n    }\r\n    static getAMesh(mainctx) {\r\n        var ret;\r\n        if (MeshVG._POOL.length) {\r\n            ret = MeshVG._POOL.pop();\r\n        }\r\n        else\r\n            ret = new MeshVG();\r\n        mainctx && ret._vb._resizeBuffer(64 * 1024 * MeshVG.const_stride, false);\r\n        return ret;\r\n    }\r\n    addVertAndIBToMesh(ctx, points, rgba, ib) {\r\n        var startpos = this._vb.needSize(points.length / 2 * MeshVG.const_stride);\r\n        var f32pos = startpos >> 2;\r\n        var vbdata = this._vb._floatArray32 || this._vb.getFloat32Array();\r\n        var vbu32Arr = this._vb._uint32Array;\r\n        var ci = 0;\r\n        var sz = points.length / 2;\r\n        for (var i = 0; i < sz; i++) {\r\n            vbdata[f32pos++] = points[ci];\r\n            vbdata[f32pos++] = points[ci + 1];\r\n            ci += 2;\r\n            vbu32Arr[f32pos++] = rgba;\r\n        }\r\n        this._vb.setNeedUpload();\r\n        this._ib.append(new Uint16Array(ib));\r\n        this._ib.setNeedUpload();\r\n        this.vertNum += sz;\r\n        this.indexNum += ib.length;\r\n    }\r\n    releaseMesh() {\r\n        this._vb.setByteLength(0);\r\n        this._ib.setByteLength(0);\r\n        this.vertNum = 0;\r\n        this.indexNum = 0;\r\n        MeshVG._POOL.push(this);\r\n    }\r\n    destroy() {\r\n        this._ib.destroy();\r\n        this._vb.destroy();\r\n        this._ib.disposeResource();\r\n        this._vb.deleteBuffer();\r\n    }\r\n}\r\nMeshVG.const_stride = 12;\r\nMeshVG._POOL = [];\r\n//# sourceMappingURL=MeshVG.js.map",
  "references": [
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/layagl/LayaGL.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/resource/Context.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/utils/Mesh2D.ts"
  ],
  "map": "{\"version\":3,\"file\":\"MeshVG.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../libs/laya/webgl/utils/MeshVG.ts\"],\"names\":[],\"mappings\":\"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\"}",
  "dts": {
    "name": "D:/widgets/LayaDataStructuresAlgorithms/.rpt2_cache/placeholder/laya/webgl/utils/MeshVG.d.ts",
    "writeByteOrderMark": false,
    "text": "import { Context } from \"../../resource/Context\";\r\nimport { Mesh2D } from \"./Mesh2D\";\r\nexport declare class MeshVG extends Mesh2D {\r\n    static const_stride: number;\r\n    private static _fixattriInfo;\r\n    private static _POOL;\r\n    static __init__(): void;\r\n    constructor();\r\n    static getAMesh(mainctx: boolean): MeshVG;\r\n    addVertAndIBToMesh(ctx: Context, points: any[], rgba: number, ib: any[]): void;\r\n    releaseMesh(): void;\r\n    destroy(): void;\r\n}\r\n"
  }
}
