{
  "code": "import { Texture2D } from \"./Texture2D\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { BaseTexture } from \"./BaseTexture\";\r\nimport { WebGLContext } from \"../webgl/WebGLContext\";\r\nimport { BaseShader } from \"../webgl/shader/BaseShader\";\r\nimport { RenderState2D } from \"../webgl/utils/RenderState2D\";\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { RenderTextureFormat, RenderTextureDepthFormat } from \"./RenderTextureFormat\";\r\nexport class RenderTexture2D extends BaseTexture {\r\n    constructor(width, height, format = RenderTextureFormat.R8G8B8, depthStencilFormat = RenderTextureDepthFormat.DEPTH_16) {\r\n        super(format, false);\r\n        this._mgrKey = 0;\r\n        this._glTextureType = LayaGL.instance.TEXTURE_2D;\r\n        this._width = width;\r\n        this._height = height;\r\n        this._depthStencilFormat = depthStencilFormat;\r\n        this._create(width, height);\r\n        this.lock = true;\r\n    }\r\n    static get currentActive() {\r\n        return RenderTexture2D._currentActive;\r\n    }\r\n    get depthStencilFormat() {\r\n        return this._depthStencilFormat;\r\n    }\r\n    get defaulteTexture() {\r\n        return Texture2D.grayTexture;\r\n    }\r\n    getIsReady() {\r\n        return true;\r\n    }\r\n    get sourceWidth() {\r\n        return this._width;\r\n    }\r\n    get sourceHeight() {\r\n        return this._height;\r\n    }\r\n    get offsetX() {\r\n        return 0;\r\n    }\r\n    get offsetY() {\r\n        return 0;\r\n    }\r\n    _create(width, height) {\r\n        var gl = LayaGL.instance;\r\n        this._frameBuffer = gl.createFramebuffer();\r\n        WebGLContext.bindTexture(gl, this._glTextureType, this._glTexture);\r\n        var glFormat = this._getGLFormat();\r\n        gl.texImage2D(this._glTextureType, 0, glFormat, width, height, 0, glFormat, gl.UNSIGNED_BYTE, null);\r\n        this._setGPUMemory(width * height * 4);\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this._frameBuffer);\r\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this._glTexture, 0);\r\n        if (this._depthStencilFormat !== RenderTextureDepthFormat.DEPTHSTENCIL_NONE) {\r\n            this._depthStencilBuffer = gl.createRenderbuffer();\r\n            gl.bindRenderbuffer(gl.RENDERBUFFER, this._depthStencilBuffer);\r\n            switch (this._depthStencilFormat) {\r\n                case RenderTextureDepthFormat.DEPTH_16:\r\n                    gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, width, height);\r\n                    gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, this._depthStencilBuffer);\r\n                    break;\r\n                case RenderTextureDepthFormat.STENCIL_8:\r\n                    gl.renderbufferStorage(gl.RENDERBUFFER, gl.STENCIL_INDEX8, width, height);\r\n                    gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.STENCIL_ATTACHMENT, gl.RENDERBUFFER, this._depthStencilBuffer);\r\n                    break;\r\n                case RenderTextureDepthFormat.DEPTHSTENCIL_24_8:\r\n                    gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_STENCIL, width, height);\r\n                    gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_STENCIL_ATTACHMENT, gl.RENDERBUFFER, this._depthStencilBuffer);\r\n                    break;\r\n                default:\r\n            }\r\n        }\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\r\n        this._setWarpMode(gl.TEXTURE_WRAP_S, this._wrapModeU);\r\n        this._setWarpMode(gl.TEXTURE_WRAP_T, this._wrapModeV);\r\n        this._setFilterMode(this._filterMode);\r\n        this._setAnisotropy(this._anisoLevel);\r\n        this._readyed = true;\r\n        this._activeResource();\r\n    }\r\n    generateMipmap() {\r\n        if (this._isPot(this.width) && this._isPot(this.height)) {\r\n            this._mipmap = true;\r\n            LayaGL.instance.generateMipmap(this._glTextureType);\r\n            this._setFilterMode(this._filterMode);\r\n            this._setGPUMemory(this.width * this.height * 4 * (1 + 1 / 3));\r\n        }\r\n        else {\r\n            this._mipmap = false;\r\n            this._setGPUMemory(this.width * this.height * 4);\r\n        }\r\n    }\r\n    static pushRT() {\r\n        RenderTexture2D.rtStack.push({ rt: RenderTexture2D._currentActive, w: RenderState2D.width, h: RenderState2D.height });\r\n    }\r\n    static popRT() {\r\n        var gl = LayaGL.instance;\r\n        var top = RenderTexture2D.rtStack.pop();\r\n        if (top) {\r\n            if (RenderTexture2D._currentActive != top.rt) {\r\n                LayaGL.instance.bindFramebuffer(gl.FRAMEBUFFER, top.rt ? top.rt._frameBuffer : null);\r\n                RenderTexture2D._currentActive = top.rt;\r\n            }\r\n            gl.viewport(0, 0, top.w, top.h);\r\n            RenderState2D.width = top.w;\r\n            RenderState2D.height = top.h;\r\n        }\r\n    }\r\n    start() {\r\n        var gl = LayaGL.instance;\r\n        LayaGL.instance.bindFramebuffer(gl.FRAMEBUFFER, this._frameBuffer);\r\n        this._lastRT = RenderTexture2D._currentActive;\r\n        RenderTexture2D._currentActive = this;\r\n        this._readyed = true;\r\n        gl.viewport(0, 0, this._width, this._height);\r\n        this._lastWidth = RenderState2D.width;\r\n        this._lastHeight = RenderState2D.height;\r\n        RenderState2D.width = this._width;\r\n        RenderState2D.height = this._height;\r\n        BaseShader.activeShader = null;\r\n    }\r\n    end() {\r\n        var gl = LayaGL.instance;\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        RenderTexture2D._currentActive = null;\r\n        this._readyed = true;\r\n    }\r\n    restore() {\r\n        var gl = LayaGL.instance;\r\n        if (this._lastRT != RenderTexture2D._currentActive) {\r\n            LayaGL.instance.bindFramebuffer(gl.FRAMEBUFFER, this._lastRT ? this._lastRT._frameBuffer : null);\r\n            RenderTexture2D._currentActive = this._lastRT;\r\n        }\r\n        this._readyed = true;\r\n        gl.viewport(0, 0, this._lastWidth, this._lastHeight);\r\n        RenderState2D.width = this._lastWidth;\r\n        RenderState2D.height = this._lastHeight;\r\n        BaseShader.activeShader = null;\r\n    }\r\n    clear(r = 0.0, g = 0.0, b = 0.0, a = 1.0) {\r\n        var gl = LayaGL.instance;\r\n        gl.clearColor(r, g, b, a);\r\n        var clearFlag = gl.COLOR_BUFFER_BIT;\r\n        switch (this._depthStencilFormat) {\r\n            case gl.DEPTH_COMPONENT16:\r\n                clearFlag |= gl.DEPTH_BUFFER_BIT;\r\n                break;\r\n            case gl.STENCIL_INDEX8:\r\n                clearFlag |= gl.STENCIL_BUFFER_BIT;\r\n                break;\r\n            case gl.DEPTH_STENCIL:\r\n                clearFlag |= gl.DEPTH_BUFFER_BIT;\r\n                clearFlag |= gl.STENCIL_BUFFER_BIT;\r\n                break;\r\n        }\r\n        gl.clear(clearFlag);\r\n    }\r\n    getData(x, y, width, height) {\r\n        if (ILaya.Render.isConchApp && window.conchConfig.threadMode == 2) {\r\n            throw \"native 2 thread mode use getDataAsync\";\r\n        }\r\n        var gl = LayaGL.instance;\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this._frameBuffer);\r\n        var canRead = (gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE);\r\n        if (!canRead) {\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n            return null;\r\n        }\r\n        var pixels = new Uint8Array(this._width * this._height * 4);\r\n        var glFormat = this._getGLFormat();\r\n        gl.readPixels(x, y, width, height, glFormat, gl.UNSIGNED_BYTE, pixels);\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        return pixels;\r\n    }\r\n    getDataAsync(x, y, width, height, callBack) {\r\n        var gl = LayaGL.instance;\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this._frameBuffer);\r\n        gl.readPixelsAsync(x, y, width, height, gl.RGBA, gl.UNSIGNED_BYTE, function (data) {\r\n            callBack(new Uint8Array(data));\r\n        });\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    }\r\n    recycle() {\r\n    }\r\n    _disposeResource() {\r\n        if (this._frameBuffer) {\r\n            var gl = LayaGL.instance;\r\n            gl.deleteTexture(this._glTexture);\r\n            gl.deleteFramebuffer(this._frameBuffer);\r\n            gl.deleteRenderbuffer(this._depthStencilBuffer);\r\n            this._glTexture = null;\r\n            this._frameBuffer = null;\r\n            this._depthStencilBuffer = null;\r\n            this._setGPUMemory(0);\r\n        }\r\n    }\r\n}\r\nRenderTexture2D.rtStack = [];\r\nRenderTexture2D.defuv = [0, 0, 1, 0, 1, 1, 0, 1];\r\nRenderTexture2D.flipyuv = [0, 1, 1, 1, 1, 0, 0, 0];\r\n//# sourceMappingURL=RenderTexture2D.js.map",
  "references": [
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/resource/Texture2D.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/layagl/LayaGL.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/resource/BaseTexture.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/WebGLContext.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/shader/BaseShader.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/utils/RenderState2D.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/ILaya.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/resource/RenderTextureFormat.ts"
  ],
  "map": "{\"version\":3,\"file\":\"RenderTexture2D.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../libs/laya/resource/RenderTexture2D.ts\"],\"names\":[],\"mappings\":\"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\"}",
  "dts": {
    "name": "D:/widgets/LayaDataStructuresAlgorithms/.rpt2_cache/placeholder/laya/resource/RenderTexture2D.d.ts",
    "writeByteOrderMark": false,
    "text": "import { BaseTexture } from \"./BaseTexture\";\r\nexport declare class RenderTexture2D extends BaseTexture {\r\n    private static _currentActive;\r\n    private _lastRT;\r\n    private _lastWidth;\r\n    private _lastHeight;\r\n    private static rtStack;\r\n    static defuv: any[];\r\n    static flipyuv: any[];\r\n    static readonly currentActive: RenderTexture2D;\r\n    private _frameBuffer;\r\n    private _depthStencilBuffer;\r\n    private _depthStencilFormat;\r\n    _mgrKey: number;\r\n    readonly depthStencilFormat: number;\r\n    readonly defaulteTexture: BaseTexture;\r\n    getIsReady(): boolean;\r\n    readonly sourceWidth: number;\r\n    readonly sourceHeight: number;\r\n    readonly offsetX: number;\r\n    readonly offsetY: number;\r\n    constructor(width: number, height: number, format?: number, depthStencilFormat?: number);\r\n    private _create;\r\n    generateMipmap(): void;\r\n    static pushRT(): void;\r\n    static popRT(): void;\r\n    start(): void;\r\n    end(): void;\r\n    restore(): void;\r\n    clear(r?: number, g?: number, b?: number, a?: number): void;\r\n    getData(x: number, y: number, width: number, height: number): Uint8Array;\r\n    getDataAsync(x: number, y: number, width: number, height: number, callBack: Function): void;\r\n    recycle(): void;\r\n    _disposeResource(): void;\r\n}\r\n"
  }
}
