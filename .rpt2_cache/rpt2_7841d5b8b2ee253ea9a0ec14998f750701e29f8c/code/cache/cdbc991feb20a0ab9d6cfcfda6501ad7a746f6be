{
  "code": "import { Label } from \"./Label\";\r\nimport { Input } from \"../display/Input\";\r\nimport { Event } from \"../events/Event\";\r\nimport { Loader } from \"../net/Loader\";\r\nimport { AutoBitmap } from \"./AutoBitmap\";\r\nimport { Styles } from \"./Styles\";\r\nimport { UIUtils } from \"./UIUtils\";\r\nimport { Handler } from \"../utils/Handler\";\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\";\r\nexport class TextInput extends Label {\r\n    constructor(text = \"\") {\r\n        super();\r\n        this.text = text;\r\n        this.skin = this.skin;\r\n    }\r\n    preinitialize() {\r\n        this.mouseEnabled = true;\r\n    }\r\n    destroy(destroyChild = true) {\r\n        super.destroy(destroyChild);\r\n        this._bg && this._bg.destroy();\r\n        this._bg = null;\r\n    }\r\n    createChildren() {\r\n        this.addChild(this._tf = new Input());\r\n        this._tf.padding = Styles.inputLabelPadding;\r\n        this._tf.on(Event.INPUT, this, this._onInput);\r\n        this._tf.on(Event.ENTER, this, this._onEnter);\r\n        this._tf.on(Event.BLUR, this, this._onBlur);\r\n        this._tf.on(Event.FOCUS, this, this._onFocus);\r\n    }\r\n    _onFocus() {\r\n        this.event(Event.FOCUS, this);\r\n    }\r\n    _onBlur() {\r\n        this.event(Event.BLUR, this);\r\n    }\r\n    _onInput() {\r\n        this.event(Event.INPUT, this);\r\n    }\r\n    _onEnter() {\r\n        this.event(Event.ENTER, this);\r\n    }\r\n    initialize() {\r\n        this.width = 128;\r\n        this.height = 22;\r\n    }\r\n    get bg() {\r\n        return this._bg;\r\n    }\r\n    set bg(value) {\r\n        this.graphics = this._bg = value;\r\n    }\r\n    get skin() {\r\n        return this._skin;\r\n    }\r\n    set skin(value) {\r\n        if (this._skin != value) {\r\n            this._skin = value;\r\n            if (this._skin && !Loader.getRes(this._skin)) {\r\n                ILaya.loader.load(this._skin, Handler.create(this, this._skinLoaded), null, Loader.IMAGE, 1);\r\n            }\r\n            else {\r\n                this._skinLoaded();\r\n            }\r\n        }\r\n    }\r\n    _skinLoaded() {\r\n        this._bg || (this.graphics = this._bg = new AutoBitmap());\r\n        this._bg.source = Loader.getRes(this._skin);\r\n        this._width && (this._bg.width = this._width);\r\n        this._height && (this._bg.height = this._height);\r\n        this._sizeChanged();\r\n        this.event(Event.LOADED);\r\n    }\r\n    get sizeGrid() {\r\n        return this._bg && this._bg.sizeGrid ? this._bg.sizeGrid.join(\",\") : null;\r\n    }\r\n    set sizeGrid(value) {\r\n        this._bg || (this.graphics = this._bg = new AutoBitmap());\r\n        this._bg.sizeGrid = UIUtils.fillArray(Styles.defaultSizeGrid, value, Number);\r\n    }\r\n    set text(value) {\r\n        if (this._tf.text != value) {\r\n            value = value + \"\";\r\n            this._tf.text = value;\r\n            this.event(Event.CHANGE);\r\n        }\r\n    }\r\n    get text() {\r\n        return super.text;\r\n    }\r\n    set width(value) {\r\n        super.width = value;\r\n        this._bg && (this._bg.width = value);\r\n    }\r\n    get width() {\r\n        return super.width;\r\n    }\r\n    set height(value) {\r\n        super.height = value;\r\n        this._bg && (this._bg.height = value);\r\n    }\r\n    get height() {\r\n        return super.height;\r\n    }\r\n    get multiline() {\r\n        return this._tf.multiline;\r\n    }\r\n    set multiline(value) {\r\n        this._tf.multiline = value;\r\n    }\r\n    set editable(value) {\r\n        this._tf.editable = value;\r\n    }\r\n    get editable() {\r\n        return this._tf.editable;\r\n    }\r\n    select() {\r\n        this._tf.select();\r\n    }\r\n    get restrict() {\r\n        return this._tf.restrict;\r\n    }\r\n    set restrict(pattern) {\r\n        this._tf.restrict = pattern;\r\n    }\r\n    get prompt() {\r\n        return this._tf.prompt;\r\n    }\r\n    set prompt(value) {\r\n        this._tf.prompt = value;\r\n    }\r\n    get promptColor() {\r\n        return this._tf.promptColor;\r\n    }\r\n    set promptColor(value) {\r\n        this._tf.promptColor = value;\r\n    }\r\n    get maxChars() {\r\n        return this._tf.maxChars;\r\n    }\r\n    set maxChars(value) {\r\n        this._tf.maxChars = value;\r\n    }\r\n    get focus() {\r\n        return this._tf.focus;\r\n    }\r\n    set focus(value) {\r\n        this._tf.focus = value;\r\n    }\r\n    get type() {\r\n        return this._tf.type;\r\n    }\r\n    set type(value) {\r\n        this._tf.type = value;\r\n    }\r\n    setSelection(startIndex, endIndex) {\r\n        this._tf.setSelection(startIndex, endIndex);\r\n    }\r\n}\r\nILaya.regClass(TextInput);\r\nClassUtils.regClass(\"laya.ui.TextInput\", TextInput);\r\nClassUtils.regClass(\"Laya.TextInput\", TextInput);\r\n//# sourceMappingURL=TextInput.js.map",
  "references": [
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/ui/Label.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/display/Input.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/events/Event.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/net/Loader.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/ui/AutoBitmap.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/ui/Styles.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/ui/UIUtils.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/utils/Handler.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/ILaya.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/utils/ClassUtils.ts"
  ],
  "map": "{\"version\":3,\"file\":\"TextInput.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../libs/laya/ui/TextInput.ts\"],\"names\":[],\"mappings\":\"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\"}",
  "dts": {
    "name": "D:/widgets/LayaDataStructuresAlgorithms/.rpt2_cache/placeholder/laya/ui/TextInput.d.ts",
    "writeByteOrderMark": false,
    "text": "import { Label } from \"./Label\";\r\nimport { AutoBitmap } from \"./AutoBitmap\";\r\nexport declare class TextInput extends Label {\r\n    protected _bg: AutoBitmap;\r\n    protected _skin: string;\r\n    constructor(text?: string);\r\n    protected preinitialize(): void;\r\n    destroy(destroyChild?: boolean): void;\r\n    protected createChildren(): void;\r\n    private _onFocus;\r\n    private _onBlur;\r\n    private _onInput;\r\n    private _onEnter;\r\n    protected initialize(): void;\r\n    bg: AutoBitmap;\r\n    skin: string;\r\n    protected _skinLoaded(): void;\r\n    sizeGrid: string;\r\n    text: string;\r\n    width: number;\r\n    height: number;\r\n    multiline: boolean;\r\n    editable: boolean;\r\n    select(): void;\r\n    restrict: string;\r\n    prompt: string;\r\n    promptColor: string;\r\n    maxChars: number;\r\n    focus: boolean;\r\n    type: string;\r\n    setSelection(startIndex: number, endIndex: number): void;\r\n}\r\n"
  }
}
