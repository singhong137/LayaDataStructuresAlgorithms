{
  "code": "import { ColorFilter } from \"../../filters/ColorFilter\";\r\nimport { Pool } from \"../../utils/Pool\";\r\nexport class DrawTextureCmd {\r\n    constructor() {\r\n        this.colorFlt = null;\r\n        this.uv = null;\r\n    }\r\n    static create(texture, x, y, width, height, matrix, alpha, color, blendMode, uv) {\r\n        var cmd = Pool.getItemByClass(\"DrawTextureCmd\", DrawTextureCmd);\r\n        cmd.texture = texture;\r\n        texture._addReference();\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.width = width;\r\n        cmd.height = height;\r\n        cmd.matrix = matrix;\r\n        cmd.alpha = alpha;\r\n        cmd.color = color;\r\n        cmd.blendMode = blendMode;\r\n        cmd.uv = uv == undefined ? null : uv;\r\n        if (color) {\r\n            cmd.colorFlt = new ColorFilter();\r\n            cmd.colorFlt.setColor(color);\r\n        }\r\n        return cmd;\r\n    }\r\n    recover() {\r\n        this.texture && this.texture._removeReference();\r\n        this.texture = null;\r\n        this.matrix = null;\r\n        Pool.recover(\"DrawTextureCmd\", this);\r\n    }\r\n    run(context, gx, gy) {\r\n        this.texture && context.drawTextureWithTransform(this.texture, this.x, this.y, this.width, this.height, this.matrix, gx, gy, this.alpha, this.blendMode, this.colorFlt, this.uv);\r\n    }\r\n    get cmdID() {\r\n        return DrawTextureCmd.ID;\r\n    }\r\n}\r\nDrawTextureCmd.ID = \"DrawTexture\";\r\n//# sourceMappingURL=DrawTextureCmd.js.map",
  "references": [
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/filters/ColorFilter.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/maths/Matrix.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/resource/Context.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/resource/Texture.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/utils/Pool.ts"
  ],
  "map": "{\"version\":3,\"file\":\"DrawTextureCmd.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../libs/laya/display/cmd/DrawTextureCmd.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,2BAA2B,CAAA;AAIvD,OAAO,EAAE,IAAI,EAAE,MAAM,kBAAkB,CAAA;AAKvC,MAAM,OAAO,cAAc;IAA3B;QAoCI,aAAQ,GAAqB,IAAI,CAAC;QAMlC,OAAE,GAAkB,IAAI,CAAC;IA4C7B,CAAC;IAzCG,MAAM,CAAC,MAAM,CAAC,OAAgB,EAAE,CAAS,EAAE,CAAS,EAAE,KAAa,EAAE,MAAc,EAAE,MAAc,EAAE,KAAa,EAAE,KAAa,EAAE,SAAiB,EAAE,EAAa;QAC/J,IAAI,GAAG,GAAmB,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,cAAc,CAAC,CAAC;QAChF,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC;QACtB,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QACV,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QACV,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC;QAClB,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC;QACpB,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC;QACpB,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC;QAClB,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC;QAClB,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC;QAC1B,GAAG,CAAC,EAAE,GAAG,EAAE,IAAE,SAAS,CAAA,CAAC,CAAA,IAAI,CAAA,CAAC,CAAA,EAAE,CAAC;QAC/B,IAAI,KAAK,EAAE;YACP,GAAG,CAAC,QAAQ,GAAG,IAAI,WAAW,EAAE,CAAC;YACjC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SAChC;QAED,OAAO,GAAG,CAAC;IACf,CAAC;IAKD,OAAO;QACH,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC;QAChD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;IACzC,CAAC;IAGD,GAAG,CAAC,OAAgB,EAAE,EAAU,EAAE,EAAU;QACxC,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,wBAAwB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;IACrL,CAAC;IAGD,IAAI,KAAK;QACL,OAAO,cAAc,CAAC,EAAE,CAAC;IAC7B,CAAC;;AAnFM,iBAAE,GAAW,aAAa,CAAC\"}",
  "dts": {
    "name": "D:/widgets/LayaDataStructuresAlgorithms/.rpt2_cache/placeholder/laya/display/cmd/DrawTextureCmd.d.ts",
    "writeByteOrderMark": false,
    "text": "import { ColorFilter } from \"../../filters/ColorFilter\";\r\nimport { Matrix } from \"../../maths/Matrix\";\r\nimport { Context } from \"../../resource/Context\";\r\nimport { Texture } from \"../../resource/Texture\";\r\nexport declare class DrawTextureCmd {\r\n    static ID: string;\r\n    texture: Texture | null;\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    height: number;\r\n    matrix: Matrix | null;\r\n    alpha: number;\r\n    color: string;\r\n    colorFlt: ColorFilter | null;\r\n    blendMode: string;\r\n    uv: number[] | null;\r\n    static create(texture: Texture, x: number, y: number, width: number, height: number, matrix: Matrix, alpha: number, color: string, blendMode: string, uv?: number[]): DrawTextureCmd;\r\n    recover(): void;\r\n    run(context: Context, gx: number, gy: number): void;\r\n    readonly cmdID: string;\r\n}\r\n"
  }
}
