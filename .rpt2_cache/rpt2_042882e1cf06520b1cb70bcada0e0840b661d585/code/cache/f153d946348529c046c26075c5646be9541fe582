{
  "code": "import { Script } from \"laya/components/Script\";\r\nimport { RedBlackTree } from \"../data_structures/Tree\";\r\nexport default class TreeTest extends Script {\r\n    constructor() {\r\n        super();\r\n    }\r\n    onEnable() {\r\n        console.log('TreeTest---');\r\n        const tree = new RedBlackTree();\r\n        tree.insert(11);\r\n        tree.insert(7);\r\n        tree.insert(15);\r\n        tree.insert(5);\r\n        tree.insert(3);\r\n        tree.insert(9);\r\n        tree.insert(8);\r\n        tree.insert(10);\r\n        tree.insert(13);\r\n        tree.insert(12);\r\n        tree.insert(14);\r\n        tree.insert(20);\r\n        tree.insert(18);\r\n        tree.insert(25);\r\n        tree.insert(6);\r\n        const printNode = (value) => console.log(value);\r\n        console.log('inOrderTraverse...');\r\n        tree.inOrderTraverse(printNode);\r\n        console.log('preOrderTraverse...');\r\n        tree.preOrderTraverse(printNode);\r\n        console.log('postOrderTraverse...');\r\n        tree.postOrderTraverse(printNode);\r\n        console.log('search min max...', tree.min(), tree.max());\r\n        console.log(tree.search(1) ? 'key 1 found.' : 'key 1 not found.');\r\n        console.log(tree.search(8) ? 'key 8 found.' : 'key 8 not found.');\r\n        console.log('remove 6...');\r\n        tree.remove(6);\r\n        tree.inOrderTraverse(printNode);\r\n        console.log('remove 5...');\r\n        tree.remove(5);\r\n        tree.inOrderTraverse(printNode);\r\n        console.log('remove 15...');\r\n        tree.remove(15);\r\n        tree.inOrderTraverse(printNode);\r\n    }\r\n}\r\n",
  "references": [
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/components/Script.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/src/data_structures/Tree.ts"
  ]
}
