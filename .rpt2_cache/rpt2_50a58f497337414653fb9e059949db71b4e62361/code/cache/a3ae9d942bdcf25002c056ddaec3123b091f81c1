{
  "code": "export class Stack {\r\n    constructor() {\r\n        this.items = [];\r\n    }\r\n    push(element) {\r\n        this.items.push(element);\r\n    }\r\n    pop() {\r\n        return this.items.pop();\r\n    }\r\n    peek() {\r\n        return this.items[this.items.length - 1];\r\n    }\r\n    isEmpty() {\r\n        return this.items.length == 0;\r\n    }\r\n    clear() {\r\n        this.items = [];\r\n    }\r\n    size() {\r\n        return this.items.length;\r\n    }\r\n}\r\nexport class Stack1 {\r\n    constructor() {\r\n        this.count = 0;\r\n        this.items = {};\r\n    }\r\n    push(element) {\r\n        this.items[this.count] = element;\r\n        this.count++;\r\n    }\r\n    size() {\r\n        return this.count;\r\n    }\r\n    isEmpty() {\r\n        return this.count == 0;\r\n    }\r\n    pop() {\r\n        if (this.isEmpty())\r\n            return undefined;\r\n        this.count--;\r\n        const result = this.items[this.count];\r\n        delete this.items[this.count];\r\n        return result;\r\n    }\r\n    peek() {\r\n        if (this.isEmpty())\r\n            return undefined;\r\n        return this.items[this.count - 1];\r\n    }\r\n    clear() {\r\n        this.items = {};\r\n        this.count = 0;\r\n    }\r\n    toString() {\r\n        if (this.isEmpty())\r\n            return '';\r\n        let objString = `${this.items[0]}`;\r\n        for (let i = 1; i < this.count; i++)\r\n            objString = `${objString},${this.items[i]}`;\r\n        return objString;\r\n    }\r\n}\r\n",
  "references": []
}
