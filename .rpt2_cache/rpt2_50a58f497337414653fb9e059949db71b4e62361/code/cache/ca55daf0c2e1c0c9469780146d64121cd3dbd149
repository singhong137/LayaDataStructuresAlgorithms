{
  "code": "import { Script } from \"laya/components/Script\";\r\nimport { Stack1, Stack } from \"../data_structures/Stack\";\r\nexport default class StackTest extends Script {\r\n    constructor() {\r\n        super();\r\n    }\r\n    onEnable() {\r\n        const stack = new Stack();\r\n        console.log(stack.isEmpty());\r\n        stack.push(5);\r\n        stack.push(8);\r\n        console.log(stack.peek());\r\n        stack.push(11);\r\n        console.log(stack.size());\r\n        console.log(stack.isEmpty());\r\n        stack.push(15);\r\n        stack.pop();\r\n        stack.pop();\r\n        console.log(stack.size());\r\n        const stack1 = new Stack1();\r\n        stack1.push(5);\r\n        stack1.push(8);\r\n        stack1.clear();\r\n        let decimal2Binary = (decNum) => {\r\n            const remStack = new Stack1();\r\n            let number = decNum;\r\n            let rem;\r\n            let binaryString = '';\r\n            while (number > 0) {\r\n                rem = Math.floor(number % 2);\r\n                remStack.push(rem);\r\n                number = Math.floor(number / 2);\r\n            }\r\n            while (!remStack.isEmpty()) {\r\n                binaryString += remStack.pop().toString();\r\n            }\r\n            return binaryString;\r\n        };\r\n        console.log('decimal2Binary:');\r\n        console.log(decimal2Binary(233));\r\n        console.log(decimal2Binary(10));\r\n        console.log(decimal2Binary(1000));\r\n        console.log(decimal2Binary(13));\r\n        let baseConverter = (decNumber, base) => {\r\n            const remStack = new Stack1();\r\n            const digits = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n            let number = decNumber;\r\n            let rem;\r\n            let baseString = '';\r\n            if (!(base >= 2 && base <= 36))\r\n                return '';\r\n            while (number > 0) {\r\n                rem = Math.floor(number % base);\r\n                remStack.push(rem);\r\n                number = Math.floor(number / base);\r\n            }\r\n            while (!remStack.isEmpty())\r\n                baseString += digits[remStack.pop()];\r\n            return baseString;\r\n        };\r\n        console.log('baseConverter:');\r\n        console.log(baseConverter(100345, 2));\r\n        console.log(baseConverter(100345, 8));\r\n        console.log(baseConverter(100345, 16));\r\n        console.log(baseConverter(100345, 35));\r\n    }\r\n}\r\n",
  "references": [
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/components/Script.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/src/data_structures/Stack.ts"
  ]
}
