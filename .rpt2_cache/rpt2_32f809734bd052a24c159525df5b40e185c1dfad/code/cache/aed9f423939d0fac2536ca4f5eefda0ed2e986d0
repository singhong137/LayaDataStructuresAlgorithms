{
  "code": "import { findMaxValue } from \"../search/min-max-search\";\r\nexport function countingSort(array) {\r\n    if (array.length < 2)\r\n        return array;\r\n    const maxValue = findMaxValue(array);\r\n    let sortedIndex = 0;\r\n    const counts = new Array(maxValue + 1);\r\n    array.forEach(element => {\r\n        if (!counts[element])\r\n            counts[element] = 0;\r\n        counts[element]++;\r\n    });\r\n    counts.forEach((element, i) => {\r\n        while (element > 0) {\r\n            array[sortedIndex++] = i;\r\n            element--;\r\n        }\r\n    });\r\n    return array;\r\n}\r\n//# sourceMappingURL=counting-sort.js.map",
  "references": [
    "D:/widgets/LayaDataStructuresAlgorithms/src/algorithms/search/min-max-search.ts"
  ],
  "map": "{\"version\":3,\"file\":\"counting-sort.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/algorithms/sorting/counting-sort.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,0BAA0B,CAAC;AAExD,MAAM,UAAU,YAAY,CAAC,KAAe;IACxC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC;QAAE,OAAO,KAAK,CAAC;IAEnC,MAAM,QAAQ,GAAG,YAAY,CAAS,KAAK,CAAC,CAAC;IAC7C,IAAI,WAAW,GAAG,CAAC,CAAC;IACpB,MAAM,MAAM,GAAG,IAAI,KAAK,CAAS,QAAQ,GAAG,CAAC,CAAC,CAAC;IAE/C,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;QACpB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;YAAE,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAC1C,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC;IACtB,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC,EAAE,EAAE;QAC1B,OAAO,OAAO,GAAG,CAAC,EAAE;YAChB,KAAK,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC;YACzB,OAAO,EAAE,CAAC;SACb;IACL,CAAC,CAAC,CAAC;IACH,OAAO,KAAK,CAAC;AACjB,CAAC\"}"
}
