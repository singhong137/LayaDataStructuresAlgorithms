{
  "code": "const INF = Number.MAX_SAFE_INTEGER;\r\nconst minDistance = (dist, visited) => {\r\n    let min = INF;\r\n    let minIndex = -1;\r\n    for (let v = 0; v < dist.length; v++) {\r\n        if (visited[v] === false && dist[v] <= min) {\r\n            min = dist[v];\r\n            minIndex = v;\r\n        }\r\n    }\r\n    return minIndex;\r\n};\r\nexport function dijkstra(graph, src) {\r\n    const dist = [];\r\n    const visited = [];\r\n    const length = graph.length;\r\n    for (let i = 0; i < length; i++) {\r\n        dist[i] = INF;\r\n        visited[i] = false;\r\n    }\r\n    dist[src] = 0;\r\n    for (let i = 0; i < length - 1; i++) {\r\n        const u = minDistance(dist, visited);\r\n        visited[u] = true;\r\n        for (let v = 0; v < length; v++) {\r\n            if (!visited[v] && graph[u][v] != 0 && dist[u] !== INF && dist[u] + graph[u][v] < dist[v]) {\r\n                dist[v] = dist[u] + graph[u][v];\r\n            }\r\n        }\r\n    }\r\n    return dist;\r\n}\r\nexport function dijkstraWithPath(graph, src) {\r\n    let paths = graph.slice(0);\r\n    const dist = [];\r\n    const visited = [];\r\n    const length = graph.length;\r\n    for (let i = 0; i < length; i++) {\r\n        dist[i] = INF;\r\n        visited[i] = false;\r\n        paths[i] = graph[i].slice(0);\r\n        paths[i].fill(0);\r\n    }\r\n    dist[src] = 0;\r\n    for (let i = 0; i < length - 1; i++) {\r\n        const u = minDistance(dist, visited);\r\n        visited[u] = true;\r\n        for (let v = 0; v < length; v++) {\r\n            if (!visited[v] && graph[u][v] != 0 && dist[u] !== INF && dist[u] + graph[u][v] < dist[v]) {\r\n                dist[v] = dist[u] + graph[u][v];\r\n                paths[v] = paths[u].slice(0);\r\n                paths[v][v] = paths[u][u] + 1;\r\n            }\r\n        }\r\n    }\r\n    return paths;\r\n}\r\n//# sourceMappingURL=dijkstra.js.map",
  "references": [],
  "map": "{\"version\":3,\"file\":\"dijkstra.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/algorithms/graph/dijkstra.ts\"],\"names\":[],\"mappings\":\"AAAA,MAAM,GAAG,GAAG,MAAM,CAAC,gBAAgB,CAAC;AAEpC,MAAM,WAAW,GAAG,CAAC,IAAc,EAAE,OAAkB,EAAU,EAAE;IAC/D,IAAI,GAAG,GAAG,GAAG,CAAC;IACd,IAAI,QAAQ,GAAG,CAAC,CAAC,CAAC;IAElB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAClC,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE;YACxC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACd,QAAQ,GAAG,CAAC,CAAC;SAChB;KACJ;IACD,OAAO,QAAQ,CAAC;AACpB,CAAC,CAAA;AAED,MAAM,UAAU,QAAQ,CAAC,KAAiB,EAAE,GAAW;IACnD,MAAM,IAAI,GAAa,EAAE,CAAC;IAC1B,MAAM,OAAO,GAAc,EAAE,CAAC;IAC9B,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;IAE5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;QAC7B,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;QACd,OAAO,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;KACtB;IAED,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAEd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QACjC,MAAM,CAAC,GAAG,WAAW,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAErC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAElB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7B,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE;gBACvF,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACnC;SACJ;KACJ;IAED,OAAO,IAAI,CAAC;AAChB,CAAC;AAED,MAAM,UAAU,gBAAgB,CAAC,KAAiB,EAAE,GAAW;IAC3D,IAAI,KAAK,GAAe,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACvC,MAAM,IAAI,GAAa,EAAE,CAAC;IAC1B,MAAM,OAAO,GAAc,EAAE,CAAC;IAC9B,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;IAE5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;QAC7B,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;QACd,OAAO,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;QACnB,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC7B,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACpB;IAED,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAEd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QACjC,MAAM,CAAC,GAAG,WAAW,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QACrC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAElB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7B,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE;gBACvF,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC7B,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;aACjC;SACJ;KACJ;IAED,OAAO,KAAK,CAAC;AACjB,CAAC\"}"
}
