{
  "code": "import { Laya } from \"Laya\";\r\nimport { Script } from \"laya/components/Script\";\r\nimport { BFS, breadthFirstSearch } from \"../algorithms/graph/breadth-first-search\";\r\nimport { depthFirstSearch, DFS } from \"../algorithms/graph/depth-first-search\";\r\nimport { dijkstra, dijkstraWithPath } from \"../algorithms/graph/dijkstra\";\r\nimport { floydWarshall, floydWarshallWithPath } from \"../algorithms/graph/Floyd-warshall\";\r\nimport { kruskal } from \"../algorithms/graph/kruskal\";\r\nimport { prim } from \"../algorithms/graph/prim\";\r\nimport Graph from \"../data_structures/Graph\";\r\nimport { Stack } from \"../data_structures/Stack\";\r\nexport default class GraphTest extends Script {\r\n    constructor() {\r\n        super();\r\n    }\r\n    onEnable() {\r\n        console.log('GraphTest---');\r\n        let graph = new Graph();\r\n        let myVertices = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I'];\r\n        for (let i = 0; i < myVertices.length; i++)\r\n            graph.addVertex(myVertices[i]);\r\n        graph.addEdge('A', 'B');\r\n        graph.addEdge('A', 'C');\r\n        graph.addEdge('A', 'D');\r\n        graph.addEdge('C', 'D');\r\n        graph.addEdge('C', 'G');\r\n        graph.addEdge('D', 'G');\r\n        graph.addEdge('D', 'H');\r\n        graph.addEdge('B', 'E');\r\n        graph.addEdge('B', 'F');\r\n        graph.addEdge('E', 'I');\r\n        console.log('********* printing graph ***********');\r\n        console.log(graph.toString());\r\n        console.log(graph.getAdjList().get('B'));\r\n        const printVertex = (value) => console.log('Visited vertex: ' + value);\r\n        console.log('start from A :');\r\n        breadthFirstSearch(graph, myVertices[0], printVertex);\r\n        console.log('start from D :');\r\n        breadthFirstSearch(graph, 'D', printVertex);\r\n        console.log('********* sorthest path from A- BFS ***********');\r\n        const shortestPathA = BFS(graph, myVertices[0]);\r\n        console.log(shortestPathA.distances);\r\n        console.log(shortestPathA.predecessors);\r\n        console.log('********* sorthest path from D- BFS ***********');\r\n        const shortestPathD = BFS(graph, 'D');\r\n        console.log(shortestPathD.distances);\r\n        console.log(shortestPathD.predecessors);\r\n        console.log('********* from A to all other vertices ***********');\r\n        const fromVertex = myVertices[0];\r\n        for (let i = 1; i < myVertices.length; i++) {\r\n            const toVertex = myVertices[i];\r\n            const path = new Stack();\r\n            for (let v = toVertex; v !== fromVertex; v = shortestPathA.predecessors[v])\r\n                path.push(v);\r\n            path.push(fromVertex);\r\n            let s = path.pop();\r\n            while (!path.isEmpty())\r\n                s += ' _ ' + path.pop();\r\n            console.log(s);\r\n        }\r\n        console.log('********* dfs with callback ***********');\r\n        depthFirstSearch(graph, printVertex);\r\n        console.log('********* topological sort - DFS ***********');\r\n        graph = new Graph();\r\n        for (let i = 0; i < myVertices.length; i++)\r\n            graph.addVertex(myVertices[i]);\r\n        graph.addEdge('A', 'B');\r\n        graph.addEdge('A', 'C');\r\n        graph.addEdge('A', 'D');\r\n        graph.addEdge('C', 'D');\r\n        graph.addEdge('C', 'G');\r\n        graph.addEdge('D', 'G');\r\n        graph.addEdge('D', 'H');\r\n        graph.addEdge('B', 'E');\r\n        graph.addEdge('B', 'F');\r\n        graph.addEdge('E', 'I');\r\n        let result = DFS(graph);\r\n        console.log('discovery', result.discovery);\r\n        console.log('finished', result.finished);\r\n        console.log('predecessors', result.predecessors);\r\n        graph = new Graph(true);\r\n        myVertices = ['A', 'B', 'C', 'D', 'E', 'F'];\r\n        for (let i = 0; i < myVertices.length; i++) {\r\n            graph.addVertex(myVertices[i]);\r\n        }\r\n        graph.addEdge('A', 'C');\r\n        graph.addEdge('A', 'D');\r\n        graph.addEdge('B', 'D');\r\n        graph.addEdge('B', 'E');\r\n        graph.addEdge('C', 'F');\r\n        graph.addEdge('F', 'E');\r\n        result = DFS(graph);\r\n        console.log('discovery', result.discovery);\r\n        console.log('finished', result.finished);\r\n        console.log('predecessors', result.predecessors);\r\n        const fTimes = result.finished;\r\n        let s = '';\r\n        for (let count = 0; count < myVertices.length; count++) {\r\n            let max = 0;\r\n            let maxName = null;\r\n            for (let i = 0; i < myVertices.length; i++) {\r\n                if (fTimes[myVertices[i]] > max) {\r\n                    max = fTimes[myVertices[i]];\r\n                    maxName = myVertices[i];\r\n                }\r\n            }\r\n            s += ' _ ' + maxName;\r\n            delete fTimes[maxName];\r\n        }\r\n        console.log(s);\r\n        const graphM = [\r\n            [0, 2, 4, 0, 0, 0],\r\n            [0, 0, 1, 4, 2, 0],\r\n            [0, 0, 0, 0, 3, 0],\r\n            [0, 0, 0, 0, 0, 2],\r\n            [0, 0, 0, 3, 0, 2],\r\n            [0, 0, 0, 0, 0, 0]\r\n        ];\r\n        console.log(\"********* Dijkstra's Algorithm - Shortest Path ***********\");\r\n        console.log(` \r\n        [0, 2, 4, 0, 0, 0],\r\n        [0, 0, 1, 4, 2, 0],\r\n        [0, 0, 0, 0, 3, 0],\r\n        [0, 0, 0, 0, 0, 2],\r\n        [0, 0, 0, 3, 0, 2],\r\n        [0, 0, 0, 0, 0, 0]`);\r\n        let dist = dijkstra(graphM, 0);\r\n        dist.forEach((v, i) => { console.log(i + '\\t\\t' + v); });\r\n        let distPath = dijkstraWithPath(graphM, 0);\r\n        distPath.forEach((v, i) => console.log(v + '\\t\\t'));\r\n        console.log('********* Floyd-Warshall Algorithm - All-Pairs Shortest Path ***********');\r\n        const INF = Infinity;\r\n        const graphN = [\r\n            [INF, 2, 4, INF, INF, INF],\r\n            [INF, INF, 1, 4, 2, INF],\r\n            [INF, INF, INF, INF, 3, INF],\r\n            [INF, INF, INF, INF, INF, 2],\r\n            [INF, INF, INF, 3, INF, 2],\r\n            [INF, INF, INF, INF, INF, INF]\r\n        ];\r\n        let distN = floydWarshall(graphN);\r\n        let pathN = floydWarshallWithPath(graphN);\r\n        const graphO = [\r\n            [INF, 3, 8, INF, -4],\r\n            [INF, INF, INF, 1, 7],\r\n            [INF, 4, INF, INF, INF],\r\n            [2, INF, -5, INF, INF],\r\n            [INF, INF, INF, 6, INF]\r\n        ];\r\n        let distO = floydWarshall(graphO);\r\n        let pathO = floydWarshallWithPath(graphO);\r\n        let printMatrix = (m) => {\r\n            let s = '';\r\n            for (let i = 0; i < m.length; ++i) {\r\n                s = '';\r\n                for (var j = 0; j < m.length; ++j) {\r\n                    if (m[i][j] === INF) {\r\n                        s += ' ';\r\n                        s += 'INF ';\r\n                    }\r\n                    else {\r\n                        if (m[i][j] >= 0)\r\n                            s += ' ';\r\n                        s += m[i][j] + '   ';\r\n                    }\r\n                }\r\n                console.log(s);\r\n            }\r\n        };\r\n        console.log('\\n');\r\n        console.log('floyd dist');\r\n        printMatrix(distN);\r\n        console.log('\\n');\r\n        printMatrix(distO);\r\n        console.log('\\n');\r\n        console.log('floyd path');\r\n        printMatrix(pathN);\r\n        console.log('\\n');\r\n        printMatrix(pathO);\r\n        const gt = (name) => {\r\n            return this.owner.getChildByName(name);\r\n        };\r\n        let mm = [\r\n            [gt('m00'), gt('m10'), gt('m20'), gt('m30'), gt('m40'), gt('m50')],\r\n            [gt('m01'), gt('m11'), gt('m21'), gt('m31'), gt('m41'), gt('m51')],\r\n            [gt('m02'), gt('m12'), gt('m22'), gt('m32'), gt('m42'), gt('m52')],\r\n            [gt('m03'), gt('m13'), gt('m23'), gt('m33'), gt('m43'), gt('m53')],\r\n            [gt('m04'), gt('m14'), gt('m24'), gt('m34'), gt('m44'), gt('m54')],\r\n            [gt('m05'), gt('m15'), gt('m25'), gt('m35'), gt('m45'), gt('m55')]\r\n        ];\r\n        let kl = [];\r\n        let il = [];\r\n        let jl = [];\r\n        for (let k = 0; k < 6; k++)\r\n            for (let i = 0; i < 6; i++)\r\n                for (let j = 0; j < 6; j++) {\r\n                    kl.push(i, k);\r\n                    il.push(k, j);\r\n                    jl.push(i, j);\r\n                }\r\n        Laya.timer.loop(300, this, () => {\r\n            let a = 0, b = 0;\r\n            if (kl.length > 0) {\r\n                a = kl.shift(), b = kl.shift();\r\n                mm[a][b]['texture'] = 'test/t1.png';\r\n            }\r\n            if (il.length > 0) {\r\n                a = il.shift(), b = il.shift();\r\n                mm[a][b]['texture'] = 'test/c1.png';\r\n            }\r\n            if (jl.length > 0) {\r\n                a = jl.shift(), b = jl.shift();\r\n                mm[a][b]['texture'] = 'test/tra.png';\r\n            }\r\n        });\r\n        const graphP = [\r\n            [0, 2, 4, 0, 0, 0],\r\n            [2, 0, 1, 4, 2, 0],\r\n            [4, 1, 0, 0, 3, 0],\r\n            [0, 4, 0, 0, 3, 2],\r\n            [0, 2, 3, 3, 0, 2],\r\n            [0, 0, 0, 2, 2, 0]\r\n        ];\r\n        console.log(\"********* Prim's Algorithm - Minimum Spanning Tree ***********\");\r\n        const pathP = prim(graphP);\r\n        console.log('Edge   Weight');\r\n        for (let i = 1; i < graphP.length; i++)\r\n            console.log(pathP[i] + ' - ' + i + '   ' + graphP[i][pathP[i]]);\r\n        console.log('prims parent:', pathP);\r\n        console.log('\\n');\r\n        console.log('********* Kruskal Algorithm - Minimum Spanning Tree ***********');\r\n        const pathQ = kruskal(graphP);\r\n        console.log('Edge   Weight');\r\n        for (let i = 0; i < graphP.length - 1; i++)\r\n            console.log(pathQ[i][0] + ' - ' + pathQ[i][1] + '   ' + pathQ[i][2]);\r\n        console.log('\\n');\r\n        console.log('kruskals parent:', pathQ);\r\n        let uf = new UnionFind([\"A\", \"B\", \"C\", \"D\", \"E\"]);\r\n        uf.union(\"A\", \"B\");\r\n        uf.union(\"A\", \"C\");\r\n        uf.union(\"C\", \"D\");\r\n        console.log(uf.connected(\"B\", \"E\"));\r\n        console.log(uf.connected(\"B\", \"D\"));\r\n        uf = new UnionFind([0, 1, 2, 3, 4]);\r\n        uf.union(0, 1);\r\n        uf.union(0, 2);\r\n        uf.union(2, 3);\r\n        console.log(uf.connected(1, 4));\r\n        console.log(uf.connected(1, 3));\r\n        let tb = [];\r\n        tb[77.8] = 0.134739;\r\n        let ssin = (n) => {\r\n            return tb[n];\r\n        };\r\n        console.time('a1');\r\n        let aa = 1;\r\n        for (let i = 0; i < 10000; i++) {\r\n            aa = Math.sin(77.8);\r\n        }\r\n        console.timeEnd('a1');\r\n        console.time('a2');\r\n        let bb = 1;\r\n        for (let j = 0; j < 10000; j++) {\r\n            bb = ssin(77.8);\r\n        }\r\n        console.timeEnd('a2');\r\n        console.time('a3');\r\n        let cc = 1;\r\n        for (let j = 0; j < 10000; j++) {\r\n            cc = tb[77.8];\r\n        }\r\n        console.timeEnd('a3');\r\n        let tb1 = [];\r\n        tb1[77.8] = 0.134739;\r\n        console.time('a4');\r\n        let dd = 1;\r\n        for (let j = 0; j < 10000; j++) {\r\n            dd = tb1[77.8];\r\n        }\r\n        console.timeEnd('a4');\r\n        let ff = (a, b) => {\r\n            return b(a);\r\n        };\r\n        console.time('a5');\r\n        let ee = 1;\r\n        for (let j = 0; j < 10000; j++) {\r\n            ee = ff(77.8, ssin);\r\n        }\r\n        console.timeEnd('a5');\r\n    }\r\n}\r\nclass UnionFind {\r\n    constructor(elements) {\r\n        this.count = elements.length;\r\n        this.parent = [];\r\n        elements.forEach(e => (this.parent[e] = e));\r\n    }\r\n    union(a, b) {\r\n        let rootA = this.find(a);\r\n        let rootB = this.find(b);\r\n        if (rootA === rootB)\r\n            return;\r\n        if (rootA < rootB) {\r\n            if (this.parent[b] != b)\r\n                this.union(this.parent[b], a);\r\n            this.parent[b] = this.parent[a];\r\n        }\r\n        else {\r\n            if (this.parent[a] != a)\r\n                this.union(this.parent[a], b);\r\n            this.parent[a] = this.parent[b];\r\n        }\r\n    }\r\n    find(a) {\r\n        while (this.parent[a] !== a) {\r\n            a = this.parent[a];\r\n        }\r\n        return a;\r\n    }\r\n    connected(a, b) {\r\n        return this.find(a) === this.find(b);\r\n    }\r\n}\r\n//# sourceMappingURL=GraphTest.js.map",
  "references": [
    "D:/widgets/LayaDataStructuresAlgorithms/libs/Laya.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/components/Script.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/display/Scene.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/src/algorithms/graph/breadth-first-search.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/src/algorithms/graph/depth-first-search.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/src/algorithms/graph/dijkstra.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/src/algorithms/graph/Floyd-warshall.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/src/algorithms/graph/kruskal.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/src/algorithms/graph/prim.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/src/data_structures/Graph.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/src/data_structures/Stack.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/src/GameConfig.ts"
  ],
  "map": "{\"version\":3,\"file\":\"GraphTest.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/script/GraphTest.ts\"],\"names\":[],\"mappings\":\"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\"}"
}
