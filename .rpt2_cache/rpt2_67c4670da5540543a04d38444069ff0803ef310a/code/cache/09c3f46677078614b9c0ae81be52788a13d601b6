{
  "code": "import { WebGLContext } from \"../WebGLContext\";\r\nexport class BlendMode {\r\n    static _init_(gl) {\r\n        BlendMode.fns = [BlendMode.BlendNormal, BlendMode.BlendAdd, BlendMode.BlendMultiply, BlendMode.BlendScreen, BlendMode.BlendOverlay, BlendMode.BlendLight, BlendMode.BlendMask, BlendMode.BlendDestinationOut];\r\n        BlendMode.targetFns = [BlendMode.BlendNormalTarget, BlendMode.BlendAddTarget, BlendMode.BlendMultiplyTarget, BlendMode.BlendScreenTarget, BlendMode.BlendOverlayTarget, BlendMode.BlendLightTarget, BlendMode.BlendMask, BlendMode.BlendDestinationOut];\r\n    }\r\n    static BlendNormal(gl) {\r\n        WebGLContext.setBlendFunc(gl, gl.ONE, gl.ONE_MINUS_SRC_ALPHA, true);\r\n    }\r\n    static BlendAdd(gl) {\r\n        WebGLContext.setBlendFunc(gl, gl.ONE, gl.DST_ALPHA, true);\r\n    }\r\n    static BlendMultiply(gl) {\r\n        WebGLContext.setBlendFunc(gl, gl.DST_COLOR, gl.ONE_MINUS_SRC_ALPHA, true);\r\n    }\r\n    static BlendScreen(gl) {\r\n        WebGLContext.setBlendFunc(gl, gl.ONE, gl.ONE, true);\r\n    }\r\n    static BlendOverlay(gl) {\r\n        WebGLContext.setBlendFunc(gl, gl.ONE, gl.ONE_MINUS_SRC_COLOR, true);\r\n    }\r\n    static BlendLight(gl) {\r\n        WebGLContext.setBlendFunc(gl, gl.ONE, gl.ONE, true);\r\n    }\r\n    static BlendNormalTarget(gl) {\r\n        WebGLContext.setBlendFunc(gl, gl.ONE, gl.ONE_MINUS_SRC_ALPHA, true);\r\n    }\r\n    static BlendAddTarget(gl) {\r\n        WebGLContext.setBlendFunc(gl, gl.ONE, gl.DST_ALPHA, true);\r\n    }\r\n    static BlendMultiplyTarget(gl) {\r\n        WebGLContext.setBlendFunc(gl, gl.DST_COLOR, gl.ONE_MINUS_SRC_ALPHA, true);\r\n    }\r\n    static BlendScreenTarget(gl) {\r\n        WebGLContext.setBlendFunc(gl, gl.ONE, gl.ONE, true);\r\n    }\r\n    static BlendOverlayTarget(gl) {\r\n        WebGLContext.setBlendFunc(gl, gl.ONE, gl.ONE_MINUS_SRC_COLOR, true);\r\n    }\r\n    static BlendLightTarget(gl) {\r\n        WebGLContext.setBlendFunc(gl, gl.ONE, gl.ONE, true);\r\n    }\r\n    static BlendMask(gl) {\r\n        WebGLContext.setBlendFunc(gl, gl.ZERO, gl.SRC_ALPHA, true);\r\n    }\r\n    static BlendDestinationOut(gl) {\r\n        WebGLContext.setBlendFunc(gl, gl.ZERO, gl.ZERO, true);\r\n    }\r\n}\r\nBlendMode.activeBlendFunction = null;\r\nBlendMode.NAMES = [\"normal\", \"add\", \"multiply\", \"screen\", \"overlay\", \"light\", \"mask\", \"destination-out\"];\r\nBlendMode.TOINT = { \"normal\": 0, \"add\": 1, \"multiply\": 2, \"screen\": 3, \"overlay\": 4, \"light\": 5, \"mask\": 6, \"destination-out\": 7, \"lighter\": 1 };\r\nBlendMode.NORMAL = \"normal\";\r\nBlendMode.ADD = \"add\";\r\nBlendMode.MULTIPLY = \"multiply\";\r\nBlendMode.SCREEN = \"screen\";\r\nBlendMode.OVERLAY = \"overlay\";\r\nBlendMode.LIGHT = \"light\";\r\nBlendMode.MASK = \"mask\";\r\nBlendMode.DESTINATIONOUT = \"destination-out\";\r\nBlendMode.LIGHTER = \"lighter\";\r\nBlendMode.fns = [];\r\nBlendMode.targetFns = [];\r\n",
  "references": [
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/webgl/WebGLContext.ts"
  ],
  "dts": {
    "name": "D:/widgets/LayaDataStructuresAlgorithms/.rpt2_cache/placeholder/laya/webgl/canvas/BlendMode.d.ts",
    "writeByteOrderMark": false,
    "text": "import { WebGLContext } from \"../WebGLContext\";\r\nexport declare class BlendMode {\r\n    static activeBlendFunction: Function;\r\n    static NAMES: any[];\r\n    static TOINT: any;\r\n    static NORMAL: string;\r\n    static ADD: string;\r\n    static MULTIPLY: string;\r\n    static SCREEN: string;\r\n    static OVERLAY: string;\r\n    static LIGHT: string;\r\n    static MASK: string;\r\n    static DESTINATIONOUT: string;\r\n    static LIGHTER: string;\r\n    static fns: any[];\r\n    static targetFns: any[];\r\n    static _init_(gl: WebGLContext): void;\r\n    static BlendNormal(gl: WebGLRenderingContext): void;\r\n    static BlendAdd(gl: WebGLRenderingContext): void;\r\n    static BlendMultiply(gl: WebGLRenderingContext): void;\r\n    static BlendScreen(gl: WebGLRenderingContext): void;\r\n    static BlendOverlay(gl: WebGLRenderingContext): void;\r\n    static BlendLight(gl: WebGLRenderingContext): void;\r\n    static BlendNormalTarget(gl: WebGLRenderingContext): void;\r\n    static BlendAddTarget(gl: WebGLRenderingContext): void;\r\n    static BlendMultiplyTarget(gl: WebGLRenderingContext): void;\r\n    static BlendScreenTarget(gl: WebGLRenderingContext): void;\r\n    static BlendOverlayTarget(gl: WebGLRenderingContext): void;\r\n    static BlendLightTarget(gl: WebGLRenderingContext): void;\r\n    static BlendMask(gl: WebGLRenderingContext): void;\r\n    static BlendDestinationOut(gl: WebGLRenderingContext): void;\r\n}\r\n"
  }
}
