{
  "code": "export default class Set {\r\n    constructor() {\r\n        this.items = {};\r\n    }\r\n    add(element) {\r\n        if (!this.has(element)) {\r\n            this.items[element] = element;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    delete(element) {\r\n        if (this.has(element)) {\r\n            delete this.items[element];\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    has(element) {\r\n        return Object.prototype.hasOwnProperty.call(this.items, element);\r\n    }\r\n    size() {\r\n        return Object.keys(this.items).length;\r\n    }\r\n    values() {\r\n        let values = [];\r\n        for (let key in this.items)\r\n            if (this.items.hasOwnProperty(key))\r\n                values.push(key);\r\n        return values;\r\n    }\r\n    union(otherSet) {\r\n        const unionSet = new Set();\r\n        this.values().forEach(value => unionSet.add(value));\r\n        otherSet.values().forEach(value => unionSet.add(value));\r\n        return unionSet;\r\n    }\r\n    intersection(otherSet) {\r\n        const intersectionSet = new Set();\r\n        const values = this.values();\r\n        const otherValues = otherSet.values();\r\n        let biggerSet = values;\r\n        let smallerSet = otherValues;\r\n        if (otherValues.length - values.length > 0) {\r\n            biggerSet = otherValues;\r\n            smallerSet = values;\r\n        }\r\n        smallerSet.forEach(value => {\r\n            if (biggerSet.indexOf(value) != -1)\r\n                intersectionSet.add(value);\r\n        });\r\n        return intersectionSet;\r\n    }\r\n    difference(otherSet) {\r\n        const differenceSet = new Set();\r\n        this.values().forEach(value => {\r\n            if (!otherSet.has(value))\r\n                differenceSet.add(value);\r\n        });\r\n        return differenceSet;\r\n    }\r\n    isSubsetOf(otherSet) {\r\n        if (this.size() > otherSet.size())\r\n            return false;\r\n        let isSubset = true;\r\n        this.values().every(value => {\r\n            if (!otherSet.has(value)) {\r\n                isSubset = false;\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        return isSubset;\r\n    }\r\n}\r\n//# sourceMappingURL=Set.js.map",
  "references": [],
  "map": "{\"version\":3,\"file\":\"Set.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/data_structures/Set.ts\"],\"names\":[],\"mappings\":\"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\"}"
}
