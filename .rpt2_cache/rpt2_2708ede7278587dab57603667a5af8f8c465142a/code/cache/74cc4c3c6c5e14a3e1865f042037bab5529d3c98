{
  "code": "import { Script } from \"laya/components/Script\";\r\nconst lele = 3.14;\r\nexport default class UnitConsole extends Script {\r\n    constructor() {\r\n        super();\r\n        const lalala = 9;\r\n    }\r\n    onEnable() {\r\n        console.time('a1');\r\n        let aa = 1;\r\n        for (let i = 0; i < 1000; i++) {\r\n            aa *= 2;\r\n        }\r\n        console.timeEnd('a1');\r\n        console.time('a2');\r\n        let bb = 1;\r\n        for (let j = 0; j < 1000; j++) {\r\n            bb << 1;\r\n        }\r\n        console.timeEnd('a2');\r\n        console.log(lele);\r\n        let [a, b] = [1, 2];\r\n        console.log(a, ' / ', b);\r\n        [a, b] = [b, a];\r\n        console.log(a, ' / ', b);\r\n        let c = a ** 3;\r\n        console.log(`c:${c}`);\r\n        const fibonacci = [];\r\n        fibonacci[0] = 1;\r\n        fibonacci[1] = 1;\r\n        for (let i = 2; i < 20; i++) {\r\n            fibonacci[i] = fibonacci[i - 1] + fibonacci[i - 2];\r\n        }\r\n        console.log(fibonacci);\r\n        fibonacci.splice(5, 0, -1, -2, -3);\r\n        console.log(fibonacci);\r\n        let tm = [\r\n            [1, 2],\r\n            [3, 4],\r\n            [5, 6]\r\n        ];\r\n        for (let i = 0; i < tm.length; i++) {\r\n            for (let j = 0; j < tm[0].length; j++) {\r\n                console.log(tm[i][j]);\r\n            }\r\n        }\r\n        console.table(tm);\r\n        const m333 = [];\r\n        for (let i = 0; i < 3; i++) {\r\n            m333[i] = [];\r\n            for (let j = 0; j < 3; j++) {\r\n                m333[i][j] = [];\r\n                for (let k = 0; k < 3; k++) {\r\n                    m333[i][j][k] = i + j + k;\r\n                }\r\n            }\r\n        }\r\n        console.log(m333);\r\n        console.table(m333);\r\n        let cc = [1, 3, 5, 7, 8];\r\n        let mtc = (x) => {\r\n            console.log(x);\r\n            return x % 2 === 0;\r\n        };\r\n        console.log('every:', cc.every(mtc));\r\n        console.log('some', cc.some(mtc));\r\n        console.log('---------');\r\n        cc.forEach((a, b, c) => { a *= 2; console.log(a, b, c); });\r\n        console.log(cc);\r\n        console.log('map:', cc.map(mtc));\r\n        console.log('filter:', cc.filter(mtc));\r\n        console.log('reduce:', cc.reduce((m, n) => { return m + n; }));\r\n        let dd = [1, 2, 3, 4, 5];\r\n        let iterator = cc[Symbol.iterator]();\r\n        console.log(iterator);\r\n        for (let i = 0; i < 5; i++)\r\n            console.log(iterator.next().value);\r\n        console.log('---------');\r\n        iterator = cc[Symbol.iterator]();\r\n        for (let nn of iterator)\r\n            console.log(nn);\r\n        let [entries, keys, values] = [cc.entries(), cc.keys(), cc.values()];\r\n        for (let i of entries)\r\n            console.log('entries:', i);\r\n        for (let i of keys)\r\n            console.log('keys:', i);\r\n        for (let i of values)\r\n            console.log('values:', i);\r\n        let ee = Array.from(cc);\r\n        console.log('from:', ee);\r\n        let ff = Array.from(ee, a => a % 2 == 1);\r\n        console.log('from cb:', ff);\r\n        let gg = Array.of(1);\r\n        gg = Array.of(...ee);\r\n        console.log('of:', gg);\r\n        let hh = Array.of(...gg);\r\n        hh.fill(0);\r\n        console.log('fill:', hh);\r\n        let ii = Array.from(gg);\r\n        ii.copyWithin(0, 3);\r\n        console.log('copyWithin:', ii);\r\n        let jj = new Array(15);\r\n        jj.fill(1);\r\n        for (let i = 0; i < 15; i++)\r\n            jj[i] = jj[i] + i;\r\n        let multiple3 = (a, b, c) => { return a % 3 == 0; };\r\n        console.log(jj);\r\n        console.log('find:', jj.find(multiple3));\r\n        console.log('findIndex:', jj.findIndex(multiple3));\r\n        const friends = [\r\n            { name: 'john', age: 30 },\r\n            { name: 'ana', age: 20 },\r\n            { name: 'chris', age: 25 },\r\n        ];\r\n        let comparePenson = (z1, z2) => {\r\n            let rt = 0;\r\n            z1.age < z2.age ? rt = -1 : rt = 1;\r\n            return rt;\r\n        };\r\n        console.log('Array sort:', friends.sort(comparePenson));\r\n        console.log('join:', jj.join('~'));\r\n        let lt = 50;\r\n        let int16 = new Int16Array(lt);\r\n        let array16 = [];\r\n        array16.length = lt;\r\n        for (let i = 0; i < lt; i++)\r\n            int16[i] = i++;\r\n        console.log('TypedArray:', int16);\r\n    }\r\n}\r\n",
  "references": [
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/components/Script.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/libs/Laya.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/src/data_structures/Stack.ts"
  ]
}
