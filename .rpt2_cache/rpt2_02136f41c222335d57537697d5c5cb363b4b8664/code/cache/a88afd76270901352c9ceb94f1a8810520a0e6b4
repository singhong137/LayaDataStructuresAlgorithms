{
  "code": "import { Script } from \"laya/components/Script\";\r\nimport { Stack, StackArray } from \"../data_structures/Stack\";\r\nexport default class StackTest extends Script {\r\n    constructor() {\r\n        super();\r\n    }\r\n    onEnable() {\r\n        const stack = new StackArray();\r\n        console.log(stack.isEmpty());\r\n        stack.push(5);\r\n        stack.push(8);\r\n        console.log(stack.peek());\r\n        stack.push(11);\r\n        console.log(stack.size());\r\n        console.log(stack.isEmpty());\r\n        stack.push(15);\r\n        stack.pop();\r\n        stack.pop();\r\n        console.log(stack.size());\r\n        const stack1 = new Stack();\r\n        stack1.push(5);\r\n        stack1.push(8);\r\n        stack1.clear();\r\n        let decimal2Binary = (decNum) => {\r\n            const remStack = new Stack();\r\n            let number = decNum;\r\n            let rem;\r\n            let binaryString = '';\r\n            while (number > 0) {\r\n                rem = Math.floor(number % 2);\r\n                remStack.push(rem);\r\n                number = Math.floor(number / 2);\r\n            }\r\n            while (!remStack.isEmpty()) {\r\n                binaryString += remStack.pop().toString();\r\n            }\r\n            return binaryString;\r\n        };\r\n        console.log('decimal2Binary:');\r\n        console.log(decimal2Binary(233));\r\n        console.log(decimal2Binary(10));\r\n        console.log(decimal2Binary(1000));\r\n        console.log(decimal2Binary(13));\r\n        let baseConverter = (decNumber, base) => {\r\n            const remStack = new Stack();\r\n            const digits = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n            let number = decNumber;\r\n            let rem;\r\n            let baseString = '';\r\n            if (!(base >= 2 && base <= 36))\r\n                return '';\r\n            while (number > 0) {\r\n                rem = Math.floor(number % base);\r\n                remStack.push(rem);\r\n                number = Math.floor(number / base);\r\n            }\r\n            while (!remStack.isEmpty())\r\n                baseString += digits[remStack.pop()];\r\n            return baseString;\r\n        };\r\n        console.log('baseConverter:');\r\n        console.log(baseConverter(100345, 2));\r\n        console.log(baseConverter(100345, 8));\r\n        console.log(baseConverter(100345, 16));\r\n        console.log(baseConverter(100345, 35));\r\n    }\r\n}\r\n//# sourceMappingURL=StackTest.js.map",
  "references": [
    "D:/widgets/LayaDataStructuresAlgorithms/libs/laya/components/Script.ts",
    "D:/widgets/LayaDataStructuresAlgorithms/src/data_structures/Stack.ts"
  ],
  "map": "{\"version\":3,\"file\":\"StackTest.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/script/StackTest.ts\"],\"names\":[],\"mappings\":\"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\"}"
}
